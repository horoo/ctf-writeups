Gadgets information
============================================================
0x0000000000403e1d : adc byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 + 1] ; ret 0x8b48
0x0000000000401de0 : adc byte ptr [rax - 9], cl ; fadd dword ptr [rbx - 0x76b7f020] ; ret 0x5eb
0x0000000000408257 : adc byte ptr [rax], bh ; nop ; leave ; ret
0x00000000004030d4 : add al, 0x89 ; ret 0x8b48
0x00000000004010b5 : add al, ch ; and eax, 0x90fffffb ; leave ; ret
0x0000000000400f91 : add al, ch ; imul edi, ebx, 0x5d90ffff ; ret
0x0000000000400d3f : add al, ch ; mov ebx, 0x90fffffd ; pop rbp ; ret
0x0000000000400f48 : add al, ch ; ret 0xfffb
0x0000000000401472 : add bh, byte ptr [rax + 1] ; nop ; leave ; ret
0x00000000004085bf : add bl, dh ; ret
0x0000000000402536 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000401ac3 : add byte ptr [rax + 0x39], cl ; ret 0x1676
0x000000000040322d : add byte ptr [rax + 0x39], cl ; ret 0x1c76
0x0000000000403413 : add byte ptr [rax + 0x39], cl ; ret 0x6d72
0x000000000040103e : add byte ptr [rax - 0x77], cl ; ret 0x458b
0x0000000000402eba : add byte ptr [rax - 9], cl ; fmul dword ptr [rax + 0x21] ; ret 0x8b48
0x00000000004085bd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402534 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000004085bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000401191 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000401349 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x0000000000400c5c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004085bc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004023fc : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x0000000000400a8b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040939a : add byte ptr [rax], al ; in al, 3 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0xffff
0x0000000000403651 : add byte ptr [rax], al ; mov eax, 0 ; nop ; leave ; ret
0x0000000000400dea : add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000400efb : add byte ptr [rax], al ; nop ; pop rbp ; ret
0x0000000000400c5e : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004085be : add byte ptr [rax], al ; ret
0x00000000004092fe : add byte ptr [rax], al ; ret 0xff99
0x0000000000402535 : add byte ptr [rax], al ; sub rdx, rax ; mov rax, rdx ; mov edx, eax ; jmp 0x40254f
0x0000000000402b92 : add byte ptr [rax], al ; sub rdx, rax ; mov rax, rdx ; mov edx, eax ; jmp 0x402bac
0x0000000000403b88 : add byte ptr [rax], al ; sub rdx, rax ; mov rax, rdx ; mov edx, eax ; jmp 0x403ba2
0x0000000000404bb4 : add byte ptr [rax], al ; sub rdx, rax ; mov rax, rdx ; mov edx, eax ; jmp 0x404bce
0x0000000000404db0 : add byte ptr [rax], al ; sub rdx, rax ; mov rax, rdx ; mov edx, eax ; jmp 0x404dca
0x00000000004054fa : add byte ptr [rax], al ; sub rdx, rax ; mov rax, rdx ; mov edx, eax ; jmp 0x405514
0x0000000000406c63 : add byte ptr [rax], al ; sub rdx, rax ; mov rax, rdx ; mov edx, eax ; jmp 0x406c7d
0x000000000040939e : add byte ptr [rax], al ; xchg eax, esp ; ret 0xffff
0x0000000000403652 : add byte ptr [rax], bh ; nop ; leave ; ret
0x0000000000400cc8 : add byte ptr [rcx], al ; ret
0x00000000004023fe : add byte ptr [rcx], ch ; ret 0xd089
0x0000000000403cb5 : add byte ptr [rdi], cl ; ret 0xc289
0x0000000000406f48 : add cl, byte ptr [rax - 0x77] ; ret 0x8b48
0x00000000004061ed : add cl, ch ; ret 0xb
0x00000000004033f2 : add dword ptr [rax - 0x77], ecx ; ret 0x458b
0x0000000000401d10 : add dword ptr [rax - 0x77], ecx ; ret 0x8b48
0x000000000040611a : add dword ptr [rax - 0x7ba74b8], edx ; nop ; leave ; ret
0x0000000000400de8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000400ef9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x0000000000401105 : add dword ptr [rbx + 0x7e1ffc7d], eax ; ret
0x0000000000402662 : add eax, 0x10 ; nop ; leave ; ret
0x000000000040848a : add eax, 0x201999 ; nop ; pop rbp ; ret
0x00000000004083f4 : add eax, 0x201a27 ; nop ; pop rbp ; ret
0x00000000004083e6 : add eax, 0x201a2d ; nop ; pop rbp ; ret
0x0000000000400cc4 : add eax, 0x208d86 ; add ebx, esi ; ret
0x0000000000408072 : add eax, 0x8b8 ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000401ac1 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x1676
0x000000000040322b : add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x1c76
0x0000000000400cc9 : add ebx, esi ; ret
0x0000000000401e78 : add ecx, dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000400a8e : add esp, 8 ; ret
0x0000000000402661 : add rax, 0x10 ; nop ; leave ; ret
0x0000000000400a8d : add rsp, 8 ; ret
0x0000000000401abf : and byte ptr [rax + 3], 0 ; add byte ptr [rax + 0x39], cl ; ret 0x1676
0x0000000000403229 : and byte ptr [rax + 3], 0 ; add byte ptr [rax + 0x39], cl ; ret 0x1c76
0x0000000000400cc7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004083e9 : and byte ptr [rax], al ; nop ; pop rbp ; ret
0x00000000004010b7 : and eax, 0x90fffffb ; leave ; ret
0x0000000000401de4 : and eax, 0xf ; mov rdx, rax ; jmp 0x401df6
0x0000000000401e20 : and eax, 0xf ; mov rdx, rax ; jmp 0x401e32
0x0000000000403708 : and eax, 0xf ; mov rdx, rax ; jmp 0x40371a
0x0000000000401c5a : call 0x49021daa
0x0000000000401c59 : call 0x49021dab
0x0000000000405997 : call 0x49025ae7
0x0000000000405996 : call 0x49025ae8
0x00000000004078a0 : call 0x4902a1f0
0x000000000040789f : call 0x4902a1f1
0x00000000004078d1 : call 0x4902a221
0x00000000004078d0 : call 0x4902a222
0x0000000000404e2b : call 0x502d17b
0x0000000000404e2a : call 0x502d17c
0x0000000000404e23 : call 0xffffffffc2c9966b
0x0000000000408599 : call qword ptr [r12 + rbx*8]
0x0000000000409683 : call qword ptr [rax]
0x0000000000408285 : call qword ptr [rdi]
0x0000000000405b05 : call qword ptr [rsi]
0x000000000040859a : call qword ptr [rsp + rbx*8]
0x0000000000400cee : call rax
0x0000000000402870 : clc ; jmp 0x402838
0x000000000040286f : clc ; jmp 0x402839
0x00000000004084b2 : clc ; leave ; ret
0x0000000000407765 : clc ; mov rax, qword ptr [rbp - 8] ; nop ; leave ; ret
0x0000000000403cc9 : clc ; nop ; leave ; ret
0x0000000000401104 : cld ; add dword ptr [rbx + 0x7e1ffc7d], eax ; ret
0x00000000004083d8 : cld ; mov eax, dword ptr [rbp - 4] ; nop ; leave ; ret
0x000000000040128d : cld ; mov rax, qword ptr [rax*8 + 0x408d20] ; jmp rax
0x00000000004083db : cld ; nop ; leave ; ret
0x00000000004061eb : cmp al, 0x20 ; add cl, ch ; ret 0xb
0x0000000000403cc5 : cmp byte ptr [rax - 0x75], cl ; clc ; nop ; leave ; ret
0x0000000000401d93 : cmp dword ptr [rbp - 4], 0x1f ; jbe 0x401d58 ; pop rbp ; ret
0x0000000000401106 : cmp dword ptr [rbp - 4], 0x1f ; jle 0x4010d7 ; nop ; leave ; ret
0x0000000000402298 : dec byte ptr [rax - 0x77] ; ret 0x8b48
0x0000000000403363 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000402f91 : dec dword ptr [rax + 0x29] ; ret 0x8b48
0x000000000040303d : dec dword ptr [rax + 0x2b] ; fmul dword ptr [r8 - 0x77] ; ret 0x8b48
0x00000000004028fd : dec dword ptr [rax + 1] ; ret 0x8b48
0x00000000004084ae : dec dword ptr [rax - 0x75] ; clc ; leave ; ret
0x00000000004080b0 : dec dword ptr [rax - 0x75] ; clc ; nop ; leave ; ret
0x000000000040286c : dec dword ptr [rax - 0x77] ; clc ; jmp 0x40283c
0x0000000000400dac : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004028dd : dec dword ptr [rax - 0x7d] ; enter 0x4801, -0x77 ; ret 0x8b48
0x0000000000406f44 : dec dword ptr [rax - 0x7d] ; enter 0x4802, -0x77 ; ret 0x8b48
0x0000000000401e74 : dec dword ptr [rax - 0x7d] ; enter 0x4803, -0x77 ; ret 0x8b48
0x0000000000404f02 : dec dword ptr [rax - 0x7d] ; ret 0x484a
0x0000000000404d81 : dec dword ptr [rbx - 0x7cb71bab] ; ret 0x484a
0x000000000040567b : dec dword ptr [rbx - 0x7cb743ab] ; ret 0x484a
0x0000000000404efc : dec dword ptr [rbx - 0x8f6b] ; dec dword ptr [rax - 0x7d] ; ret 0x484a
0x00000000004083d5 : dec dword ptr [rcx + 0x458bfc45] ; cld ; nop ; leave ; ret
0x0000000000401761 : dec ecx ; ret
0x00000000004078cd : enter -0x74b8, 0x45 ; call 0x4902a225
0x0000000000406f93 : enter -0x7cb8, -0x38 ; add cl, byte ptr [rax - 0x77] ; ret 0x8b48
0x0000000000407dc3 : enter -0x7cb8, -0x38 ; add ecx, dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000401d0f : enter 0x4801, -0x77 ; ret 0x8b48
0x0000000000406f47 : enter 0x4802, -0x77 ; ret 0x8b48
0x0000000000401e77 : enter 0x4803, -0x77 ; ret 0x8b48
0x0000000000401de3 : fadd dword ptr [rbx - 0x76b7f020] ; ret 0x5eb
0x0000000000403e20 : fmul dword ptr [r8 + 1] ; ret 0x8b48
0x0000000000404e1f : fmul dword ptr [r8 - 0x3f] ; call 0xffffffffc2c9966f
0x0000000000403040 : fmul dword ptr [r8 - 0x77] ; ret 0x8b48
0x0000000000401d0b : fmul dword ptr [r8 - 0x7d] ; enter 0x4801, -0x77 ; ret 0x8b48
0x0000000000407de7 : fmul dword ptr [r8 - 0x7d] ; enter 0x4803, -0x77 ; ret 0x8b48
0x0000000000402ebd : fmul dword ptr [rax + 0x21] ; ret 0x8b48
0x0000000000403e21 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000404e20 : fmul dword ptr [rax - 0x3f] ; call 0xffffffffc2c9966e
0x0000000000401ba6 : fmul dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000401d0c : fmul dword ptr [rax - 0x7d] ; enter 0x4801, -0x77 ; ret 0x8b48
0x0000000000407de8 : fmul dword ptr [rax - 0x7d] ; enter 0x4803, -0x77 ; ret 0x8b48
0x0000000000404ea4 : fmul dword ptr [rcx] ; ret 0x8b48
0x000000000040859c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000400f93 : imul edi, ebx, 0x5d90ffff ; ret
0x000000000040939c : in al, 3 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0xffff
0x0000000000400ce9 : int1 ; push rbp ; mov rbp, rsp ; call rax
0x0000000000401d97 : jbe 0x401d54 ; pop rbp ; ret
0x0000000000400c4d : je 0x400c68 ; pop rbp ; mov edi, 0x609a20 ; jmp rax
0x0000000000400c9b : je 0x400cb0 ; pop rbp ; mov edi, 0x609a20 ; jmp rax
0x0000000000400ce8 : je 0x400ce1 ; push rbp ; mov rbp, rsp ; call rax
0x000000000040110a : jle 0x4010d3 ; nop ; leave ; ret
0x0000000000402871 : jmp 0x402837
0x00000000004096a3 : jmp qword ptr [rax]
0x0000000000409663 : jmp qword ptr [rbx]
0x0000000000409623 : jmp qword ptr [rsi]
0x0000000000400c55 : jmp rax
0x0000000000401346 : jne 0x401313 ; mov eax, 0 ; nop ; pop rbp ; ret
0x00000000004013a7 : jne 0x401373 ; mov eax, 0 ; nop ; pop rbp ; ret
0x0000000000401293 : lea eax, dword ptr [rax] ; jmp rax
0x0000000000400cc6 : lea esp, dword ptr [rax] ; add byte ptr [rcx], al ; ret
0x0000000000400ded : leave ; ret
0x0000000000401de5 : loopne 0x401dfa ; mov rdx, rax ; jmp 0x401df5
0x0000000000401e21 : loopne 0x401e36 ; mov rdx, rax ; jmp 0x401e31
0x0000000000403709 : loopne 0x40371e ; mov rdx, rax ; jmp 0x403719
0x00000000004080ae : loopne 0x4080b8 ; dec dword ptr [rax - 0x75] ; clc ; nop ; leave ; ret
0x0000000000402660 : mov al, 0x48 ; add eax, 0x10 ; nop ; leave ; ret
0x000000000040374b : mov byte ptr [r8 + 1], r9b ; ret 0x8b48
0x0000000000407702 : mov byte ptr [r8 - 0x7d], r9b ; enter 0x4802, -0x77 ; ret 0x8b48
0x000000000040374c : mov byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000407703 : mov byte ptr [rax - 0x7d], cl ; enter 0x4802, -0x77 ; ret 0x8b48
0x0000000000400cc3 : mov byte ptr [rip + 0x208d86], 1 ; ret
0x0000000000403f77 : mov dh, 0xc0 ; nop ; leave ; ret
0x0000000000402cb8 : mov dword ptr [rax + 0x30], 0 ; nop ; leave ; ret
0x0000000000401d3b : mov dword ptr [rax + 0x30], edx ; pop rbp ; ret
0x0000000000403cc3 : mov dword ptr [rax + 0x38], edx ; mov rax, qword ptr [rbp - 8] ; nop ; leave ; ret
0x0000000000408256 : mov dword ptr [rax], edx ; mov eax, 0 ; nop ; leave ; ret
0x00000000004083d6 : mov dword ptr [rbp - 4], eax ; mov eax, dword ptr [rbp - 4] ; nop ; leave ; ret
0x000000000040286e : mov dword ptr [rbp - 8], eax ; jmp 0x40283a
0x0000000000407763 : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; nop ; leave ; ret
0x0000000000401471 : mov dword ptr [rdx], eax ; mov eax, 1 ; nop ; leave ; ret
0x0000000000401527 : mov eax, 0 ; nop ; leave ; ret
0x0000000000401348 : mov eax, 0 ; nop ; pop rbp ; ret
0x0000000000405d31 : mov eax, 0x8903e0c1 ; ret 0x8b48
0x0000000000408419 : mov eax, 0xffffffff ; nop ; pop rbp ; ret
0x0000000000400de7 : mov eax, 1 ; nop ; leave ; ret
0x0000000000400ef8 : mov eax, 1 ; nop ; pop rbp ; ret
0x000000000040128f : mov eax, dword ptr [rax*8 + 0x408d20] ; jmp rax
0x0000000000405ad2 : mov eax, dword ptr [rbp - 0x10] ; add rax, 0x10 ; nop ; leave ; ret
0x0000000000406e57 : mov eax, dword ptr [rbp - 0x10] ; nop ; leave ; ret
0x0000000000401d37 : mov eax, dword ptr [rbp - 0x18] ; mov qword ptr [rax + 0x30], rdx ; pop rbp ; ret
0x0000000000407dfa : mov eax, dword ptr [rbp - 0x30] ; nop ; leave ; ret
0x000000000040265e : mov eax, dword ptr [rbp - 0x50] ; add rax, 0x10 ; nop ; leave ; ret
0x000000000040175c : mov eax, dword ptr [rbp - 0x88] ; leave ; ret
0x00000000004083d9 : mov eax, dword ptr [rbp - 4] ; nop ; leave ; ret
0x00000000004084b0 : mov eax, dword ptr [rbp - 8] ; leave ; ret
0x0000000000403cc7 : mov eax, dword ptr [rbp - 8] ; nop ; leave ; ret
0x0000000000408489 : mov eax, dword ptr [rip + 0x201999] ; nop ; pop rbp ; ret
0x00000000004083f3 : mov eax, dword ptr [rip + 0x201a27] ; nop ; pop rbp ; ret
0x00000000004083e5 : mov eax, dword ptr [rip + 0x201a2d] ; nop ; pop rbp ; ret
0x000000000040253b : mov eax, edx ; mov edx, eax ; jmp 0x402549
0x0000000000402b98 : mov eax, edx ; mov edx, eax ; jmp 0x402ba6
0x0000000000403b8e : mov eax, edx ; mov edx, eax ; jmp 0x403b9c
0x0000000000404bba : mov eax, edx ; mov edx, eax ; jmp 0x404bc8
0x0000000000404db6 : mov eax, edx ; mov edx, eax ; jmp 0x404dc4
0x0000000000405500 : mov eax, edx ; mov edx, eax ; jmp 0x40550e
0x0000000000406c69 : mov eax, edx ; mov edx, eax ; jmp 0x406c77
0x0000000000400cec : mov ebp, esp ; call rax
0x0000000000400d41 : mov ebx, 0x90fffffd ; pop rbp ; ret
0x0000000000400c50 : mov edi, 0x609a20 ; jmp rax
0x0000000000408597 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000408596 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401de8 : mov edx, eax ; jmp 0x401df2
0x0000000000401e24 : mov edx, eax ; jmp 0x401e2e
0x000000000040253d : mov edx, eax ; jmp 0x402547
0x0000000000402b9a : mov edx, eax ; jmp 0x402ba4
0x000000000040370c : mov edx, eax ; jmp 0x403716
0x0000000000403b90 : mov edx, eax ; jmp 0x403b9a
0x0000000000404bbc : mov edx, eax ; jmp 0x404bc6
0x0000000000404db8 : mov edx, eax ; jmp 0x404dc2
0x0000000000405502 : mov edx, eax ; jmp 0x40550c
0x0000000000406c6b : mov edx, eax ; jmp 0x406c75
0x0000000000401d3a : mov qword ptr [rax + 0x30], rdx ; pop rbp ; ret
0x000000000040286d : mov qword ptr [rbp - 8], rax ; jmp 0x40283b
0x000000000040265f : mov r8b, 0x48 ; add eax, 0x10 ; nop ; leave ; ret
0x0000000000405d30 : mov r8d, 0x8903e0c1 ; ret 0x8b48
0x0000000000408418 : mov rax, -1 ; nop ; pop rbp ; ret
0x000000000040128e : mov rax, qword ptr [rax*8 + 0x408d20] ; jmp rax
0x0000000000406e56 : mov rax, qword ptr [rbp - 0x10] ; nop ; leave ; ret
0x0000000000401d36 : mov rax, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 0x30], rdx ; pop rbp ; ret
0x0000000000407df9 : mov rax, qword ptr [rbp - 0x30] ; nop ; leave ; ret
0x000000000040175b : mov rax, qword ptr [rbp - 0x88] ; leave ; ret
0x00000000004084af : mov rax, qword ptr [rbp - 8] ; leave ; ret
0x0000000000403cc6 : mov rax, qword ptr [rbp - 8] ; nop ; leave ; ret
0x0000000000408488 : mov rax, qword ptr [rip + 0x201999] ; nop ; pop rbp ; ret
0x00000000004083f2 : mov rax, qword ptr [rip + 0x201a27] ; nop ; pop rbp ; ret
0x00000000004083e4 : mov rax, qword ptr [rip + 0x201a2d] ; nop ; pop rbp ; ret
0x000000000040253a : mov rax, rdx ; mov edx, eax ; jmp 0x40254a
0x0000000000402b97 : mov rax, rdx ; mov edx, eax ; jmp 0x402ba7
0x0000000000403b8d : mov rax, rdx ; mov edx, eax ; jmp 0x403b9d
0x0000000000404bb9 : mov rax, rdx ; mov edx, eax ; jmp 0x404bc9
0x0000000000404db5 : mov rax, rdx ; mov edx, eax ; jmp 0x404dc5
0x00000000004054ff : mov rax, rdx ; mov edx, eax ; jmp 0x40550f
0x0000000000406c68 : mov rax, rdx ; mov edx, eax ; jmp 0x406c78
0x0000000000400ceb : mov rbp, rsp ; call rax
0x0000000000401de7 : mov rdx, rax ; jmp 0x401df3
0x0000000000401e23 : mov rdx, rax ; jmp 0x401e2f
0x000000000040370b : mov rdx, rax ; jmp 0x403717
0x0000000000403f76 : movzx eax, al ; nop ; leave ; ret
0x0000000000401de2 : neg eax ; and eax, 0xf ; mov rdx, rax ; jmp 0x401df8
0x0000000000401e1e : neg eax ; and eax, 0xf ; mov rdx, rax ; jmp 0x401e34
0x0000000000403706 : neg eax ; and eax, 0xf ; mov rdx, rax ; jmp 0x40371c
0x0000000000401de1 : neg rax ; and eax, 0xf ; mov rdx, rax ; jmp 0x401df9
0x0000000000401e1d : neg rax ; and eax, 0xf ; mov rdx, rax ; jmp 0x401e35
0x0000000000403705 : neg rax ; and eax, 0xf ; mov rdx, rax ; jmp 0x40371d
0x0000000000400dec : nop ; leave ; ret
0x0000000000407df8 : nop ; mov rax, qword ptr [rbp - 0x30] ; nop ; leave ; ret
0x000000000040611b : nop ; mov rax, qword ptr [rbp - 8] ; nop ; leave ; ret
0x0000000000408190 : nop ; nop ; leave ; ret
0x0000000000400d45 : nop ; pop rbp ; ret
0x0000000000400c58 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x00000000004085b8 : nop dword ptr [rax + rax] ; ret
0x0000000000400ca5 : nop dword ptr [rax] ; pop rbp ; ret
0x0000000000407df7 : or byte ptr [rax - 0x2fba74b8], dl ; nop ; leave ; ret
0x00000000004085ac : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004085ae : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004085b0 : pop r14 ; pop r15 ; ret
0x00000000004085b2 : pop r15 ; ret
0x0000000000400cc2 : pop rbp ; mov byte ptr [rip + 0x208d86], 1 ; ret
0x0000000000400c4f : pop rbp ; mov edi, 0x609a20 ; jmp rax
0x00000000004085ab : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004085af : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000400c60 : pop rbp ; ret
0x00000000004085b3 : pop rdi ; ret
0x00000000004085b1 : pop rsi ; pop r15 ; ret
0x00000000004085ad : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403cc4 : push rax ; cmp byte ptr [rax - 0x75], cl ; clc ; nop ; leave ; ret
0x0000000000407df6 : push rax ; or byte ptr [rax - 0x2fba74b8], dl ; nop ; leave ; ret
0x00000000004078cc : push rbp ; enter -0x74b8, 0x45 ; call 0x4902a226
0x0000000000400cea : push rbp ; mov rbp, rsp ; call rax
0x000000000040789b : push rbp ; ror byte ptr [rax - 0x75], 1 ; call 0x4902a1f5
0x0000000000402663 : rcl byte ptr [rax], 0x90 ; leave ; ret
0x0000000000400a91 : ret
0x0000000000407f68 : ret 0x1176
0x0000000000401ac6 : ret 0x1676
0x0000000000403230 : ret 0x1c76
0x0000000000401041 : ret 0x458b
0x0000000000404e2e : ret 0x4804
0x0000000000407d4b : ret 0x4810
0x0000000000404d87 : ret 0x484a
0x0000000000403438 : ret 0x4b73
0x000000000040350c : ret 0x5675
0x0000000000401de9 : ret 0x5eb
0x0000000000403416 : ret 0x6d72
0x0000000000403761 : ret 0x820f
0x00000000004033fb : ret 0x850f
0x00000000004017e9 : ret 0x8948
0x0000000000400daf : ret 0x8b48
0x00000000004061ef : ret 0xb
0x0000000000401347 : ret 0xb8
0x0000000000403cb8 : ret 0xc289
0x0000000000403f5f : ret 0xc76
0x0000000000402400 : ret 0xd089
0x0000000000409300 : ret 0xff99
0x0000000000400f4a : ret 0xfffb
0x00000000004093a1 : ret 0xffff
0x000000000040340f : ror byte ptr [r8 - 0x75], 1 ; add byte ptr [rax + 0x39], cl ; ret 0x6d72
0x0000000000403410 : ror byte ptr [rax - 0x75], 1 ; add byte ptr [rax + 0x39], cl ; ret 0x6d72
0x000000000040789c : ror byte ptr [rax - 0x75], 1 ; call 0x4902a1f4
0x0000000000403359 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x00000000004051f3 : ror byte ptr [rax - 0x7d], 1 ; enter 0x4803, -0x77 ; ret 0x8b48
0x0000000000400ce7 : sal byte ptr [rcx + rsi*8 + 0x55], 0x48 ; mov ebp, esp ; call rax
0x00000000004013a8 : sar dword ptr [rax], -0x70 ; pop rbp ; ret
0x0000000000409398 : sbb al, 0 ; add byte ptr [rax], al ; in al, 3 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0xffff
0x0000000000403f73 : setne al ; movzx eax, al ; nop ; leave ; ret
0x0000000000401fe6 : shl byte ptr [rcx], 1 ; ret 0x8b48
0x00000000004061ea : sub bh, byte ptr [rax] ; add cl, ch ; ret 0xb
0x00000000004083e7 : sub eax, 0x9000201a ; pop rbp ; ret
0x0000000000402538 : sub edx, eax ; mov rax, rdx ; mov edx, eax ; jmp 0x40254c
0x0000000000402b95 : sub edx, eax ; mov rax, rdx ; mov edx, eax ; jmp 0x402ba9
0x0000000000403b8b : sub edx, eax ; mov rax, rdx ; mov edx, eax ; jmp 0x403b9f
0x0000000000404bb7 : sub edx, eax ; mov rax, rdx ; mov edx, eax ; jmp 0x404bcb
0x0000000000404db3 : sub edx, eax ; mov rax, rdx ; mov edx, eax ; jmp 0x404dc7
0x00000000004054fd : sub edx, eax ; mov rax, rdx ; mov edx, eax ; jmp 0x405511
0x0000000000406c66 : sub edx, eax ; mov rax, rdx ; mov edx, eax ; jmp 0x406c7a
0x00000000004085c5 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000402537 : sub rdx, rax ; mov rax, rdx ; mov edx, eax ; jmp 0x40254d
0x0000000000402b94 : sub rdx, rax ; mov rax, rdx ; mov edx, eax ; jmp 0x402baa
0x0000000000403b8a : sub rdx, rax ; mov rax, rdx ; mov edx, eax ; jmp 0x403ba0
0x0000000000404bb6 : sub rdx, rax ; mov rax, rdx ; mov edx, eax ; jmp 0x404bcc
0x0000000000404db2 : sub rdx, rax ; mov rax, rdx ; mov edx, eax ; jmp 0x404dc8
0x00000000004054fc : sub rdx, rax ; mov rax, rdx ; mov edx, eax ; jmp 0x405512
0x0000000000406c65 : sub rdx, rax ; mov rax, rdx ; mov edx, eax ; jmp 0x406c7b
0x00000000004085c4 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000400c5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004085ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400ce6 : test eax, eax ; je 0x400ce3 ; push rbp ; mov rbp, rsp ; call rax
0x0000000000400ce5 : test rax, rax ; je 0x400ce4 ; push rbp ; mov rbp, rsp ; call rax
0x0000000000400cc5 : xchg byte ptr [rbp - 0xcfeffe0], cl ; ret
0x00000000004093a0 : xchg eax, esp ; ret 0xffff
0x0000000000407f65 : xor byte ptr [rax + 0x39], cl ; ret 0x1176
0x0000000000403f5c : xor byte ptr [rax + 0x39], cl ; ret 0xc76

Unique gadgets found: 339
