Gadgets information
============================================================
0x00000000004a2d34 : adc ah, 0xf8 ; call rax
0x00000000004a2c18 : adc ah, ah ; clc ; push rax ; in eax, -8 ; call rax
0x00000000004c3ef0 : adc ah, ah ; stc ; jmp rax
0x0000000000428d4f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000428db9 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049b855 : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004bee55 : adc al, 0 ; add byte ptr [rax], cl ; cmp ebp, esi ; call qword ptr [rax]
0x000000000042f335 : adc al, 0x13 ; jmp rdx
0x000000000042d925 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000043f42a : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x000000000049b54a : adc al, 0x24 ; mov edi, 1 ; call rax
0x000000000040e9c8 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000004c12d4 : adc al, 0x39 ; add byte ptr [rax], al ; fadd dword ptr [rcx - 9] ; call qword ptr [rax]
0x0000000000418b07 : adc al, 0x41 ; pop rsp ; ret
0x000000000043b130 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x000000000040f9a7 : adc al, 0x4a ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000043ea88 : adc al, 0x4f ; add byte ptr [rax], al ; ret
0x00000000004c2bd4 : adc al, 0x52 ; add byte ptr [rax], al ; or byte ptr [rax - 8], bh ; call qword ptr [rcx]
0x000000000041f3ca : adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000043ebd6 : adc al, 0x89 ; ret 0xdaf7
0x000000000046433e : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000042a1e0 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000042890e : adc al, 0x91 ; sub eax, edx ; ret
0x000000000042f331 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000004c76d4 : adc al, 0x9d ; add byte ptr [rax], al ; call 0x114c72ec
0x0000000000420c17 : adc al, 0xa ; jmp r10
0x000000000042da93 : adc al, 0xa ; sub eax, edx ; ret
0x00000000004c7cd4 : adc al, 0xa3 ; add byte ptr [rax], al ; call 0x114c7976
0x00000000004015a9 : adc al, 0xdd ; fmul dword ptr [rsi - 0x7cb7ff94] ; ret
0x00000000004220f1 : adc al, 0xe ; sub eax, edx ; ret
0x000000000049b92a : adc al, 0xf7 ; add rsp, 8 ; ret
0x00000000004a2fe9 : adc al, 0xf9 ; call qword ptr [rax + 0x10fff913]
0x00000000004a2fe5 : adc al, 0xf9 ; call qword ptr [rax]
0x00000000004a31e5 : adc al, 0xf9 ; jmp qword ptr [rax + 0x20fff913]
0x00000000004a31e1 : adc al, 0xf9 ; jmp qword ptr [rax]
0x00000000004a3065 : adc al, 0xf9 ; jmp rdx
0x00000000004c4b39 : adc al, 0xfa ; jmp rdx
0x0000000000475ee2 : adc al, 3 ; add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x0000000000400b68 : adc al, 7 ; add al, bpl ; call qword ptr [rax]
0x0000000000490e6e : adc al, 9 ; ret 0xa074
0x0000000000428ef7 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000428f61 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004a2d04 : adc al, ch ; clc ; call qword ptr [rax]
0x000000000040d747 : adc al, ch ; push rbx ; ret
0x000000000047a45a : adc ax, 0x25 ; call rax
0x00000000004a2ca0 : adc bh, ah ; clc ; jmp rax
0x000000000047f30e : adc bh, byte ptr [rcx] ; ret 0x850f
0x00000000004a2ff9 : adc bh, cl ; call qword ptr [rax + 0x10fff911]
0x00000000004a2ff5 : adc bh, cl ; call qword ptr [rax]
0x00000000004a31f5 : adc bh, cl ; jmp qword ptr [rax + 0x20fff911]
0x00000000004a31f1 : adc bh, cl ; jmp qword ptr [rax]
0x00000000004a3075 : adc bh, cl ; jmp rdx
0x00000000004a2cb8 : adc bl, ah ; clc ; push rax ; in al, -8 ; call rax
0x0000000000467a32 : adc bl, byte ptr [rsi - 0x43] ; add byte ptr [r8 - 0x77], cl ; ret
0x00000000004263b5 : adc bl, ch ; call 0xffffffffc412ed0a
0x0000000000422e85 : adc bl, ch ; call 0xffffffffc43ab7da
0x0000000000478492 : adc bl, ch ; jno 0x4784e8 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000482f34 : adc bl, ch ; ret 0x8348
0x0000000000425da4 : adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000043aa66 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043aad7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043aa37 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043aa65 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000473c10 : adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000413216 : adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x000000000044f10d : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3948
0x000000000044fc6b : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x000000000044f106 : adc byte ptr [r8 + 0x39], r9b ; ret
0x0000000000477c0f : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000469ef9 : adc byte ptr [r8 - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0x469ecd
0x0000000000416c1c : adc byte ptr [r8 - 0x77], cl ; ret 0x348
0x0000000000470c54 : adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000043ff02 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004107d3 : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000047808c : adc byte ptr [rax + 0x29], cl ; ret
0x00000000004599ae : adc byte ptr [rax + 0x29], cl ; ret 0x8b48
0x000000000044f107 : adc byte ptr [rax + 0x39], cl ; ret
0x00000000004186c3 : adc byte ptr [rax + 0x39], cl ; ret 0xef75
0x0000000000477c10 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000412737 : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004879da : adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x0000000000478b2e : adc byte ptr [rax + 1], cl ; ret
0x000000000040043d : adc byte ptr [rax - 0x39], cl ; ret 0xffd0
0x0000000000473f84 : adc byte ptr [rax - 0x6df0fe06], al ; ret 0x8348
0x000000000042b924 : adc byte ptr [rax - 0x73], cl ; jg 0x42b941 ; jne 0x42b918 ; ret
0x000000000046a515 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000046a514 : adc byte ptr [rax - 0x73], r9b ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000043fb72 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000446988 : adc byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x00000000004472eb : adc byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000042bd3a : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x0000000000409957 : adc byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x405c57
0x00000000004630c7 : adc byte ptr [rax - 0x77], cl ; jo 0x4630e5 ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004643fc : adc byte ptr [rax - 0x77], cl ; or cl, byte ptr [rax - 0x77] ; ret
0x0000000000469efa : adc byte ptr [rax - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0x469ecc
0x0000000000463087 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000040e363 : adc byte ptr [rax - 0x77], cl ; ret
0x0000000000416c1d : adc byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000048525f : adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x0000000000489904 : adc byte ptr [rax - 0x77], cl ; ret 0x875
0x000000000041bf59 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4e
0x000000000043201f : adc byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004377d7 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000437813 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000400b1a : adc byte ptr [rax - 0x7d], cl ; ret
0x00000000004202d3 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041f2ab : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000479069 : adc byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a7ac : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429101 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043db0a : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004be480 : adc byte ptr [rax], cl ; cmc ; call qword ptr [rdx]
0x0000000000418a9a : adc byte ptr [rbp + 0x39], cl ; ret
0x0000000000478035 : adc byte ptr [rbp + rcx*4 + 0x34], cl ; ret 0x8d4a
0x0000000000425ec8 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x000000000042b928 : adc byte ptr [rbp - 0x1b], dh ; ret
0x00000000004a2b94 : adc byte ptr [rbp - 0x421f0008], bh ; clc ; jmp rax
0x000000000043f9e7 : adc byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x0000000000400bf6 : adc byte ptr [rbx + 0x410c247c], cl ; call rsp
0x000000000049c44c : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041e20b : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000040fec3 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004bffda : adc byte ptr [rbx + 0xa], cl ; ret
0x0000000000413217 : adc byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x00000000004166d2 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000479d37 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x479d51 ; ret
0x000000000043d7ba : adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x00000000004a2ff0 : adc byte ptr [rbx], dl ; stc ; call qword ptr [rax + 0x10fff912]
0x00000000004107d4 : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000044bbb4 : adc byte ptr [rcx + 0x39], cl ; ret
0x000000000044fb07 : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call r15
0x000000000041f0f3 : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000461790 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a2fe8 : adc byte ptr [rcx + rdi*8], dl ; call qword ptr [rax + 0x10fff913]
0x000000000049e2f8 : adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000040d34c : adc byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x0000000000418a47 : adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000422173 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000493a17 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000043df34 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004166d5 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000041fad9 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000043e01f : adc byte ptr [rdi + rdx*8 + 0x48], dh ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004a3300 : adc byte ptr [rdi - 7], dh ; jmp qword ptr [rax]
0x000000000043b343 : adc byte ptr [rdi], cl ; test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000496e8b : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049598f : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000496b8f : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049628f : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049658f : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000495c87 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000495f34 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496b34 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496e34 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496534 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496234 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000495c2c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494cbd : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494add : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004954b5 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004943d5 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004952d5 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044f10e : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x000000000044fc6c : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x000000000044f68c : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x000000000042f829 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000048553a : adc byte ptr [rdx + rdx*8 - 0x76b7d08c], al ; ret
0x00000000004bd2a8 : adc byte ptr [rdx - 3], ch ; jmp rax
0x000000000042e78b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004a2ff8 : adc byte ptr [rdx], dl ; stc ; call qword ptr [rax + 0x10fff911]
0x00000000004a2fe0 : adc byte ptr [rip + 0x1490fff9], dl ; stc ; call qword ptr [rax]
0x000000000042e63a : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000042dc35 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000420d65 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000042681b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000490e9f : adc byte ptr [rsp - 4], al ; ret
0x0000000000490ee5 : adc byte ptr [rsp - 8], al ; ret
0x0000000000495f37 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a3201 : adc cl, bh ; call qword ptr [rax]
0x00000000004a31c1 : adc cl, bh ; jmp qword ptr [rax]
0x0000000000451d0f : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x0000000000422e75 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000451d12 : adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x000000000047456a : adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000049ab2c : adc cl, byte ptr [rcx + 1] ; ret 0x3ee9
0x0000000000479061 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000463ca4 : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4410
0x0000000000411e2a : adc cl, byte ptr [rdx] ; pop rbx ; ret
0x00000000004a2bfc : adc dh, ah ; clc ; push rax ; out -8, eax ; jmp rax
0x0000000000425e30 : adc dh, bh ; ret
0x000000000041aa61 : adc dh, dh ; ret 0xf0f
0x00000000004a2c34 : adc dl, ah ; clc ; push rax ; jrcxz 0x4a2c3a ; call rax
0x00000000004a2d08 : adc dl, ch ; clc ; call qword ptr [rax]
0x00000000004789d3 : adc dword ptr [rax + 1], ecx ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000411d72 : adc dword ptr [rax - 0x39], ecx ; ret 0xffd0
0x000000000044eb65 : adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x00000000004107c5 : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000004790ac : adc dword ptr [rax - 0x73], ecx ; add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x000000000044ec3c : adc dword ptr [rax - 0x75], ecx ; add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x0000000000417eee : adc dword ptr [rax - 0x77], ecx ; ret 0x8348
0x000000000041667c : adc dword ptr [rax - 0x77], ecx ; ret 0x8b48
0x000000000047561a : adc dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x000000000042a7ab : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x0000000000429097 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a6af : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004351a7 : adc dword ptr [rcx + 7], edi ; ret
0x0000000000434e42 : adc dword ptr [rcx - 1], ebx ; ret
0x0000000000434e06 : adc dword ptr [rcx - 1], edi ; ret
0x0000000000468e8f : adc dword ptr [rcx], eax ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000402f24 : adc dword ptr [rdi + 0x6cafe0], edi ; call rax
0x0000000000435309 : adc dword ptr [rdi - 8], edi ; ret
0x000000000043d40c : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000043d53f : adc dword ptr [rsi + 3], edx ; ret
0x000000000043d5dc : adc dword ptr [rsi + 7], edx ; ret
0x000000000043d3de : adc dword ptr [rsi - 1], edx ; ret
0x0000000000429096 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a2fe1 : adc eax, 0x1490fff9 ; stc ; call qword ptr [rax]
0x00000000004a31dd : adc eax, 0x14a0fff9 ; stc ; jmp qword ptr [rax]
0x00000000004a3059 : adc eax, 0x1562fff9 ; stc ; jmp rdx
0x000000000044eb46 : adc eax, 0x27beed ; je 0x44eb58 ; ret
0x00000000004437c7 : adc eax, 0x2857cc ; pop rbx ; ret
0x000000000047083d : adc eax, 0x4000003 ; add rsp, 8 ; ret
0x0000000000470779 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x0000000000428c21 : adc eax, 0x83480000 ; ret 0xe910
0x000000000046da49 : adc eax, 0x89000003 ; ret 0xe8c0
0x0000000000465caa : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000042a50e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004941f9 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004178df : adc eax, dword ptr [rdx] ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0x417906
0x0000000000495c2f : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000479999 : adc eax, eax ; ret
0x0000000000479ad6 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000004b89e5 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x000000000046a51c : adc ebx, eax ; nop ; mov eax, edi ; ret
0x000000000049b192 : adc ecx, dword ptr [rax + 0x63] ; ret 0xbc80
0x000000000044174f : adc ecx, dword ptr [rax - 0x39] ; ret 0xffd0
0x00000000004156ea : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000446921 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000044be84 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000451fd1 : adc ecx, dword ptr [rcx + rax - 0x16] ; call qword ptr [r10 + rax*8]
0x000000000044152b : adc ecx, eax ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004a2ffd : adc ecx, edi ; call qword ptr [rax]
0x00000000004a31fd : adc ecx, edi ; jmp qword ptr [rax + 0x10fff910]
0x00000000004a31f9 : adc ecx, edi ; jmp qword ptr [rax]
0x00000000004a307d : adc ecx, edi ; jmp rdx
0x00000000004a2ff1 : adc edi, ecx ; call qword ptr [rax + 0x10fff912]
0x00000000004a2fed : adc edi, ecx ; call qword ptr [rax]
0x00000000004a31ed : adc edi, ecx ; jmp qword ptr [rax + 0x20fff912]
0x00000000004a31e9 : adc edi, ecx ; jmp qword ptr [rax]
0x00000000004a306d : adc edi, ecx ; jmp rdx
0x00000000004b9efe : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x000000000049c48c : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000040fbaa : adc esi, esi ; ret 0xf20
0x000000000043e9c7 : adc esp, 0x4f ; add byte ptr [rax], al ; ret
0x0000000000495e12 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004351a6 : adc qword ptr [rcx + 7], rdi ; ret
0x0000000000434e41 : adc qword ptr [rcx - 1], rbx ; ret
0x0000000000434e05 : adc qword ptr [rcx - 1], rdi ; ret
0x0000000000435308 : adc qword ptr [rdi - 8], rdi ; ret
0x000000000043d53e : adc qword ptr [rsi + 3], rdx ; ret
0x000000000043d5db : adc qword ptr [rsi + 7], rdx ; ret
0x000000000043d3dd : adc qword ptr [rsi - 1], rdx ; ret
0x0000000000425da3 : adc r11b, r14b ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000494360 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000479ad5 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000425e2f : adc sil, r15b ; ret
0x00000000004bdca3 : add ah, ah ; add al, byte ptr [rax] ; add al, ch ; hlt ; call qword ptr [rdx]
0x00000000004c25a3 : add ah, ah ; add byte ptr [r8], al ; call 0xffffffffe54c1de5
0x00000000004c76a3 : add ah, ah ; pushfq ; add byte ptr [rax], al ; call 0x114c72bd
0x00000000004bde83 : add ah, al ; add al, 0 ; add byte ptr [rax + 0x6e], cl ; hlt ; call qword ptr [rax]
0x00000000004bfd83 : add ah, al ; and eax, dword ptr [rax] ; add byte ptr [rax + 0x74], bl ; cmc ; call qword ptr [rdx]
0x000000000043da6e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043da8e : add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000043db1d : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043da4d : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004c7401 : add ah, bh ; jmp qword ptr [rax]
0x00000000004c76bb : add ah, bh ; pushfq ; add byte ptr [rax], al ; loopne 0x4c76d2 ; cld ; call qword ptr [rdx]
0x00000000004c5ebb : add ah, bh ; test byte ptr [rax], al ; add byte ptr [rax], ah ; fdivr st(2) ; jmp rdi
0x00000000004bfc9b : add ah, bl ; and al, byte ptr [rax] ; add byte ptr [rax], dh ; jae 0x4bfca0 ; call qword ptr [rsi]
0x00000000004c639b : add ah, bl ; mov dword ptr [rax], eax ; add al, ah ; or bh, bl ; jmp rsi
0x00000000004bf047 : add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000004bf120 : add ah, byte ptr [rdx + 0x41280e0a] ; ret
0x000000000043d53a : add ah, byte ptr [rdx - 0xf] ; jl 0x43d58f ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004bf4ab : add ah, ch ; sbb al, byte ptr [rax] ; add al, al ; pop rcx ; cmc ; jmp qword ptr [rcx]
0x00000000004c41b3 : add ah, dh ; add byte ptr [eax], al ; in al, dx ; stc ; call qword ptr [rsi]
0x00000000004c36b3 : add ah, dh ; pop rsp ; add byte ptr [rax], al ; cmp bl, bl ; clc ; call qword ptr [rbx]
0x00000000004c5fb3 : add ah, dh ; test dword ptr [rax], eax ; add byte ptr [rax], cl ; fdiv st(2), st(0) ; call rsi
0x00000000004c4793 : add ah, dl ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; sub byte ptr [rax], al ; cli ; call rsi
0x00000000004bde85 : add al, 0 ; add byte ptr [rax + 0x6e], cl ; hlt ; call qword ptr [rax]
0x0000000000448fc1 : add al, 0 ; add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000448ff9 : add al, 0 ; add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x0000000000470cb9 : add al, 0 ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret
0x00000000004228ad : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b3cf : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004228d1 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049c191 : add al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004403d2 : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000426448 : add al, 0 ; add byte ptr [rax], al ; ret
0x00000000004bde45 : add al, 0 ; add byte ptr [rax], ch ; add edi, esi ; call rdi
0x0000000000449321 : add al, 0 ; add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x000000000041a1ca : add al, 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000402c25 : add al, 0 ; add byte ptr [rdi + 0x6cb720], bh ; call rbx
0x0000000000418cb6 : add al, 0 ; add dh, dh ; ret
0x000000000046a51b : add al, 0x11 ; ret
0x000000000043dabd : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000473bb9 : add al, 0x16 ; jae 0x473b67 ; xor eax, eax ; ret
0x000000000042d921 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000421faa : add al, 0x17 ; sub eax, ecx ; ret
0x0000000000469605 : add al, 0x24 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x4695d6
0x000000000043e8fd : add al, 0x24 ; add rsp, 0x18 ; ret
0x000000000040995a : add al, 0x24 ; call 0x405c54
0x0000000000470c5c : add al, 0x24 ; call rax
0x000000000046ef73 : add al, 0x24 ; lea rdi, qword ptr [rax + 0x6ca1e0] ; call rdx
0x000000000044ebaa : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000047bf15 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x000000000040ea10 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000044c5dd : add al, 0x29 ; ret 0x8941
0x000000000046502e : add al, 0x31 ; ret
0x0000000000464f2a : add al, 0x37 ; ret
0x0000000000415dcf : add al, 0x3a ; ret
0x00000000004801cc : add al, 0x41 ; cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x4801a1
0x0000000000465df6 : add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x0000000000470841 : add al, 0x48 ; add esp, 8 ; ret
0x000000000043af9b : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x000000000043a4a9 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000043a4bb : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x00000000004635b3 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000004634f3 : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000043488a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000004633d4 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000438ce9 : add al, 0x48 ; mov eax, edi ; ret
0x0000000000464c24 : add al, 0x48 ; xor eax, eax ; ret
0x0000000000473bb6 : add al, 0x4c ; cmp eax, dword ptr [rsi + rdx] ; jae 0x473b6a ; xor eax, eax ; ret
0x00000000004734a6 : add al, 0x4c ; cmp edx, eax ; jne 0x473454 ; mov eax, dword ptr [rsi + 4] ; ret
0x000000000043a4b7 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000438cf7 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000044be82 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000041b6a4 : add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x0000000000465df4 : add al, 0x75 ; add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x000000000041f5aa : add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00000000004bf0df : add al, 0x79 ; ret
0x00000000004747f1 : add al, 0x80 ; cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x0000000000499523 : add al, 0x81 ; je 0x499505 ; ret
0x000000000042890b : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000049951f : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0x499509 ; ret
0x000000000042a1e3 : add al, 0x81 ; sub eax, edx ; ret
0x000000000043dbb8 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x43dba8 ; ret
0x0000000000428667 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000044898d : add al, 0x83 ; cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x000000000046a770 : add al, 0x85 ; leave ; jne 0x46a728 ; xor eax, eax ; ret
0x00000000004664d9 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x000000000049b03b : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000043a4a6 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x0000000000438ce6 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x000000000049958b : add al, 0x88 ; add r8, rax ; jmp r8
0x000000000040e23a : add al, 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000043dbbb : add al, 0x8a ; je 0x43dba5 ; ret
0x000000000045ba90 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x00000000004895d3 : add al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000004c14a8 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000004c4996 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000049aab3 : add al, 0x98 ; add rax, r8 ; jmp rax
0x0000000000441538 : add al, 0xc1 ; std ; dec dword ptr [rcx - 0x75] ; jge 0x441548 ; call rbx
0x00000000004549c4 : add al, 0xc5 ; and byte ptr [rbx + rcx*2], 0 ; jmp rax
0x0000000000479a2d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x479a89
0x000000000047f53d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x47f599
0x0000000000466247 : add al, 0xe8 ; ret
0x000000000047a3a5 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004220ed : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000434bf3 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000043e97b : add al, 0xf3 ; ret
0x0000000000425e89 : add al, 0xf6 ; ret 0x7408
0x00000000004808c8 : add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x0000000000473b6c : add al, 1 ; cmp rax, 0xff ; cmove rax, rdx ; ret
0x00000000004bf157 : add al, 2 ; hlt ; ret
0x000000000042ee97 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004c7228 : add al, 3 ; mov dword ptr [rcx], eax ; ret
0x000000000042098d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000042c4b8 : add al, 7 ; ret
0x000000000042da8f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004c73ff : add al, ah ; add ah, bh ; jmp qword ptr [rax]
0x00000000004c76bf : add al, ah ; or ah, bh ; call qword ptr [rdx]
0x00000000004c639f : add al, ah ; or bh, bl ; jmp rsi
0x00000000004c54ef : add al, ah ; push rcx ; cli ; jmp rsp
0x000000000044123a : add al, ah ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004c24ff : add al, al ; iretd ; std ; jmp qword ptr [rdx]
0x00000000004bf4af : add al, al ; pop rcx ; cmc ; jmp qword ptr [rcx]
0x00000000004ada87 : add al, al ; sldt word ptr [rax] ; ret
0x00000000004c1cf9 : add al, bh ; call qword ptr [rcx]
0x00000000004c1d59 : add al, bh ; call qword ptr [rdi]
0x00000000004c6627 : add al, bh ; cwde ; std ; call rcx
0x00000000004a2835 : add al, bh ; inc dword ptr [rax] ; add eax, edi ; call rax
0x00000000004c31a7 : add al, bl ; ret
0x0000000000400b6a : add al, bpl ; call qword ptr [rax]
0x00000000004474b6 : add al, bpl ; ret
0x000000000041af95 : add al, bpl ; ret 0xffff
0x0000000000496d12 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041840c : add al, byte ptr [r8] ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000422e71 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x00000000004bdca5 : add al, byte ptr [rax] ; add al, ch ; hlt ; call qword ptr [rdx]
0x00000000004190ed : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000425463 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000004108a5 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x0000000000469406 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004178e0 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x000000000041eee6 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000044535d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000045132d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000422a4d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047d1bc : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x0000000000429fa1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422a71 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049c1a1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000043f5c2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x0000000000440842 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000004405b5 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000440481 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000004403f9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000465d13 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000469b1a : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043c944 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x000000000047475d : add al, byte ptr [rax] ; add byte ptr [rcx + 0x48b48d8], cl ; ret 0x8b48
0x000000000048261e : add al, byte ptr [rax] ; add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x000000000041b105 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x854d
0x000000000041840d : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041a100 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000044720c : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x000000000044688c : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000044c014 : add al, byte ptr [rax] ; mov rdi, rbx ; call r12
0x00000000004c89b6 : add al, byte ptr [rax] ; ret
0x00000000004c89a6 : add al, byte ptr [rax] ; ret 0x503
0x00000000004437da : add al, byte ptr [rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x4437ce
0x0000000000441e7e : add al, byte ptr [rcx + 0x39] ; ret
0x00000000004bec78 : add al, byte ptr [rdi + 0xa] ; ret
0x00000000004c45b5 : add al, byte ptr [rdx] ; pop rsi ; ret
0x00000000004c438d : add al, byte ptr [rdx] ; push rsi ; ret
0x00000000004bf9c5 : add al, byte ptr [rdx] ; ret
0x0000000000479f65 : add al, byte ptr [rip + 0x5b000000] ; ret
0x00000000004c14ac : add al, byte ptr [rsi + rcx + 0x38] ; ret
0x000000000041b104 : add al, byte ptr ds:[rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x854d
0x0000000000400a08 : add al, ch ; and ah, al ; add byte ptr [rax], al ; leave ; ret
0x0000000000400b6b : add al, ch ; call qword ptr [rax]
0x000000000047447b : add al, ch ; call rdx
0x00000000004bdca7 : add al, ch ; hlt ; call qword ptr [rdx]
0x000000000041314e : add al, ch ; in al, dx ; ret 2
0x0000000000415bdd : add al, ch ; insd dword ptr [rdi], dx ; ret 2
0x0000000000403c2d : add al, ch ; int 0xc3
0x00000000004c76a7 : add al, ch ; or ah, bh ; call qword ptr [rax]
0x000000000041e087 : add al, ch ; ret
0x000000000046d9b8 : add al, ch ; ret 0xf93d
0x000000000049ebc8 : add al, ch ; ret 0xfa25
0x0000000000467e78 : add al, ch ; ret 0xfb57
0x000000000041af96 : add al, ch ; ret 0xffff
0x00000000004c7cd7 : add al, ch ; xchg eax, edx ; cld ; call qword ptr [rax]
0x00000000004c25a7 : add al, ch ; xor al, bh ; jmp rsp
0x00000000004c0ae7 : add al, cl ; cmc ; call qword ptr [rdx]
0x00000000004c3cb7 : add al, cl ; jg 0x4c3cb8 ; call rdx
0x00000000004c5b57 : add al, cl ; lodsd eax, dword ptr [rsi] ; cli ; call rdx
0x00000000004c1d58 : add al, dil ; call qword ptr [rdi]
0x00000000004c632a : add bh, ah ; ret
0x000000000044405f : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045edbe : add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x00000000004135fa : add bh, bh ; nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000400b17 : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000049df90 : add bh, bh ; ror byte ptr [rbx + rcx*4 + 0x2d], 1 ; ret 0x22
0x000000000047d81f : add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x00000000004413fc : add bh, bh ; ror dword ptr [rcx + rcx*4 - 0x11], cl ; call 0x41d648
0x0000000000402c2c : add bh, bh ; sar dword ptr [rdi + 0x6cafe0], cl ; call rbx
0x0000000000479b40 : add bh, byte ptr [rax + 1] ; ret
0x0000000000412562 : add bh, byte ptr [rax - 1] ; pop rbx ; ret
0x000000000040dc2b : add bh, byte ptr [rax - 1] ; ret
0x00000000004be87b : add bh, byte ptr [rcx + 0x41380e0a] ; ret
0x000000000043cd12 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000046f866 : add bh, dh ; ret 0x804
0x00000000004a2bbc : add bl, 0xf8 ; call qword ptr [rax]
0x0000000000425746 : add bl, al ; lea rax, qword ptr [rip + 0x15e71] ; ret
0x00000000004664b1 : add bl, al ; mov eax, 2 ; ret
0x00000000004207f4 : add bl, al ; mov rsi, rbx ; mov rdi, rax ; call rcx
0x000000000044378a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000004c511f : add bl, byte ptr [rax + 0x41180e0a] ; ret
0x00000000004c435f : add bl, byte ptr [rcx + 0xa] ; ret
0x00000000004c51dd : add bl, byte ptr [rdx + 0xa] ; ret
0x000000000046960a : add bl, ch ; ret 0x1f0f
0x0000000000406307 : add bl, dh ; ret
0x00000000004c3eeb : add byte ptr [0xffffffffe4100000], ch ; stc ; jmp rax
0x00000000004c41b5 : add byte ptr [eax], al ; in al, dx ; stc ; call qword ptr [rsi]
0x00000000004754a8 : add byte ptr [r15 + 0x4b58b0], dil ; call 0x401789
0x000000000047a110 : add byte ptr [r15 + 0x6cb9c0], r15b ; call rax
0x000000000047a23b : add byte ptr [r15 + 0x6cb9c4], r15b ; call rdx
0x000000000045ad43 : add byte ptr [r15 + r9 + 0x44], cl ; ret 0xf4c
0x0000000000459d2f : add byte ptr [r15 + r9 + 0x45], cl ; ret 0xf4c
0x0000000000473bf1 : add byte ptr [r8 + 0x39], r9b ; ret
0x00000000004253bf : add byte ptr [r8 + 0xf], cl ; ret 0x66c3
0x00000000004684be : add byte ptr [r8 + 0xf], cl ; ret 0x8d48
0x000000000049cb5f : add byte ptr [r8 + 1], r9b ; ret
0x0000000000467a35 : add byte ptr [r8 - 0x77], cl ; ret
0x0000000000442781 : add byte ptr [r8 - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x0000000000458d98 : add byte ptr [r8 - 0x7d], r9b ; call 0xffffffffc27ed5aa
0x0000000000446425 : add byte ptr [r8 - 0x7d], r9b ; ret 0x4901
0x00000000004c1d55 : add byte ptr [r8], al ; add al, dil ; call qword ptr [rdi]
0x00000000004c25a5 : add byte ptr [r8], al ; call 0xffffffffe54c1de3
0x00000000004c24fd : add byte ptr [r8], al ; ror bh, 0xfd ; jmp qword ptr [rdx]
0x00000000004c1cf5 : add byte ptr [r8], al ; sbb byte ptr [rax], al ; clc ; call qword ptr [rcx]
0x00000000004c20ed : add byte ptr [r8], r8b ; mov al, 0x18 ; clc ; call qword ptr [rax]
0x000000000043e9c9 : add byte ptr [r8], r8b ; ret
0x00000000004c4b37 : add byte ptr [rax + 0x14], bl ; cli ; jmp rdx
0x00000000004207ef : add byte ptr [rax + 0x16], bh ; ret
0x000000000043d2df : add byte ptr [rax + 0x27201fa], al ; mov byte ptr [rdi], cl ; ret
0x0000000000405437 : add byte ptr [rax + 0x29], cl ; ret
0x000000000044b838 : add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000418c75 : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000044a9b0 : add byte ptr [rax + 0x29], cl ; ret 0xe183
0x00000000004c6c67 : add byte ptr [rax + 0x38], ch ; sti ; jmp qword ptr [rdx]
0x00000000004174ab : add byte ptr [rax + 0x39], cl ; ret
0x000000000046d1b7 : add byte ptr [rax + 0x39], cl ; ret 0x7874
0x000000000048320b : add byte ptr [rax + 0x39], cl ; ret 0x820f
0x00000000004178f6 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000044e01b : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00000000004178b7 : add byte ptr [rax + 0x39], cl ; ret 0x8948
0x000000000046d395 : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004c822f : add byte ptr [rax + 0x3a], al ; std ; call rcx
0x00000000004253bb : add byte ptr [rax + 0x43cd30], bh ; cmove rax, rdx ; ret
0x0000000000479de6 : add byte ptr [rax + 0x4740000], al ; mov eax, edx ; pop rbx ; ret
0x0000000000411e28 : add byte ptr [rax + 0x5b004a12], ah ; ret
0x0000000000462487 : add byte ptr [rax + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045c53e : add byte ptr [rax + 0x63], cl ; ret
0x000000000046417f : add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000046a16f : add byte ptr [rax + 0x68], bh ; syscall ; ret
0x000000000046a15f : add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x0000000000417e52 : add byte ptr [rax + 0x6c9800], bh ; ret
0x000000000046a17f : add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x00000000004bde87 : add byte ptr [rax + 0x6e], cl ; hlt ; call qword ptr [rax]
0x00000000004bfb4f : add byte ptr [rax + 0x6f], dl ; cmc ; jmp qword ptr [rax]
0x00000000004bfd87 : add byte ptr [rax + 0x74], bl ; cmc ; call qword ptr [rdx]
0x0000000000422e6f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000475e14 : add byte ptr [rax + 0x75], al ; cmp bl, dh ; ret
0x000000000043af3f : add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000040f80a : add byte ptr [rax + 0x8740000], al ; mov eax, edx ; pop rbx ; ret
0x000000000046680f : add byte ptr [rax + 0xc9], bh ; syscall ; ret
0x0000000000464e95 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x0000000000442c3b : add byte ptr [rax + 0xf], cl ; ret
0x00000000004128d7 : add byte ptr [rax + 0xf], cl ; ret 0x294d
0x00000000004253c0 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000040f9a9 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004684bf : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x0000000000425ce3 : add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x00000000004480fa : add byte ptr [rax + 0xf], cl ; ret 0xc985
0x000000000044794d : add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x000000000044a50a : add byte ptr [rax + 0xf], cl ; ret 0xed85
0x0000000000401480 : add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x0000000000473f27 : add byte ptr [rax + 1], bh ; ret
0x0000000000425465 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000004108a7 : add byte ptr [rax + 1], cl ; ret
0x000000000048815f : add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000047ab7c : add byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000047e7e7 : add byte ptr [rax + 1], cl ; ret 0xb70f
0x0000000000478fd0 : add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x000000000049a2af : add byte ptr [rax + 5], bh ; ret
0x00000000004c48cf : add byte ptr [rax + 5], dh ; cli ; jmp rdx
0x000000000043dade : add byte ptr [rax + 8], bh ; pop rbx ; ret
0x000000000043dadd : add byte ptr [rax + 8], dil ; pop rbx ; ret
0x00000000004aca2b : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x000000000041b8ff : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000041c0a9 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004c822b : add byte ptr [rax + rbp*4], ch ; add byte ptr [rax + 0x3a], al ; std ; call rcx
0x0000000000470840 : add byte ptr [rax + rcx*2], al ; add esp, 8 ; ret
0x00000000004adbd7 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x000000000049b7ef : add byte ptr [rax + rsi*4 + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004c41b7 : add byte ptr [rax - 0x14], cl ; stc ; call qword ptr [rsi]
0x0000000000403286 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8948
0x00000000004c36cf : add byte ptr [rax - 0x25], al ; clc ; call qword ptr [rax]
0x00000000004c3317 : add byte ptr [rax - 0x37], bh ; std ; call qword ptr [rbx]
0x000000000041f611 : add byte ptr [rax - 0x39], cl ; add eax, 0x2aa15b ; push rax ; ret 0x41
0x000000000041e873 : add byte ptr [rax - 0x39], cl ; add eax, 0x2aaef9 ; push rax ; ret 0x41
0x000000000041d274 : add byte ptr [rax - 0x39], cl ; add eax, 0x2ac4f8 ; push rax ; ret 0x41
0x000000000043f381 : add byte ptr [rax - 0x39], cl ; ret
0x0000000000451cff : add byte ptr [rax - 0x39], cl ; ret 0xffb0
0x000000000040dc1f : add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x00000000004206cb : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000044ec3f : add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x0000000000457cef : add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x00000000004108c7 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000465d1f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x0000000000465cff : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x0000000000465d5f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x0000000000465d0f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x0000000000465d4f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000004586e8 : add byte ptr [rax - 0x3f7cb7f0], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000044c02d : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000041d0fc : add byte ptr [rax - 0x418aff94], bl ; ret
0x0000000000488b72 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000004c3057 : add byte ptr [rax - 0x66], bh ; clc ; jmp rbx
0x00000000004c2fc7 : add byte ptr [rax - 0x66], bl ; clc ; call qword ptr [rdx]
0x000000000041b898 : add byte ptr [rax - 0x6af0ff94], bl ; ret 0x8349
0x000000000044f103 : add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x0000000000448fdf : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000448fc3 : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000448ffb : add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x000000000047ae7a : add byte ptr [rax - 0x73], cl ; jl 0x47aeaa ; js 0x47aec9 ; call rsp
0x000000000047b18f : add byte ptr [rax - 0x73], cl ; jl 0x47b1bf ; js 0x47b1de ; call rsp
0x000000000047b556 : add byte ptr [rax - 0x73], cl ; jl 0x47b586 ; js 0x47b5a5 ; call rsp
0x000000000049a20f : add byte ptr [rax - 0x73], cl ; jl 0x49a240 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000041aa5d : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000474567 : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000049b18f : add byte ptr [rax - 0x75], cl ; adc ecx, dword ptr [rax + 0x63] ; ret 0xbc80
0x00000000004549c1 : add byte ptr [rax - 0x75], cl ; add al, 0xc5 ; and byte ptr [rbx + rcx*2], 0 ; jmp rax
0x000000000044c05f : add byte ptr [rax - 0x75], cl ; add eax, 0x27f691 ; ret
0x0000000000444cef : add byte ptr [rax - 0x75], cl ; add eax, 0x2875d1 ; ret
0x00000000004169af : add byte ptr [rax - 0x75], cl ; add eax, 0x2b2709 ; ret
0x000000000044f11f : add byte ptr [rax - 0x75], cl ; jl 0x44f150 ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x0000000000415386 : add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000464436 : add byte ptr [rax - 0x75], cl ; jp 0x464481 ; jmp 0x464406
0x000000000046446f : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000044413f : add byte ptr [rax - 0x75], cl ; mov rdi, qword ptr ss:[rdi] ; jmp 0x400369
0x000000000047cc7d : add byte ptr [rax - 0x75], cl ; or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8008
0x0000000000416f57 : add byte ptr [rax - 0x75], cl ; push rbx ; or byte ptr [rax + 0x29], cl ; ret 0x149
0x0000000000430c5f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000041da27 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x68 ; call rax
0x0000000000444812 : add byte ptr [rax - 0x75], cl ; ret
0x000000000049b927 : add byte ptr [rax - 0x77], cl ; adc al, 0xf7 ; add rsp, 8 ; ret
0x00000000004169df : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000040faa2 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000041d633 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x0000000000414ef2 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000415062 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000468e49 : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000440c95 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000440b95 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x0000000000468524 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x0000000000418f05 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xfff1
0x0000000000468918 : add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbf09126e
0x000000000040f8f1 : add byte ptr [rax - 0x77], cl ; mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000440851 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000041dce0 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x00000000004033bc : add byte ptr [rax - 0x77], cl ; ret
0x00000000004178e2 : add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x000000000041d20c : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000479f03 : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x00000000004696df : add byte ptr [rax - 0x77], cl ; ret 0x3e9
0x0000000000485234 : add byte ptr [rax - 0x77], cl ; ret 0x53e8
0x000000000043e3ba : add byte ptr [rax - 0x77], cl ; ret 0x6b8
0x0000000000402a2e : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000046bcaf : add byte ptr [rax - 0x77], cl ; ret 0x8349
0x000000000041976f : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000459069 : add byte ptr [rax - 0x77], cl ; ret 0x858b
0x000000000044e374 : add byte ptr [rax - 0x77], cl ; ret 0x8840
0x000000000041beaf : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000043e223 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000044e747 : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x0000000000470347 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000042536b : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000045a00f : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000459774 : add byte ptr [rax - 0x77], cl ; ret 0xf0e9
0x0000000000413600 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000047161f : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000049d6cd : add byte ptr [rax - 0x77], cl ; sub bl, r14b ; ret
0x00000000004702e3 : add byte ptr [rax - 0x77], cl ; xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000464c1f : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000046765f : add byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rax + 0xf] ; fucompp ; ret 0xfffe
0x0000000000463f5a : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000442782 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x0000000000411777 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rcx - 0x77], 4 ; and al, 0x74 ; ret 0x8b4c
0x0000000000470cbb : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret
0x0000000000458d99 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc27ed5a9
0x000000000041c496 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042090d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000401718 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000454618 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000455c3f : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000041dd22 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004015ae : add byte ptr [rax - 0x7d], cl ; ret
0x000000000041b64f : add byte ptr [rax - 0x7d], cl ; ret 0x110
0x000000000043ce0f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000041bef9 : add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x000000000046923f : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x000000000040ed9f : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004754ff : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000049ffff : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045261f : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000040130f : add byte ptr [rax - 0x7d], cl ; ret 0x4838
0x0000000000446426 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000044b410 : add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000000000042216f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000463e77 : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000042565f : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x00000000004255ef : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000047d1be : add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x000000000044681f : add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000461c67 : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x0000000000483f7f : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x0000000000424c00 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000428a83 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422193 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000466b8f : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000042d9cf : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000464d5f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000044bb94 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000044d61f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000040fba4 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x000000000049e183 : add byte ptr [rax - 0x7f], cl ; jmp rax
0x000000000044610c : add byte ptr [rax - 0x7f], cl ; ret 0x4fe0
0x00000000004323db : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004634e2 : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000004103f2 : add byte ptr [rax - 1], bh ; ret
0x0000000000416b0e : add byte ptr [rax - 1], dil ; ret
0x00000000004c87e0 : add byte ptr [rax - 3], dl ; jmp qword ptr [rbx]
0x00000000004a332c : add byte ptr [rax - 7], bh ; jmp qword ptr [rax]
0x0000000000415bda : add byte ptr [rax], 0 ; add al, ch ; insd dword ptr [rdi], dx ; ret 2
0x0000000000403c2a : add byte ptr [rax], 0 ; add al, ch ; int 0xc3
0x00000000004145c9 : add byte ptr [rax], 0 ; add bl, dh ; ret
0x0000000000417e4f : add byte ptr [rax], 0 ; add byte ptr [rax + 0x6c9800], bh ; ret
0x0000000000410629 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000418f02 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xfff1
0x000000000048aca0 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004135fd : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000047d67b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call rax
0x0000000000434bfb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004779eb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x00000000004657cb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000044dfb3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000041c243 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000417e5b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042c45b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000047bb25 : add byte ptr [rax], 0 ; add byte ptr [rcx], bh ; ret
0x000000000042deb1 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000446612 : add byte ptr [rax], 0 ; add dh, dh ; ret 0x4801
0x000000000040f80b : add byte ptr [rax], 0 ; je 0x40f820 ; mov eax, edx ; pop rbx ; ret
0x0000000000479de7 : add byte ptr [rax], 0 ; je 0x479df8 ; mov eax, edx ; pop rbx ; ret
0x00000000004c5ebf : add byte ptr [rax], ah ; fdivr st(2) ; jmp rdi
0x00000000004c58df : add byte ptr [rax], ah ; mov edi, edx ; call rsi
0x00000000004c3eee : add byte ptr [rax], al ; adc ah, ah ; stc ; jmp rax
0x00000000004c12d2 : add byte ptr [rax], al ; adc al, 0x39 ; add byte ptr [rax], al ; fadd dword ptr [rcx - 9] ; call qword ptr [rax]
0x00000000004c2bd2 : add byte ptr [rax], al ; adc al, 0x52 ; add byte ptr [rax], al ; or byte ptr [rax - 8], bh ; call qword ptr [rcx]
0x00000000004c76d2 : add byte ptr [rax], al ; adc al, 0x9d ; add byte ptr [rax], al ; call 0x114c72ee
0x00000000004c7cd2 : add byte ptr [rax], al ; adc al, 0xa3 ; add byte ptr [rax], al ; call 0x114c7978
0x00000000004be47e : add byte ptr [rax], al ; adc byte ptr [rax], cl ; cmc ; call qword ptr [rdx]
0x000000000047083f : add byte ptr [rax], al ; add al, 0x48 ; add esp, 8 ; ret
0x0000000000400a06 : add byte ptr [rax], al ; add al, ch ; and ah, al ; add byte ptr [rax], al ; leave ; ret
0x000000000041314c : add byte ptr [rax], al ; add al, ch ; in al, dx ; ret 2
0x0000000000415bdb : add byte ptr [rax], al ; add al, ch ; insd dword ptr [rdi], dx ; ret 2
0x0000000000403c2b : add byte ptr [rax], al ; add al, ch ; int 0xc3
0x000000000041ffb5 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000467e76 : add byte ptr [rax], al ; add al, ch ; ret 0xfb57
0x00000000004c1d56 : add byte ptr [rax], al ; add al, dil ; call qword ptr [rdi]
0x000000000045fa36 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x00000000004664af : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x0000000000469608 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x00000000004145ca : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004207ed : add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x000000000045bd1b : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000046d1b5 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x7874
0x0000000000483209 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000044e019 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000046417d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x0000000000417e50 : add byte ptr [rax], al ; add byte ptr [rax + 0x6c9800], bh ; ret
0x000000000043af3d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000004480f8 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc985
0x000000000044794b : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x000000000044a508 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xed85
0x000000000040147e : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x0000000000479b73 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000488284 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x000000000048815d : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000049a2ad : add byte ptr [rax], al ; add byte ptr [rax + 5], bh ; ret
0x000000000049b7ed : add byte ptr [rax], al ; add byte ptr [rax + rsi*4 + 0x48], dh ; add esp, 0x18 ; ret
0x000000000043f37f : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000004134ad : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x0000000000457ced : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x000000000041062a : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000044c02b : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000047ae78 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47aeac ; js 0x47aecb ; call rsp
0x000000000047b18d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47b1c1 ; js 0x47b1e0 ; call rsp
0x000000000047b554 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47b588 ; js 0x47b5a7 ; call rsp
0x0000000000415384 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000464434 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jp 0x464483 ; jmp 0x464408
0x00000000004169dd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000468e47 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000440c93 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000440b93 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x0000000000418f03 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xfff1
0x000000000044084f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000040f931 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041d20a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000485232 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x53e8
0x000000000046bcad : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8349
0x000000000046d3c2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000043e221 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000425369 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000045a00d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004135fe : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000047161d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000004421ec : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043ce0d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x0000000000444063 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004754fd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000049fffd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045261d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000044b40e : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000000000042a0d7 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042565d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x00000000004255ed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000044681d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x000000000048405d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000042a141 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000466b8d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000042d9cd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000044d61d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000049e181 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; jmp rax
0x0000000000433be8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004103f0 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000004c87de : add byte ptr [rax], al ; add byte ptr [rax - 3], dl ; jmp qword ptr [rbx]
0x0000000000467e74 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xfb57
0x000000000041699b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000473bdb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000046417b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x00000000004623bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000004134ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x0000000000457ceb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x000000000049a31b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000004169db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000041d208 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000485230 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x53e8
0x000000000045df1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004576db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043ce0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000004754fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000049fffb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045261b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000042565b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x00000000004255eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000044681b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x000000000048405b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x0000000000499c8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000004157db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004ae8b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004aeda2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004171bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000043d04b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000049a96b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0xde89
0x000000000042214b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000420d1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000411fab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x0000000000442369 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x0000000000465cdc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x00000000004777cf : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000047d67c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004b08dc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004afa8c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x000000000045ee44 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000004a39ac : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rbx
0x000000000043b56c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043b57c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043b58c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000043b59c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000043b5ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000043b4ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043b4fc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043b50c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043b51c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043b52c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000043b53c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000043b54c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043b55c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000043b4dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000043af3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000043a91c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004207ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000041526c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000479b72 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000049a2ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 5 ; ret
0x0000000000434bfc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004779ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x00000000004169cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000004169dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000411fac : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000434d4c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000044236a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000004008ec : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000415650 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414e51 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004157dd : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004af8ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004b0044 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004ae8b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004aeda4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004a3a44 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x43e4
0x00000000004bba14 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4baf
0x00000000004009a1 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x4009a1 ; call rax
0x000000000041c244 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000411d1c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042c45c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000045baec : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000441d18 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000046168d : add byte ptr [rax], al ; add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x00000000004475b2 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x000000000043d73a : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x000000000043da89 : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000047b1bf : add byte ptr [rax], al ; add byte ptr [rbx + 0x3950245c], cl ; ret
0x0000000000441fac : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x00000000004344dd : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000411763 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000415651 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000413110 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004432c3 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 5], al ; ret
0x000000000045fbb6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000045d35c : add byte ptr [rax], al ; add byte ptr [rbx - 0x4db43], al ; call qword ptr [rax]
0x000000000044316d : add byte ptr [rax], al ; add byte ptr [rbx - 0x76bef020], al ; ret 0xb8
0x00000000004624e6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004167dc : add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x000000000040fde7 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000045c962 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045c8e5 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x0000000000403d03 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret
0x000000000043d04d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000049a96d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0xde89
0x000000000041fdb8 : add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x0000000000440491 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x00000000004405c5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000004403fa : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000440409 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000424f61 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000045804c : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000042214d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000420d1d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000425770 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x0000000000425796 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x000000000047bb26 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x000000000045adea : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x000000000040ec1a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004001b9 : add byte ptr [rax], al ; add byte ptr [rdi + 0x4e], al ; push rbp ; add byte ptr [rcx], ch ; ret 0x3a09
0x000000000049b607 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x000000000049b62f : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x000000000043d9e5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x0000000000434cdd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000434d4d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000004481ac : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000462105 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x0000000000411fad : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042569d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000466825 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3bba
0x000000000044cbe6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x00000000004425c4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x000000000046b1b7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000042deb2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004255b2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000004403d3 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x000000000049dd15 : add byte ptr [rax], al ; add byte ptr [rsi + rax - 0xd], dh ; ret
0x00000000004c8736 : add byte ptr [rax], al ; add byte ptr [rsi + rcx + 0x10], bh ; add dword ptr [rdx], 0x69 ; ret
0x000000000044236b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x00000000004c573e : add byte ptr [rax], al ; add byte ptr [rsi - 6], bh ; call rax
0x00000000004be3ae : add byte ptr [rax], al ; add byte ptr [rsi], 0xf5 ; call qword ptr [rbx]
0x00000000004c650e : add byte ptr [rax], al ; add byte ptr [rsi], dl ; sti ; jmp qword ptr [rdx]
0x0000000000457d3d : add byte ptr [rax], al ; add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x0000000000449045 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000471a02 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x0000000000464b30 : add byte ptr [rax], al ; add dh, al ; and al, 0x14 ; add al, ch ; ret
0x00000000004176b8 : add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000446613 : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000043c7a1 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000485100 : add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x000000000049a455 : add byte ptr [rax], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000477f47 : add byte ptr [rax], al ; add rax, -8 ; ret
0x0000000000465cde : add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000425464 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x000000000043dc5e : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000043dfa7 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000049b858 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000040114c : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x000000000044ef06 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x000000000040f3c5 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x0000000000444d57 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004777d1 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004c36e2 : add byte ptr [rax], al ; and al, 0x5d ; add byte ptr [rax], al ; cmp bl, bl ; clc ; call qword ptr [rdx]
0x00000000004c5ebe : add byte ptr [rax], al ; and al, bl ; cli ; jmp rdi
0x00000000004c614e : add byte ptr [rax], al ; and bl, 0xfa ; jmp qword ptr [rdx]
0x00000000004bf67e : add byte ptr [rax], al ; and byte ptr [rax - 0xb], ah ; call qword ptr [rcx]
0x000000000042569e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000422f60 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000464e94 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000004c76a6 : add byte ptr [rax], al ; call 0x114c72ba
0x00000000004c76d6 : add byte ptr [rax], al ; call 0x114c72ea
0x00000000004c7706 : add byte ptr [rax], al ; call 0x114c731a
0x00000000004c7cd6 : add byte ptr [rax], al ; call 0x114c7974
0x00000000004bdca6 : add byte ptr [rax], al ; call 0x134bd0f4
0x000000000041314d : add byte ptr [rax], al ; call 0x43f444
0x0000000000415b7d : add byte ptr [rax], al ; call 0x441e54
0x00000000004c25a6 : add byte ptr [rax], al ; call 0xffffffffe54c1de2
0x000000000044bd3b : add byte ptr [rax], al ; call r12
0x000000000047b034 : add byte ptr [rax], al ; call r14
0x000000000044be15 : add byte ptr [rax], al ; call r15
0x000000000040166a : add byte ptr [rax], al ; call rax
0x00000000004403d9 : add byte ptr [rax], al ; call rbx
0x00000000004b08de : add byte ptr [rax], al ; call rdi
0x000000000040e9cc : add byte ptr [rax], al ; call rdx
0x00000000004afa8e : add byte ptr [rax], al ; call rsp
0x00000000004c6626 : add byte ptr [rax], al ; clc ; cwde ; std ; call rcx
0x00000000004c76ba : add byte ptr [rax], al ; cld ; pushfq ; add byte ptr [rax], al ; loopne 0x4c76d3 ; cld ; call qword ptr [rdx]
0x00000000004c5eba : add byte ptr [rax], al ; cld ; test byte ptr [rax], al ; add byte ptr [rax], ah ; fdivr st(2) ; jmp rdi
0x00000000004c24fa : add byte ptr [rax], al ; cmp al, 0x4b ; add byte ptr [rax], al ; ror bh, 0xfd ; jmp qword ptr [rdx]
0x00000000004c73fa : add byte ptr [rax], al ; cmp al, 0x9a ; add byte ptr [rax], al ; loopne 0x4c740b ; cld ; jmp qword ptr [rax]
0x00000000004c36b6 : add byte ptr [rax], al ; cmp bl, bl ; clc ; call qword ptr [rbx]
0x00000000004c36e6 : add byte ptr [rax], al ; cmp bl, bl ; clc ; call qword ptr [rdx]
0x00000000004c7ca6 : add byte ptr [rax], al ; cmp cl, bl ; cld ; call qword ptr [rax]
0x00000000004c822e : add byte ptr [rax], al ; cmp dil, bpl ; call rcx
0x0000000000410de7 : add byte ptr [rax], al ; cmp eax, 0xff ; jne 0x410df8 ; pop rbx ; ret
0x0000000000463ef5 : add byte ptr [rax], al ; cmp qword ptr [rax + 0x30], 0 ; je 0x463f09 ; ret
0x00000000004c2636 : add byte ptr [rax], al ; cwde ; cmp edi, eax ; call qword ptr [rax]
0x00000000004c3bb6 : add byte ptr [rax], al ; cwde ; jge 0x4c3bb9 ; call rdi
0x00000000004c12d6 : add byte ptr [rax], al ; fadd dword ptr [rcx - 9] ; call qword ptr [rax]
0x00000000004c0e06 : add byte ptr [rax], al ; fdivr dword ptr [rdi] ; idiv bh ; ret
0x00000000004c639a : add byte ptr [rax], al ; fmul qword ptr [rcx + 0xae00000] ; sti ; jmp rsi
0x00000000004bfc9a : add byte ptr [rax], al ; fsub qword ptr [rdx] ; add byte ptr [rax], al ; xor byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00000000004c41b2 : add byte ptr [rax], al ; hlt ; add byte ptr [eax], al ; in al, dx ; stc ; call qword ptr [rsi]
0x00000000004c36b2 : add byte ptr [rax], al ; hlt ; pop rsp ; add byte ptr [rax], al ; cmp bl, bl ; clc ; call qword ptr [rbx]
0x00000000004c5fb2 : add byte ptr [rax], al ; hlt ; test dword ptr [rax], eax ; add byte ptr [rax], cl ; fdiv st(2), st(0) ; call rsi
0x00000000004c7ca2 : add byte ptr [rax], al ; in al, -0x5e ; add byte ptr [rax], al ; cmp cl, bl ; cld ; call qword ptr [rax]
0x00000000004c76a2 : add byte ptr [rax], al ; in al, -0x64 ; add byte ptr [rax], al ; call 0x114c72be
0x00000000004c25a2 : add byte ptr [rax], al ; in al, 0x4b ; add byte ptr [rax], al ; call 0xffffffffe54c1de6
0x00000000004bdca2 : add byte ptr [rax], al ; in al, 2 ; add byte ptr [rax], al ; call 0x134bd0f8
0x00000000004bf4aa : add byte ptr [rax], al ; in al, dx ; sbb al, byte ptr [rax] ; add al, al ; pop rcx ; cmc ; jmp qword ptr [rcx]
0x00000000004c41b6 : add byte ptr [rax], al ; in al, dx ; stc ; call qword ptr [rsi]
0x00000000004c822a : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; test al, 0 ; add byte ptr [rax + 0x3a], al ; std ; call rcx
0x00000000004c104e : add byte ptr [rax], al ; jbe 0x4c104e ; call qword ptr [rax]
0x000000000040f80c : add byte ptr [rax], al ; je 0x40f81f ; mov eax, edx ; pop rbx ; ret
0x0000000000420657 : add byte ptr [rax], al ; je 0x420664 ; ret
0x0000000000479de8 : add byte ptr [rax], al ; je 0x479df7 ; mov eax, edx ; pop rbx ; ret
0x000000000049b7ee : add byte ptr [rax], al ; je 0x49b7aa ; add rsp, 0x18 ; ret
0x000000000049dd16 : add byte ptr [rax], al ; je 0x49dd25 ; ret
0x00000000004c2632 : add byte ptr [rax], al ; je 0x4c268b ; add byte ptr [rax], al ; cwde ; cmp edi, eax ; call qword ptr [rax]
0x00000000004c4b32 : add byte ptr [rax], al ; je 0x4c4bb0 ; add byte ptr [rax], al ; pop rax ; adc al, 0xfa ; jmp rdx
0x00000000004c5e32 : add byte ptr [rax], al ; je 0x4c5dc3 ; add byte ptr [rax], al ; mov dh, dl ; cli ; jmp rsi
0x00000000004c4c3a : add byte ptr [rax], al ; jl 0x4c4cb9 ; add byte ptr [rax], al ; sbb byte ptr [rax], 0xfa ; jmp qword ptr [rax]
0x00000000004c573a : add byte ptr [rax], al ; jl 0x4c57c4 ; add byte ptr [rax], al ; add byte ptr [rsi - 6], bh ; call rax
0x00000000004c573f : add byte ptr [rax], al ; jle 0x4c5741 ; call rax
0x0000000000469609 : add byte ptr [rax], al ; jmp 0x4695d2
0x000000000043f5c4 : add byte ptr [rax], al ; jmp rax
0x00000000004a39ae : add byte ptr [rax], al ; jmp rbx
0x00000000004c48ce : add byte ptr [rax], al ; jo 0x4c48dc ; cli ; jmp rdx
0x00000000004c3056 : add byte ptr [rax], al ; js 0x4c2ff9 ; clc ; jmp rbx
0x00000000004c3316 : add byte ptr [rax], al ; js 0x4c32e8 ; std ; call qword ptr [rbx]
0x000000000043b56e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043b57e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043b58e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000043b59e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000043b5ae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000043b4cd : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043b4ee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043b4fe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043b50e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043b51e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043b52e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000043b53e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000043b47a : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043b54e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043b55e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000043b4de : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000047ae79 : add byte ptr [rax], al ; lea rdi, qword ptr [rsp + 0x78] ; call r12
0x0000000000400a0c : add byte ptr [rax], al ; leave ; ret
0x00000000004c54ee : add byte ptr [rax], al ; loopne 0x4c5548 ; cli ; jmp rsp
0x00000000004c639e : add byte ptr [rax], al ; loopne 0x4c63b1 ; sti ; jmp rsi
0x00000000004c73fe : add byte ptr [rax], al ; loopne 0x4c7407 ; cld ; jmp qword ptr [rax]
0x00000000004c76be : add byte ptr [rax], al ; loopne 0x4c76cf ; cld ; call qword ptr [rdx]
0x00000000004c76ee : add byte ptr [rax], al ; loopne 0x4c76ff ; cld ; call qword ptr [rdx]
0x00000000004c771e : add byte ptr [rax], al ; loopne 0x4c772f ; cld ; call qword ptr [rdx]
0x00000000004c0672 : add byte ptr [rax], al ; mov ah, 0x2c ; add byte ptr [rax], al ; mov cl, dl ; cmc ; call rdx
0x00000000004c1e72 : add byte ptr [rax], al ; mov ah, 0x44 ; add byte ptr [rax], al ; test al, 1 ; clc ; call rsp
0x00000000004c20ee : add byte ptr [rax], al ; mov al, 0x18 ; clc ; call qword ptr [rax]
0x000000000043a44e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000438c9e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000043af3e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000043a91e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004c0676 : add byte ptr [rax], al ; mov cl, dl ; cmc ; call rdx
0x00000000004c5e36 : add byte ptr [rax], al ; mov dh, dl ; cli ; jmp rsi
0x00000000004c7d06 : add byte ptr [rax], al ; mov dl, dh ; cld ; call qword ptr [rax]
0x0000000000463fcb : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043a92e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004207ee : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000046a16e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x000000000046a15e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x000000000046a17e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x0000000000417e51 : add byte ptr [rax], al ; mov eax, 0x6c9800 ; ret
0x00000000004634e1 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004103f1 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000473f26 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000049a2ae : add byte ptr [rax], al ; mov eax, 5 ; ret
0x000000000041669e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000049d6fe : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49d719 ; ret
0x000000000049d91e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49d939 ; ret
0x0000000000487bfe : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x24465a] ; ret
0x000000000040f621 : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040fde8 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000472b66 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000040f855 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000444003 : add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000043a95e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000402c26 : add byte ptr [rax], al ; mov edi, 0x6cb720 ; call rbx
0x000000000049b608 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000049b630 : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000413148 : add byte ptr [rax], al ; mov edx, 1 ; call 0x43f449
0x00000000004344de : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434bfe : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004731b9 : add byte ptr [rax], al ; mov edx, r13d ; xor edi, edi ; call 0x43f449
0x00000000004403d4 : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x00000000004be47a : add byte ptr [rax], al ; mov esp, 0x1000000a ; or ch, dh ; call qword ptr [rdx]
0x000000000047a5a8 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000454595 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x0000000000487512 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000487596 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x00000000004702b4 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x308], rax ; ret
0x000000000042c0ee : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000049b96e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x0000000000479b60 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000044ec4f : add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x000000000041694e : add byte ptr [rax], al ; mov rax, -1 ; ret
0x0000000000465cfe : add byte ptr [rax], al ; mov rax, 1 ; ret
0x0000000000465d0e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x0000000000465d1e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x0000000000465d2e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x0000000000465d3e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x0000000000465d4e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x0000000000465d5e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x0000000000414e89 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000410e00 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000415385 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00000000004779ee : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x00000000004710ee : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x000000000046446e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000004169ce : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000049b93e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000049b97e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000049b9de : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000049b9ce : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000049b98e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x0000000000444cee : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2875d1] ; ret
0x00000000004169ae : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2b2709] ; ret
0x000000000040fc15 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049bae7 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000040faa1 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041d632 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000041b902 : add byte ptr [rax], al ; mov rax, rcx ; ret
0x00000000004169de : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000041dcdf : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000479f29 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x0000000000464435 : add byte ptr [rax], al ; mov rdi, qword ptr [rdx + 0x40] ; jmp 0x464407
0x00000000004405c6 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000440492 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x000000000044040a : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000004403fb : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000440850 : add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x0000000000461e36 : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000046174b : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000434a3e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000004178e1 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x417904
0x000000000049bf4e : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x00000000004005d4 : add byte ptr [rax], al ; mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e7 ; ret
0x00000000004bfb4a : add byte ptr [rax], al ; mov word ptr [rcx], fs ; add byte ptr [rax], al ; push rax ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rax]
0x00000000004c614a : add byte ptr [rax], al ; mov word ptr [rdi - 0x1c800000], es ; cli ; jmp qword ptr [rdx]
0x00000000004c104a : add byte ptr [rax], al ; mov word ptr [rsi], dr0 ; add byte ptr [rax], al ; jbe 0x4c1052 ; call qword ptr [rax]
0x00000000004c6622 : add byte ptr [rax], al ; mov word ptr fs:[rax], es ; add al, bh ; cwde ; std ; call rcx
0x00000000004be462 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or al, byte ptr [rax] ; add byte ptr [rax], bl ; or ch, dh ; call qword ptr [rax]
0x00000000004997af : add byte ptr [rax], al ; movsxd rcx, dword ptr [r14 + rsi*4] ; add rcx, r14 ; jmp rcx
0x000000000047fcd6 : add byte ptr [rax], al ; movzx eax, al ; jmp qword ptr [rax*8 + 0x4bc2f0]
0x0000000000411fae : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000043466e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000434d4e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000434cde : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000044236c : add byte ptr [rax], al ; nop ; ret
0x00000000004c5fb6 : add byte ptr [rax], al ; or ah, bl ; cli ; call rsi
0x00000000004c48ca : add byte ptr [rax], al ; or al, 0x6f ; add byte ptr [rax], al ; jo 0x4c48e0 ; cli ; jmp rdx
0x00000000004c2bd6 : add byte ptr [rax], al ; or byte ptr [rax - 8], bh ; call qword ptr [rcx]
0x00000000004bee56 : add byte ptr [rax], al ; or byte ptr [rcx], bh ; cmc ; call qword ptr [rax]
0x0000000000475ee4 : add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x00000000004bde86 : add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; hlt ; call qword ptr [rax]
0x00000000004c4b36 : add byte ptr [rax], al ; pop rax ; adc al, 0xfa ; jmp rdx
0x00000000004bfd86 : add byte ptr [rax], al ; pop rax ; je 0x4bfd85 ; call qword ptr [rdx]
0x00000000004c3b26 : add byte ptr [rax], al ; pop rax ; ret
0x000000000045ba1d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000045baed : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004008ee : add byte ptr [rax], al ; pop rbp ; ret
0x000000000043da8a : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x00000000004624e7 : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000459aec : add byte ptr [rax], al ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000441fad : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000411764 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000400606 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004004ce : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000411d4b : add byte ptr [rax], al ; pop rbx ; ret
0x00000000004c771a : add byte ptr [rax], al ; pop rsp ; popfq ; add byte ptr [rax], al ; loopne 0x4c7733 ; cld ; call qword ptr [rdx]
0x00000000004c7702 : add byte ptr [rax], al ; popfq ; add byte ptr [rax], al ; call 0x114c731e
0x00000000004bfb4e : add byte ptr [rax], al ; push rax ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rax]
0x00000000004c87df : add byte ptr [rax], al ; push rax ; std ; jmp qword ptr [rbx]
0x00000000004001ba : add byte ptr [rax], al ; push rbp ; add byte ptr [rcx], ch ; ret 0x3a09
0x00000000004c6712 : add byte ptr [rax], al ; push rsp ; lea eax, dword ptr [rax] ; add byte ptr [rax], ch ; sbb bl, bh ; call qword ptr [rax]
0x00000000004c3312 : add byte ptr [rax], al ; push rsp ; pop rcx ; add byte ptr [rax], al ; js 0x4c32ec ; std ; call qword ptr [rbx]
0x0000000000401153 : add byte ptr [rax], al ; ret
0x00000000004a6c66 : add byte ptr [rax], al ; ret 0
0x00000000004adbde : add byte ptr [rax], al ; ret 0x10
0x00000000004af8ae : add byte ptr [rax], al ; ret 0x1d4
0x00000000004b0046 : add byte ptr [rax], al ; ret 0x1d5
0x00000000004ae8b6 : add byte ptr [rax], al ; ret 0x24
0x00000000004aeda6 : add byte ptr [rax], al ; ret 0x33
0x00000000004a3a46 : add byte ptr [rax], al ; ret 0x43e4
0x00000000004bba16 : add byte ptr [rax], al ; ret 0x4baf
0x00000000004ad3de : add byte ptr [rax], al ; ret 0xa
0x00000000004ad7de : add byte ptr [rax], al ; ret 0xd
0x00000000004c13df : add byte ptr [rax], al ; ret 0xfff7
0x00000000004b0c82 : add byte ptr [rax], al ; ret 1
0x00000000004b0e82 : add byte ptr [rax], al ; ret 2
0x00000000004b1082 : add byte ptr [rax], al ; ret 3
0x00000000004b1282 : add byte ptr [rax], al ; ret 4
0x00000000004b1482 : add byte ptr [rax], al ; ret 5
0x00000000004acf86 : add byte ptr [rax], al ; ret 6
0x00000000004b1882 : add byte ptr [rax], al ; ret 7
0x00000000004b1a82 : add byte ptr [rax], al ; ret 8
0x00000000004b1c82 : add byte ptr [rax], al ; ret 9
0x00000000004b127e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000004c24fe : add byte ptr [rax], al ; ror bh, 0xfd ; jmp qword ptr [rdx]
0x00000000004ad686 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000004c87da : add byte ptr [rax], al ; sbb al, 0xae ; add byte ptr [rax], al ; add byte ptr [rax - 3], dl ; jmp qword ptr [rbx]
0x00000000004c4c3e : add byte ptr [rax], al ; sbb byte ptr [rax], 0xfa ; jmp qword ptr [rax]
0x00000000004c1cf6 : add byte ptr [rax], al ; sbb byte ptr [rax], al ; clc ; call qword ptr [rcx]
0x00000000004be466 : add byte ptr [rax], al ; sbb byte ptr [rax], cl ; cmc ; call qword ptr [rax]
0x00000000004c20ea : add byte ptr [rax], al ; sub al, 0x47 ; add byte ptr [rax], al ; mov al, 0x18 ; clc ; call qword ptr [rax]
0x00000000004c3eea : add byte ptr [rax], al ; sub al, 0x65 ; add byte ptr [rax], al ; adc ah, ah ; stc ; jmp rax
0x00000000004c54ea : add byte ptr [rax], al ; sub al, 0x7b ; add byte ptr [rax], al ; loopne 0x4c554c ; cli ; jmp rsp
0x00000000004c76ea : add byte ptr [rax], al ; sub al, 0x9d ; add byte ptr [rax], al ; loopne 0x4c7703 ; cld ; call qword ptr [rdx]
0x00000000004c4796 : add byte ptr [rax], al ; sub byte ptr [rax], al ; cli ; call rsi
0x00000000004c6716 : add byte ptr [rax], al ; sub byte ptr [rax], bl ; sti ; call qword ptr [rax]
0x00000000004c0e86 : add byte ptr [rax], al ; sub byte ptr [rbp - 0xa], al ; call qword ptr [rsi]
0x00000000004c696e : add byte ptr [rax], al ; sub byte ptr [rdx], 0xfb ; call rsp
0x000000000042e8fc : add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000415dd6 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000441e65 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x0000000000466813 : add byte ptr [rax], al ; syscall ; ret
0x00000000004becb6 : add byte ptr [rax], al ; test al, 0x30 ; cmc ; jmp qword ptr [rsi]
0x00000000004c1e76 : add byte ptr [rax], al ; test al, 1 ; clc ; call rsp
0x00000000004bde42 : add byte ptr [rax], al ; test byte ptr [rax + rax], al ; add byte ptr [rax], ch ; add edi, esi ; call rdi
0x0000000000441d19 : add byte ptr [rax], al ; test eax, eax ; cmove eax, edx ; ret
0x00000000004009a3 : add byte ptr [rax], al ; test rax, rax ; je 0x40099f ; call rax
0x00000000004bee52 : add byte ptr [rax], al ; xchg eax, esp ; adc al, 0 ; add byte ptr [rax], cl ; cmp ebp, esi ; call qword ptr [rax]
0x00000000004c1d52 : add byte ptr [rax], al ; xchg eax, esp ; add byte ptr [r8], al ; add al, dil ; call qword ptr [rdi]
0x00000000004c5b52 : add byte ptr [rax], al ; xchg eax, esp ; add dword ptr [rax], 0xfaadc800 ; call rdx
0x00000000004c3052 : add byte ptr [rax], al ; xchg eax, esp ; push rsi ; add byte ptr [rax], al ; js 0x4c2ffd ; clc ; jmp rbx
0x00000000004c1cf2 : add byte ptr [rax], al ; xor al, 0x43 ; add byte ptr [rax], al ; sbb byte ptr [rax], al ; clc ; call qword ptr [rcx]
0x00000000004bfc9e : add byte ptr [rax], al ; xor byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00000000004511e7 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000040ec1b : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000469b05 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000041c246 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000411d1e : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004135ae : add byte ptr [rax], al ; xor eax, eax ; test rdx, rdx ; jne 0x4135c9 ; ret
0x0000000000487781 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000440346 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x000000000044036b : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000044038f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000004403af : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000042564d : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004c7ca7 : add byte ptr [rax], bh ; frndint ; call qword ptr [rax]
0x00000000004c1cf7 : add byte ptr [rax], bl ; add al, bh ; call qword ptr [rcx]
0x00000000004c18f7 : add byte ptr [rax], bl ; fcomi st(7) ; jmp qword ptr [rbx]
0x00000000004be467 : add byte ptr [rax], bl ; or ch, dh ; call qword ptr [rax]
0x00000000004c4797 : add byte ptr [rax], ch ; add dl, bh ; call rsi
0x00000000004bde47 : add byte ptr [rax], ch ; add edi, esi ; call rdi
0x00000000004c6717 : add byte ptr [rax], ch ; sbb bl, bh ; call qword ptr [rax]
0x00000000004c1d57 : add byte ptr [rax], cl ; clc ; call qword ptr [rdi]
0x00000000004bee57 : add byte ptr [rax], cl ; cmp ebp, esi ; call qword ptr [rax]
0x00000000004c5fb7 : add byte ptr [rax], cl ; fdiv st(2), st(0) ; call rsi
0x0000000000475ee5 : add byte ptr [rax], cl ; je 0x475f52 ; pop rbx ; ret
0x00000000004c2bd7 : add byte ptr [rax], cl ; js 0x4c2bd7 ; call qword ptr [rcx]
0x00000000004c32d7 : add byte ptr [rax], cl ; mov bl, 0xf8 ; call qword ptr [rdi]
0x000000000049a08e : add byte ptr [rax], cl ; mov byte ptr [rip + 0x231ac9], 8 ; ret
0x000000000049a095 : add byte ptr [rax], cl ; ret
0x00000000004bfc9f : add byte ptr [rax], dh ; jae 0x4bfc9c ; call qword ptr [rsi]
0x00000000004c3eef : add byte ptr [rax], dl ; in al, -7 ; jmp rax
0x000000000040103f : add byte ptr [rax], dl ; jmp 0x400fa3
0x00000000004be47f : add byte ptr [rax], dl ; or ch, dh ; call qword ptr [rdx]
0x000000000047039d : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004779bd : add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x000000000047d81d : add byte ptr [rax], r8b ; call rbx
0x00000000004c2635 : add byte ptr [rax], r8b ; cwde ; cmp edi, eax ; call qword ptr [rax]
0x0000000000473f25 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x000000000043a94d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000042c0ed : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000043a98d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000047a325 : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000412dcd : add byte ptr [rax], r8b ; ret
0x00000000004c1e75 : add byte ptr [rax], r8b ; test al, 1 ; clc ; call rsp
0x00000000004996e5 : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 8 ; ret
0x000000000041358d : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x0000000000466a37 : add byte ptr [rbp + 0x39440750], cl ; ret 0x8d0f
0x000000000041ab71 : add byte ptr [rbp + 0x39], cl ; ret 0x8948
0x000000000041acee : add byte ptr [rbp + 0x39], cl ; ret 0x976
0x0000000000477ddc : add byte ptr [rbp + 0x39], dh ; xor eax, eax ; add rsp, 0x68 ; ret
0x000000000045ba1e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000045baee : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x000000000040070a : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000473cf7 : add byte ptr [rbp + 0x6348ff59], cl ; ret
0x000000000045b8af : add byte ptr [rbp + 0xa], dh ; jmp 0x45b8de
0x0000000000477c62 : add byte ptr [rbp + 0xb], dh ; add rsp, 0x38 ; ret
0x0000000000417961 : add byte ptr [rbp + 0xb], dh ; jmp 0x417991
0x000000000041d45e : add byte ptr [rbp + 0xb], dh ; jmp 0x41d48f
0x00000000004785ff : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x00000000004784ef : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000477d04 : add byte ptr [rbp + 9], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000004c7703 : add byte ptr [rbp + rbx*4], al ; add al, ch ; or ah, bh ; call qword ptr [rax]
0x00000000004c771b : add byte ptr [rbp + rbx*4], bl ; add al, ah ; or ah, bh ; call qword ptr [rdx]
0x00000000004ad7d7 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x00000000004645be : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x00000000004c6713 : add byte ptr [rbp + rcx*4], dl ; add byte ptr [rax], ch ; sbb bl, bh ; call qword ptr [rax]
0x00000000004c573b : add byte ptr [rbp + rdi*2], bh ; add byte ptr [rax], al ; jle 0x4c5745 ; call rax
0x000000000049e284 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x0000000000441d1a : add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004ada83 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x000000000041d0ff : add byte ptr [rbp - 0x42], dh ; ret
0x0000000000451e29 : add byte ptr [rbp - 0x75], cl ; jl 0x451e5a ; and byte ptr [rax + 1], cl ; ret
0x000000000045c0a9 : add byte ptr [rbp - 0x75], cl ; jl 0x45c0da ; and byte ptr [rax + 1], cl ; ret
0x000000000046168f : add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x00000000004475b4 : add byte ptr [rbp - 0x77], cl ; fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x00000000004a2970 : add byte ptr [rbp - 0x792f0008], 0xf8 ; jmp qword ptr [rax]
0x000000000043d73c : add byte ptr [rbp - 0x7b], al ; fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x0000000000415ec2 : add byte ptr [rbp - 0x7b], al ; test byte ptr [rax - 0x77], 0x1d ; ret
0x000000000047fc8f : add byte ptr [rbp - 0x7cb776f4], cl ; ret 0x8d01
0x0000000000428909 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x0000000000473f18 : add byte ptr [rbx + 0x2562500d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000043da8b : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000046f860 : add byte ptr [rbx + 0x25c99115], cl ; add bh, dh ; ret 0x804
0x0000000000410de8 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x0000000000416a47 : add byte ptr [rbx + 0x2b4b5505], al ; add byte ptr [rcx], al ; ret
0x000000000047b1c1 : add byte ptr [rbx + 0x3950245c], cl ; ret
0x0000000000441fae : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000459aed : add byte ptr [rbx + 0x44], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000043a95f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000043a48f : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x000000000041f8b7 : add byte ptr [rbx + 0x4c], bl ; mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x00000000004344df : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000418999 : add byte ptr [rbx + 0x5cbe02e7], al ; ret 0x4b
0x0000000000470396 : add byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000041dde7 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x00000000004127e1 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000411765 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000400607 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004004cf : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000049d6ff : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x0000000000483205 : add byte ptr [rbx + 0xa880], cl ; add byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000044eb4a : add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004c1d53 : add byte ptr [rbx + rax*2 + 0x480000], dl ; clc ; call qword ptr [rdi]
0x00000000004c1cf3 : add byte ptr [rbx + rax*2], dh ; add byte ptr [rax], al ; sbb byte ptr [rax], al ; clc ; call qword ptr [rcx]
0x00000000004c24fb : add byte ptr [rbx + rcx*2], bh ; add byte ptr [rax], al ; ror bh, 0xfd ; jmp qword ptr [rdx]
0x0000000000474722 : add byte ptr [rbx + rcx*4 + 0x45], al ; test byte ptr [rax - 0x77], cl ; ret
0x0000000000479ac7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000047f5d7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004432c5 : add byte ptr [rbx + rcx*4 + 5], al ; ret
0x00000000004c54eb : add byte ptr [rbx + rdi*2], ch ; add byte ptr [rax], al ; loopne 0x4c554b ; cli ; jmp rsp
0x000000000045fbb8 : add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000047bee7 : add byte ptr [rbx - 0x2f76ff06], al ; jle 0x47bf01 ; ret
0x000000000046712a : add byte ptr [rbx - 0x38b7cf18], al ; ret
0x0000000000410d7f : add byte ptr [rbx - 0x3b7cb7fe], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000043db06 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x000000000043daff : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x000000000043daf8 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x000000000043daf1 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x000000000043daea : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x000000000043dae3 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x000000000045d35e : add byte ptr [rbx - 0x4db43], al ; call qword ptr [rax]
0x000000000043d855 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0x72e9
0x000000000043d840 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xaf0f
0x0000000000473f81 : add byte ptr [rbx - 0x57fef1e], al ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x00000000004747ee : add byte ptr [rbx - 0x57ffb1e], al ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000041775f : add byte ptr [rbx - 0x76b3fd1d], al ; loop 0x41772e ; pop rsp ; ret 0x4b
0x000000000044316f : add byte ptr [rbx - 0x76bef020], al ; ret 0xb8
0x00000000004624e8 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004105e4 : add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x000000000043c946 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000004067c3 : add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x0000000000462114 : add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x000000000040a438 : add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x000000000044200f : add byte ptr [rbx - 0xc8a0008], al ; xor eax, eax ; leave ; ret
0x00000000004167de : add byte ptr [rbx - 0xd], bl ; ret
0x00000000004c36cb : add byte ptr [rbx*2 - 0x24c00000], cl ; clc ; call qword ptr [rax]
0x00000000004c36e3 : add byte ptr [rbx*2 - 0x24c80000], ah ; clc ; call qword ptr [rdx]
0x00000000004c76eb : add byte ptr [rbx*4 + 0x8e00000], ch ; cld ; call qword ptr [rdx]
0x00000000004c76d3 : add byte ptr [rbx*4 + 0x8e80000], dl ; cld ; call qword ptr [rax]
0x00000000004702e7 : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000000004a2fbc : add byte ptr [rbx], bl ; stc ; call qword ptr [rax + 0x20fff91a]
0x00000000004c7cd3 : add byte ptr [rbx], dl ; add byte ptr [rax], al ; call 0x114c7977
0x000000000044e4cf : add byte ptr [rcx + 0x29], cl ; ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x0000000000464d8f : add byte ptr [rcx + 0x39], cl ; ret
0x000000000041aaaf : add byte ptr [rcx + 0x39], cl ; ret 0x860f
0x00000000004890ad : add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000425fc6 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000047da6e : add byte ptr [rcx + 0x3c8b48d8], cl ; ret 0x87f6
0x000000000040fde9 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000040f622 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x000000000047475f : add byte ptr [rcx + 0x48b48d8], cl ; ret 0x8b48
0x00000000004156a6 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000470393 : add byte ptr [rcx + 0x5d5b006c], ah ; jmp rax
0x0000000000463fcc : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000042f32e : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000042dbac : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000043a7d8 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000004997b0 : add byte ptr [rcx + 0x63], cl ; or al, 0xb6 ; add rcx, r14 ; jmp rcx
0x00000000004bfb4b : add byte ptr [rcx + 0x6f500000], cl ; cmc ; jmp qword ptr [rax]
0x000000000043fbe5 : add byte ptr [rcx + 0xf], al ; lahf ; ret
0x000000000045c964 : add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045c8e7 : add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x000000000041a7a7 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000046ea0e : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8545
0x0000000000403d05 : add byte ptr [rcx + 0xf], cl ; ret
0x000000000043d04f : add byte ptr [rcx + 1], cl ; ret
0x000000000049a96f : add byte ptr [rcx + 1], cl ; ret 0xde89
0x000000000041fdba : add byte ptr [rcx + 9], al ; ret
0x0000000000412732 : add byte ptr [rcx + r9*4 + 0x6b], cl ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004c5b53 : add byte ptr [rcx + rax*4 - 0x52380000], dl ; cli ; call rdx
0x00000000004c336b : add byte ptr [rcx + rbx*2 - 0x47f00000], ch ; clc ; call qword ptr [rdi]
0x00000000004c3313 : add byte ptr [rcx + rbx*2], dl ; add byte ptr [rax - 0x37], bh ; std ; call qword ptr [rbx]
0x000000000042c0ef : add byte ptr [rcx + rcx*4 + 0x4f], cl ; cmp bl, dh ; ret
0x0000000000412733 : add byte ptr [rcx + rcx*4 + 0x6b], cl ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000440493 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x00000000004731ba : add byte ptr [rcx + rcx*4 - 0x16], al ; xor edi, edi ; call 0x43f448
0x000000000047d96f : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x00000000004405c7 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000444982 : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x000000000049bf4f : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call r15
0x00000000004403fc : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00000000004448dc : add byte ptr [rcx + rcx*4 - 9], cl ; call r15
0x000000000044040b : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00000000004c12d3 : add byte ptr [rcx + rdi], dl ; add byte ptr [rax], al ; fadd dword ptr [rcx - 9] ; call qword ptr [rax]
0x00000000004c4b33 : add byte ptr [rcx + rsi*2], dh ; add byte ptr [rax + 0x14], bl ; cli ; jmp rdx
0x000000000048e50b : add byte ptr [rcx - 0x39], cl ; ret 0xc001
0x000000000048b653 : add byte ptr [rcx - 0x39], cl ; ret 0xfc01
0x0000000000488453 : add byte ptr [rcx - 0x39], cl ; ret 0xff81
0x000000000045a664 : add byte ptr [rcx - 0x39], cl ; ret 0xffe0
0x0000000000405544 : add byte ptr [rcx - 0x55551e], al ; call rcx
0x0000000000449323 : add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x0000000000449340 : add byte ptr [rcx - 0x73], cl ; add r9b, byte ptr [r8 + 0x39] ; ret
0x000000000044935d : add byte ptr [rcx - 0x73], cl ; add r9d, dword ptr [r8 + 0x39] ; ret
0x0000000000482620 : add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x000000000047f30b : add byte ptr [rcx - 0x75], al ; adc bh, byte ptr [rcx] ; ret 0x850f
0x000000000043feff : add byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x000000000040e92f : add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x0000000000441e77 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000424f63 : add byte ptr [rcx - 0x77], cl ; ret
0x000000000041b107 : add byte ptr [rcx - 0x77], cl ; ret 0x854d
0x000000000040fd87 : add byte ptr [rcx - 0x77], dh ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000411653 : add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x000000000045804e : add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000443667 : add byte ptr [rcx - 0x7d], cl ; ret
0x00000000004453d7 : add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x000000000046bfdf : add byte ptr [rcx - 0x7d], cl ; ret 0x4b30
0x000000000042214f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000041f400 : add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x0000000000420d1f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000041840f : add byte ptr [rcx - 0xa], al ; ret
0x000000000041a102 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000047c3c1 : add byte ptr [rcx - 0xb37b], cl ; inc dword ptr [rcx - 0x77] ; ret
0x000000000047beea : add byte ptr [rcx - 0xcf68130], cl ; ret
0x00000000004bd2c8 : add byte ptr [rcx - 3], bh ; jmp rax
0x0000000000425772 : add byte ptr [rcx - 9], cl ; ret 1
0x0000000000425798 : add byte ptr [rcx - 9], cl ; ret 2
0x00000000004425c2 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x00000000004a2838 : add byte ptr [rcx], al ; clc ; call rax
0x0000000000473f1e : add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000400969 : add byte ptr [rcx], al ; ret
0x00000000004437bc : add byte ptr [rcx], bh ; ret
0x0000000000400c5c : add byte ptr [rcx], bh ; ret 0x860f
0x0000000000467749 : add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x6c ; ret
0x000000000049bfc0 : add byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x4e ; or byte ptr [rdi], cl ; ret 0xfc3
0x00000000004001bf : add byte ptr [rcx], ch ; ret 0x3a09
0x000000000045adec : add byte ptr [rcx], ch ; ret 0xd089
0x0000000000413a3a : add byte ptr [rcx], cl ; ret 0x8948
0x000000000047aae7 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000040ec1c : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000046a72f : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7c], 0xdb ; je 0x46a72a ; ret
0x000000000046a3aa : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0x46a3e1 ; ret
0x0000000000488177 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x00000000004135af : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x4135c8 ; ret
0x0000000000479dd8 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000487782 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000044720e : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000446407 : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x000000000044688e : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x00000000004437db : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x000000000041afaa : add byte ptr [rdi + 0x4a1955], bh ; call 0x417208
0x000000000041afa9 : add byte ptr [rdi + 0x4a1955], dil ; call 0x417209
0x000000000041af91 : add byte ptr [rdi + 0x4a1f30], bh ; call 0x417208
0x000000000041af90 : add byte ptr [rdi + 0x4a1f30], dil ; call 0x417209
0x00000000004754a9 : add byte ptr [rdi + 0x4b58b0], bh ; call 0x401788
0x00000000004001bb : add byte ptr [rdi + 0x4e], al ; push rbp ; add byte ptr [rcx], ch ; ret 0x3a09
0x00000000004322e5 : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000444d90 : add byte ptr [rdi + 0x6cb6d0], bh ; call rax
0x0000000000444d8f : add byte ptr [rdi + 0x6cb6d0], r15b ; call rax
0x0000000000402c27 : add byte ptr [rdi + 0x6cb720], bh ; call rbx
0x000000000047a111 : add byte ptr [rdi + 0x6cb9c0], bh ; call rax
0x000000000047a23c : add byte ptr [rdi + 0x6cb9c4], bh ; call rdx
0x000000000049b609 : add byte ptr [rdi + 1], bh ; call r14
0x000000000049b631 : add byte ptr [rdi + 1], bh ; call rax
0x00000000004c20eb : add byte ptr [rdi + rax*2], ch ; add byte ptr [rax], al ; mov al, 0x18 ; clc ; call qword ptr [rax]
0x00000000004c614b : add byte ptr [rdi + rax*4 - 0x1c800000], cl ; cli ; jmp qword ptr [rdx]
0x00000000004c48cb : add byte ptr [rdi + rbp*2], cl ; add byte ptr [rax], al ; jo 0x4c48df ; cli ; jmp rdx
0x00000000004bba0f : add byte ptr [rdi + rbp*4 + 0x4b], dh ; add byte ptr [rax], al ; ret 0x4baf
0x000000000045ad44 : add byte ptr [rdi + rcx + 0x44], cl ; ret 0xf4c
0x0000000000459d30 : add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x00000000004c696b : add byte ptr [rdi + rcx*4 + 0x2a800000], ch ; sti ; call rsp
0x00000000004a32fc : add byte ptr [rdi - 7], dh ; call qword ptr [rax]
0x0000000000433c7a : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000043d9e7 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x0000000000434cdf : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000434d4f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000004481ae : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000462107 : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000047fcd7 : add byte ptr [rdi], cl ; mov dh, 0xc0 ; jmp qword ptr [rax*8 + 0x4bc2f0]
0x0000000000421fbf : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000465e80 : add byte ptr [rdi], cl ; mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000411faf : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042dbbf : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042581f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000042c41f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x00000000004256bf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000004256af : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000042569f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000466827 : add byte ptr [rdi], cl ; ret 0x3bba
0x000000000044cbe8 : add byte ptr [rdi], cl ; ret 0x4389
0x00000000004032a3 : add byte ptr [rdi], cl ; ret 0x8d49
0x0000000000448a5a : add byte ptr [rdi], cl ; test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041fdb4 : add byte ptr [rdi], cl ; test dl, cl ; add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x0000000000460189 : add byte ptr [rdi], cl ; test dword ptr [rax - 0x16000006], ebp ; ret 0xffef
0x0000000000451329 : add byte ptr [rdi], cl ; test dword ptr [rbx], esp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047d1b8 : add byte ptr [rdi], cl ; test dword ptr [rcx], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x000000000040ed99 : add byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041f6ca : add byte ptr [rdi], cl ; test esp, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000045d58b : add byte ptr [rdi], cl ; xchg dword ptr [rbx + rcx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041b89b : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8349
0x00000000004672d9 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000004425c6 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x000000000046724d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x000000000046b1ba : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x0000000000425cde : add byte ptr [rdx + 0x42f1e0], bh ; cmove rax, rdx ; ret
0x000000000043a44f : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x0000000000438c9f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x0000000000413149 : add byte ptr [rdx + 1], bh ; call 0x43f448
0x0000000000443fff : add byte ptr [rdx + 8], bh ; mov eax, edx ; ret
0x000000000049b7a6 : add byte ptr [rdx + rbp*2 + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004c73fb : add byte ptr [rdx + rbx*4], bh ; add byte ptr [rax], al ; loopne 0x4c740a ; cld ; jmp qword ptr [rax]
0x00000000004be47b : add byte ptr [rdx + rcx + 0x8100000], bh ; cmc ; call qword ptr [rdx]
0x00000000004be463 : add byte ptr [rdx + rcx + 0x8180000], ah ; cmc ; call qword ptr [rax]
0x00000000004ad3d7 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x00000000004c2bd3 : add byte ptr [rdx + rdx*2], dl ; add byte ptr [rax], al ; or byte ptr [rax - 8], bh ; call qword ptr [rcx]
0x00000000004c6c63 : add byte ptr [rdx + rdx*4 + 0x38680000], ah ; sti ; jmp qword ptr [rdx]
0x00000000004c7c73 : add byte ptr [rdx - 0x46680000], dh ; cld ; call qword ptr [rax]
0x0000000000468f90 : add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0x468fa5
0x00000000004a29b8 : add byte ptr [rdx - 8], dl ; call qword ptr [rax]
0x0000000000488505 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000044ec4d : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x000000000045edbb : add byte ptr [rdx], dh ; add r15b, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x000000000042deb4 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000457423 : add byte ptr [rsi + 0xf], ah ; ror byte ptr cs:[rdi], 0x8a ; ret 8
0x00000000004255b4 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000004403d5 : add byte ptr [rsi + 1], bh ; call rbx
0x00000000004405c2 : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x000000000044048e : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x0000000000440406 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x0000000000440840 : add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x00000000004405b3 : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x000000000044047f : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x00000000004403f7 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x000000000049dd17 : add byte ptr [rsi + rax - 0xd], dh ; ret
0x00000000004c87db : add byte ptr [rsi + rbp*4], bl ; add byte ptr [rax], al ; add byte ptr [rax - 3], dl ; jmp qword ptr [rbx]
0x00000000004c8738 : add byte ptr [rsi + rcx + 0x10], bh ; add dword ptr [rdx], 0x69 ; ret
0x00000000004c3053 : add byte ptr [rsi + rdx*2 - 0x65880000], dl ; clc ; jmp rbx
0x000000000044236d : add byte ptr [rsi - 0x70], ah ; ret
0x00000000004c5740 : add byte ptr [rsi - 6], bh ; call rax
0x00000000004be3b0 : add byte ptr [rsi], 0xf5 ; call qword ptr [rbx]
0x00000000004a2da4 : add byte ptr [rsi], bl ; stc ; call qword ptr [rax + 0x20fff91d]
0x00000000004c6510 : add byte ptr [rsi], dl ; sti ; jmp qword ptr [rdx]
0x00000000004c1e73 : add byte ptr [rsp + rax*2 + 0x1a80000], dh ; clc ; call rsp
0x00000000004c0673 : add byte ptr [rsp + rbp - 0x2e780000], dh ; cmc ; call rdx
0x00000000004bf67b : add byte ptr [rsp + rbx + 0x60200000], bh ; cmc ; call qword ptr [rcx]
0x00000000004c6623 : add byte ptr [rsp + rcx*4], ah ; add al, bh ; cwde ; std ; call rcx
0x00000000004bee53 : add byte ptr [rsp + rdx + 0x39080000], dl ; cmc ; call qword ptr [rax]
0x000000000045be76 : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000468917 : add byte ptr es:[rax - 0x77], cl ; jmp 0xffffffffbf09126f
0x0000000000467503 : add byte ptr es:[rax - 0x7d], cl ; ret
0x0000000000467e73 : add byte ptr es:[rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xfb57
0x000000000045b8ae : add byte ptr es:[rbp + 0xa], dh ; jmp 0x45b8df
0x00000000004672d8 : add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x000000000046724c : add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xf748
0x0000000000468f8f : add byte ptr es:[rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0x468fa6
0x0000000000425368 : add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000441d17 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x0000000000413580 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004c3eed : add byte ptr gs:[rax], al ; adc ah, ah ; stc ; jmp rax
0x0000000000411ce3 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004c104d : add byte ptr ss:[rax], al ; jbe 0x4c104f ; call qword ptr [rax]
0x0000000000457d3f : add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x00000000004baa3c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004baa3d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000004669db : add ch, byte ptr [rcx] ; ret 0x48d
0x00000000004642da : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000045c9a0 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000471ad8 : add ch, cl ; ret 0xfffd
0x0000000000459e09 : add cl, bl ; in eax, -0x21 ; loopne 0x459d9e ; ret 0xe680
0x0000000000438cc7 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x000000000045d29e : add cl, byte ptr [rax + 0x29] ; ret
0x0000000000488ba4 : add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x0000000000488bcd : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000448fe3 : add cl, byte ptr [rax + 0x39] ; ret
0x000000000046eecb : add cl, byte ptr [rax + 0x39] ; ret 0x860f
0x00000000004107c9 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000483465 : add cl, byte ptr [rax + 1] ; ret
0x000000000044c653 : add cl, byte ptr [rax + 1] ; ret 0x394c
0x0000000000438cc8 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x0000000000438c35 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000047b511 : add cl, byte ptr [rax - 0x77] ; pop rsp ; and al, 0x78 ; call r12
0x0000000000416682 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000041a8a2 : add cl, byte ptr [rax - 0x7d] ; enter 0x4801, -0x7d ; ret 0x4810
0x000000000046a7f9 : add cl, byte ptr [rax - 0x7d] ; mov dword ptr [rcx], 0x8348c889 ; ret 0x8401
0x0000000000478f1c : add cl, byte ptr [rax - 0x7d] ; ret 0x4101
0x0000000000422e00 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000447bf4 : add cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x0000000000422e63 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x0000000000463901 : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x00000000004bf250 : add cl, byte ptr [rbp + 0xa] ; ret
0x0000000000489593 : add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000434b22 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000043ebdf : add cl, byte ptr [rdi] ; ret 0x8348
0x000000000043eb37 : add cl, byte ptr [rdi] ; ret 0xfc3
0x000000000041ace8 : add cl, byte ptr [rdi] ; test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x00000000004622e5 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x000000000046d919 : add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x000000000043d7bd : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x00000000004c7157 : add cl, byte ptr [rdx] ; ret
0x0000000000475bed : add cl, ch ; mov esi, 0x89fffffe ; ret 0x758b
0x00000000004433df : add cl, ch ; ret
0x0000000000408638 : add cl, ch ; ret 0xffe2
0x0000000000471a04 : add cl, ch ; ret 0xfffd
0x0000000000400a0d : add cl, cl ; ret
0x00000000004a2b90 : add dh, 0xf8 ; call qword ptr [rax]
0x00000000004bf158 : add dh, ah ; ret
0x0000000000464b32 : add dh, al ; and al, 0x14 ; add al, ch ; ret
0x00000000004b08d7 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000434cd3 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000043f3eb : add dh, bl ; ret
0x00000000004bf056 : add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x000000000049dd22 : add dh, byte ptr [rbp + 6] ; mov eax, 8 ; ret
0x00000000004176ba : add dh, dh ; ret
0x0000000000446615 : add dh, dh ; ret 0x4801
0x0000000000425e78 : add dh, dh ; ret 0x7404
0x0000000000400e9a : add dh, dh ; ret 0x7420
0x000000000043b377 : add dh, dh ; ret 0x7501
0x000000000043b384 : add dh, dh ; ret 0x7502
0x000000000043b391 : add dh, dh ; ret 0x7504
0x000000000043b349 : add dh, dh ; ret 0x7510
0x000000000043b356 : add dh, dh ; ret 0x7520
0x000000000043b363 : add dh, dh ; ret 0x7540
0x000000000041ace5 : add dh, dh ; ret 0xf02
0x000000000046feda : add dh, dh ; ret 0xf08
0x00000000004c4799 : add dl, bh ; call rsi
0x00000000004c89af : add dword ptr [0xfffffffff501c501], ecx ; add al, byte ptr [rax] ; ret
0x00000000004c10f4 : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x0000000000449326 : add dword ptr [r8 + 0x39], r9d ; ret
0x0000000000461a1e : add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000462172 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x000000000046ff4c : add dword ptr [r9 - 0x5efa09fe], ecx ; ret 0x25
0x0000000000448990 : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x000000000043a451 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x0000000000415301 : add dword ptr [rax + 0x39], ecx ; ret
0x0000000000473d69 : add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000473d7b : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x00000000004790b0 : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x0000000000458d9d : add dword ptr [rax + 0x39], ecx ; ret 0x8d0f
0x000000000049c0f9 : add dword ptr [rax + 0x63], ecx ; ret
0x000000000047b45d : add dword ptr [rax + 1], ecx ; ret
0x000000000040db86 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000049dd12 : add dword ptr [rax + 3], edi ; je 0x49dd29 ; ret
0x00000000004c4466 : add dword ptr [rax + rbp*2], 0xa ; ret
0x0000000000457886 : add dword ptr [rax - 0x39], ecx ; ret 0xfff0
0x0000000000402873 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x000000000049aa5a : add dword ptr [rax - 0x73], ecx ; push rdi ; add ecx, dword ptr [rax + 0x63] ; ret
0x0000000000438ca1 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x0000000000473c0d : add dword ptr [rax - 0x77], ecx ; adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000438c32 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000415103 : add dword ptr [rax - 0x77], ecx ; or byte ptr [r15], cl ; mov dh, 2 ; pop rbx ; ret
0x00000000004186de : add dword ptr [rax - 0x77], ecx ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000041529a : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000464a61 : add dword ptr [rax - 0x77], ecx ; ret
0x0000000000471247 : add dword ptr [rax - 0x77], ecx ; ret 0x8348
0x0000000000412fef : add dword ptr [rax - 0x77], ecx ; ret 0x850f
0x0000000000473b6d : add dword ptr [rax - 0x7d], ecx ; clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000424e22 : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000472e24 : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x0000000000461a1f : add dword ptr [rax - 0x7d], ecx ; ret 0x4502
0x000000000044fbe9 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000041a8a6 : add dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x0000000000443bdc : add dword ptr [rax - 0x7d], ecx ; ret 0x4830
0x00000000004520c3 : add dword ptr [rax - 0x7d], ecx ; ret 0x4910
0x00000000004462ee : add dword ptr [rax - 0x7d], ecx ; ret 0x4d02
0x0000000000489484 : add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x000000000047cc83 : add dword ptr [rax - 0x7d], ecx ; ret 0x8008
0x0000000000462173 : add dword ptr [rax - 0x7d], ecx ; ret 0x8508
0x00000000004808ca : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000004c5b55 : add dword ptr [rax], 0xfaadc800 ; call rdx
0x000000000040f8f6 : add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000044b836 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000044a9ae : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x0000000000472f34 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000411e26 : add dword ptr [rax], eax ; add byte ptr [rax + 0x5b004a12], ah ; ret
0x000000000047e2a7 : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x00000000004206c9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000041aa5b : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000004116a6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044e745 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000049b495 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000463f58 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x000000000041dbf6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041dd20 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000405a57 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041bef7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x000000000040ed9d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000422bed : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000448de4 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000424bfe : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000042b66f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422b41 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044bb92 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00000000004634e0 : add dword ptr [rax], eax ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000444061 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004b08da : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004afa8a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004af8b2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004af8aa : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004b0042 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000041314b : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x43f446
0x000000000049b60b : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x0000000000401668 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x00000000004403d7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x0000000000469607 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x4695d4
0x000000000049befd : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000049bb78 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000479b5e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x00000000004405c4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000440490 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000440408 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x000000000044084e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x0000000000461e34 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x0000000000461749 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000045baeb : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000415703 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e03c : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000443787 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000041acec : add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x0000000000415ec0 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], al ; test byte ptr [rax - 0x77], 0x1d ; ret
0x000000000049b46e : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000400605 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000443873 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000467128 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x38b7cf18], al ; ret
0x00000000004105e2 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x0000000000462112 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x000000000044545c : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000041f3fe : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x0000000000448a5e : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000467747 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x6c ; ret
0x0000000000413a38 : add dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret 0x8948
0x0000000000446405 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x000000000043b375 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x000000000043b382 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000043b38f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x000000000043b347 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000043b354 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000043b361 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x0000000000420938 : add dword ptr [rax], eax ; ret
0x0000000000425221 : add dword ptr [rax], edi ; ret
0x000000000043d7f7 : add dword ptr [rbp + 0x41], ebx ; pop rsp ; pop r13 ; ret
0x000000000047d962 : add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x0000000000489573 : add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000485497 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret 0x2941
0x0000000000441c89 : add dword ptr [rbp - 0xc], esi ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000434b92 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000040d5bd : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000004c89fa : add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000004c89f7 : add dword ptr [rbx], ecx ; fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x0000000000469719 : add dword ptr [rcx + 0x39], ecx ; ret 0x850f
0x000000000044642a : add dword ptr [rcx + 0x39], ecx ; ret 0xe077
0x00000000004468b8 : add dword ptr [rcx + 0x39], ecx ; ret 0xe277
0x000000000046ff4d : add dword ptr [rcx - 0x5efa09fe], ecx ; ret 0x25
0x000000000041b31a : add dword ptr [rcx - 0x75], ecx ; push rax ; or dh, dh ; ret 0xf04
0x0000000000438cd1 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x0000000000461530 : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000044540d : add dword ptr [rcx - 0x7d], ecx ; ret 0x4101
0x00000000004042ad : add dword ptr [rcx - 0x7d], ecx ; ret 0x4804
0x0000000000457f3b : add dword ptr [rcx - 0x7f], ecx ; jmp qword ptr [rax]
0x0000000000424c17 : add dword ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000476bdb : add dword ptr [rcx], ebp ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004c6375 : add dword ptr [rdi], 0x48 ; or eax, 0x1370303 ; ret
0x00000000004c62b5 : add dword ptr [rdi], 0x48 ; or eax, 0x34b0303 ; ret
0x00000000004c6315 : add dword ptr [rdi], 0x48 ; or eax, 0x35b0303 ; ret
0x00000000004c62c6 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004c6326 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; cld ; ret
0x00000000004c6386 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004c1f65 : add dword ptr [rdi], 3 ; mov bh, 1 ; ret
0x00000000004c7153 : add dword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x00000000004c70a2 : add dword ptr [rdi], 3 ; test byte ptr [rcx], al ; ret
0x000000000043d858 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x72e9
0x000000000043d843 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000000000045b2d1 : add dword ptr [rdi], ecx ; test dl, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000473f87 : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x00000000004747f4 : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000043d71d : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x0000000000499520 : add dword ptr [rdx + 0x2b], 0xd9748104 ; ret
0x000000000043d2e2 : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x0000000000434edd : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004879fb : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000004bf156 : add dword ptr [rdx + rax], -0xc ; ret
0x000000000046cf27 : add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x000000000046d217 : add dword ptr [rdx - 0x77], eax ; je 0x46d1a7 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x000000000046d216 : add dword ptr [rdx - 0x77], eax ; je 0x46d1a8 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x00000000004c03c5 : add dword ptr [rdx], 0x43 ; ret
0x00000000004c6085 : add dword ptr [rdx], 0x48 ; ret
0x00000000004c8774 : add dword ptr [rdx], 0x54 ; ret
0x00000000004c5b44 : add dword ptr [rdx], 0x55 ; ret
0x00000000004c607c : add dword ptr [rdx], 0x5b ; ret
0x00000000004c871c : add dword ptr [rdx], 0x69 ; ret
0x00000000004172b6 : add dword ptr [rdx], 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004c45b4 : add dword ptr [rdx], 2 ; pop rsi ; ret
0x00000000004c438c : add dword ptr [rdx], 2 ; push rsi ; ret
0x00000000004bf9c4 : add dword ptr [rdx], 2 ; ret
0x00000000004bf262 : add dword ptr [rdx], ecx ; ret
0x0000000000416a48 : add dword ptr [rip + 0x2b4b55], 1 ; ret
0x00000000004be676 : add dword ptr [rsi + rcx + 0x10], ecx ; je 0x4be68c ; ret
0x00000000004be684 : add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000438cb2 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000004bf566 : add dword ptr [rsi], 0xa ; ret
0x00000000004bf5d8 : add dword ptr [rsi], 2 ; xchg eax, ebp ; ret
0x00000000004c10f5 : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x0000000000400d0d : add dword ptr [rsi], edx ; and eax, 0xf ; mov dword ptr [r8], eax ; pop rbx ; ret
0x00000000004c1abe : add dword ptr [rsp + rbp*2], 0xa ; ret
0x0000000000496e37 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c716a : add dword ptr es:[rdx], ecx ; ret
0x00000000004262d8 : add eax, 0x12ad3 ; ret
0x0000000000422da8 : add eax, 0x14853 ; ret
0x000000000042574a : add eax, 0x15e71 ; ret
0x0000000000425d24 : add eax, 0x17647 ; ret
0x0000000000420935 : add eax, 0x1a966 ; ret
0x000000000042572e : add eax, 0x1d ; ret
0x000000000044ec4c : add eax, 0x200 ; mov qword ptr fs:[rdx], rax ; ret
0x00000000004c0c3c : add eax, 0x2300e4a ; ret
0x0000000000487c01 : add eax, 0x24465a ; ret
0x0000000000475e10 : add eax, 0x2563e2 ; jne 0x475e59 ; ret
0x000000000047361c : add eax, 0x258747 ; mov qword ptr [rsi], rax ; ret
0x00000000004735bb : add eax, 0x2587b0 ; ret
0x00000000004734da : add eax, 0x258891 ; add rsp, 8 ; ret
0x000000000044c062 : add eax, 0x27f691 ; ret
0x0000000000444cf2 : add eax, 0x2875d1 ; ret
0x00000000004437a1 : add eax, 0x288b0a ; test eax, eax ; je 0x4437b9 ; ret
0x000000000041f614 : add eax, 0x2aa15b ; push rax ; ret 0x41
0x000000000041e876 : add eax, 0x2aaef9 ; push rax ; ret 0x41
0x000000000041d277 : add eax, 0x2ac4f8 ; push rax ; ret 0x41
0x000000000041d289 : add eax, 0x2ae376 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004169b2 : add eax, 0x2b2709 ; ret
0x0000000000416ab6 : add eax, 0x2b4ae9 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040154b : add eax, 0x2c7b40 ; xor eax, eax ; ret
0x0000000000400706 : add eax, 0x2c99a5 ; pop rbp ; pop r12 ; ret
0x0000000000400965 : add eax, 0x2ca1f5 ; add ebx, esi ; ret
0x00000000004c10f3 : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x000000000043a4e8 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x0000000000438d18 : add eax, 0x48054289 ; mov eax, edi ; ret
0x000000000043a9e6 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x000000000043a569 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000438d59 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x0000000000479f66 : add eax, 0x5b000000 ; ret
0x00000000004b147d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x0000000000418ad5 : add eax, 0x5c415d5b ; ret
0x00000000004263f4 : add eax, 0x67 ; ret
0x00000000004895f3 : add eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000043d717 : add eax, 0x8307e083 ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x00000000004227dd : add eax, 0x83480000 ; ret 0x4910
0x0000000000429c61 : add eax, 0x83480000 ; ret 0xe910
0x0000000000422731 : add eax, 0x83480000 ; ret 0xeb10
0x0000000000455c3d : add eax, 0x83480001 ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000043a4eb : add eax, 0x8428d48 ; ret
0x0000000000425742 : add eax, 0x8449 ; ret
0x0000000000484cda : add eax, 0x89000001 ; ret 0x348
0x0000000000448fdd : add eax, 0x8d480000 ; add cl, byte ptr [rax + 0x39] ; ret
0x000000000044933e : add eax, 0x8d490000 ; add r9b, byte ptr [r8 + 0x39] ; ret
0x000000000044935b : add eax, 0x8d490000 ; add r9d, dword ptr [r8 + 0x39] ; ret
0x000000000042ebea : add eax, 0xc0310000 ; ret
0x000000000043a56d : add eax, 0xc428d48 ; ret
0x000000000043b04d : add eax, 0xc478d48 ; ret
0x0000000000440872 : add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x0000000000440897 : add eax, 0xf6310000 ; mov rdi, r13 ; call rbx
0x00000000004409e0 : add eax, 0xf6310000 ; mov rdi, r14 ; call rbx
0x0000000000440a79 : add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x0000000000434b83 : add eax, 0xf7f0ff3 ; ret
0x0000000000472e1f : add eax, 0xfffffbd8 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x0000000000477f4a : add eax, 0xfffffff8 ; ret
0x000000000043d7f5 : add eax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000465cd1 : add eax, 1 ; ret
0x0000000000444045 : add eax, 2 ; push rax ; call rbx
0x0000000000465cc8 : add eax, 2 ; ret
0x0000000000420b88 : add eax, 3 ; ret
0x0000000000426447 : add eax, 4 ; ret
0x000000000044eba9 : add eax, dword ptr [0] ; ret
0x00000000004702e8 : add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000418c73 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x00000000004179db : add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000047083e : add eax, dword ptr [rax] ; add byte ptr [rax + rcx*2], al ; add esp, 8 ; ret
0x000000000044d268 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041c494 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000046f223 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042297d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429e01 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004229a1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000444c96 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000049dd14 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; je 0x49dd27 ; ret
0x000000000043f5dc : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x0000000000440dbd : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000440e14 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000440e94 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000440f94 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000004001b8 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; push rbp ; add byte ptr [rcx], ch ; ret 0x3a09
0x0000000000420b89 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000475ee3 : add eax, dword ptr [rax] ; add byte ptr [rax], cl ; je 0x475f54 ; pop rbx ; ret
0x000000000043d853 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0x72e9
0x000000000047da6c : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x3c8b48d8], cl ; ret 0x87f6
0x0000000000441e75 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000041a142 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000046fed8 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x0000000000444981 : add eax, dword ptr [rax] ; mov rdi, r12 ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x00000000004448db : add eax, dword ptr [rax] ; mov rdi, r14 ; call r15
0x000000000044428a : add eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x000000000043da70 : add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043da90 : add eax, dword ptr [rax] ; ret
0x00000000004c551b : add eax, dword ptr [rbx + 0xaf10204] ; ret
0x00000000004bf24a : add eax, dword ptr [rbx + 0xe] ; and byte ptr [rbx + 0xa4d0204], al ; ret
0x000000000047e091 : add eax, dword ptr [rbx] ; call rax
0x00000000004c62c9 : add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x0000000000411454 : add eax, dword ptr [rcx + 0x39] ; fadd dword ptr [rdi + rcx + 0x47] ; ret
0x000000000047c31d : add eax, dword ptr [rcx + 0x5d] ; pop r14 ; pop r15 ; ret
0x00000000004c7223 : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0x1890304], al ; ret
0x00000000004bec72 : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa470204], al ; ret
0x000000000046a51a : add eax, dword ptr [rcx + rdx] ; ret
0x00000000004710f5 : add eax, dword ptr [rdi] ; call rax
0x0000000000477cf4 : add eax, dword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000475449 : add eax, dword ptr [rdx + 8] ; call rax
0x00000000004c6329 : add eax, dword ptr [rdx] ; cld ; ret
0x00000000004c6389 : add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004be9c2 : add eax, dword ptr [rsi + 0x180e6e02] ; ret
0x00000000004c3b3a : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000004bf152 : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], -0xc ; ret
0x00000000004c1aba : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rsp + rbp*2], 0xa ; ret
0x0000000000470c5b : add eax, dword ptr [rsp] ; call rax
0x000000000043db38 : add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000049958e : add eax, eax ; jmp r8
0x000000000049aab6 : add eax, eax ; jmp rax
0x0000000000459a38 : add eax, eax ; ret
0x0000000000441639 : add eax, eax ; std ; dec dword ptr [rcx - 0x75] ; jge 0x441649 ; call rbx
0x0000000000425366 : add eax, ebp ; add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000049a75e : add eax, ebp ; jmp rax
0x0000000000416723 : add eax, ecx ; mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x000000000042546a : add eax, ecx ; ret
0x0000000000425467 : add eax, edi ; add rax, rcx ; ret
0x00000000004a2839 : add eax, edi ; call rax
0x00000000004c1e79 : add eax, edi ; call rsp
0x00000000004256a4 : add eax, edi ; ret
0x0000000000423076 : add eax, edx ; sub rax, rdi ; ret
0x000000000049b03e : add eax, esi ; jmp rax
0x0000000000466847 : add eax, esi ; ret
0x0000000000459a37 : add eax, r8d ; ret
0x0000000000456f78 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047ad5d : add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000004c00bb : add ebp, dword ptr [rdi + 0x380e0a01] ; ret
0x00000000004c89b2 : add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x000000000047b30d : add ebp, eax ; mov qword ptr [rsp + 0x78], rbp ; call r12
0x00000000004c89b4 : add ebp, esi ; add al, byte ptr [rax] ; ret
0x00000000004c89a4 : add ebp, esi ; add al, byte ptr [rax] ; ret 0x503
0x0000000000470c57 : add ebx, 0x18 ; add rax, qword ptr [r12] ; call rax
0x0000000000487c3a : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004c631a : add ebx, dword ptr [rbx + 3] ; ret
0x00000000004708f3 : add ebx, dword ptr [rbx - 0xd] ; ret
0x00000000004bf260 : add ebx, dword ptr [rdi] ; add dword ptr [rdx], ecx ; ret
0x0000000000477fe1 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000484a5a : add ebx, ebp ; ret 0x8d48
0x0000000000434d43 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000040096a : add ebx, esi ; ret
0x0000000000425e04 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x425df9 ; ret
0x0000000000438d05 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x000000000041833a : add ecx, dword ptr [rax + 0x29] ; ret
0x0000000000448fff : add ecx, dword ptr [rax + 0x39] ; ret
0x0000000000463907 : add ecx, dword ptr [rax + 0x39] ; ret 0xf48
0x000000000046d159 : add ecx, dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8348
0x000000000049aa5e : add ecx, dword ptr [rax + 0x63] ; ret
0x0000000000438d09 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000047d2d8 : add ecx, dword ptr [rax - 0x77] ; ret 0x8948
0x000000000041ca9e : add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x0000000000418b98 : add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x0000000000446825 : add ecx, dword ptr [rax - 0x7d] ; mov byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000040dffd : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040e0d7 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000049e086 : add ecx, dword ptr [rax - 0x7f] ; jmp rax
0x0000000000411bd7 : add ecx, dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x00000000004895b3 : add ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000434ab2 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004c62ba : add ecx, dword ptr [rbx + 3] ; ret
0x000000000043a984 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000047d92f : add ecx, dword ptr [rcx + rcx*4 - 0x16] ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000438d06 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x000000000046d18b : add ecx, dword ptr [rcx - 0x7bf0cf8d] ; ret 2
0x00000000004c14aa : add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000004c4998 : add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000046ad5d : add ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x000000000045160c : add ecx, ebp ; ret
0x000000000042f20e : add ecx, ebx ; jmp r9
0x000000000042dbb2 : add ecx, ebx ; jmp rcx
0x00000000004997b6 : add ecx, esi ; jmp rcx
0x000000000049e2ef : add edi, dword ptr [rbp + 0x10] ; call r12
0x000000000042f20b : add edi, edx ; add r9, r11 ; jmp r9
0x00000000004bde49 : add edi, esi ; call rdi
0x0000000000471c3c : add edx, dword ptr [rax] ; mov rax, rdx ; call rax
0x00000000004c8913 : add edx, dword ptr [rcx + rax + 0x41380e0a] ; ret
0x0000000000475905 : add edx, eax ; jmp 0x47591a
0x0000000000478b72 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x0000000000451fd3 : add edx, ebp ; call qword ptr [r10 + rax*8]
0x0000000000443890 : add edx, ebx ; loopne 0x4438f4 ; pop rbp ; ret
0x00000000004beb32 : add esi, dword ptr [rbx + 0x47380e01] ; ret
0x00000000004c1bb2 : add esi, dword ptr [rsi + 0x44380e04] ; ret
0x000000000044ca57 : add esi, dword ptr [rsi + rax + 0x5b] ; ret
0x00000000004c89fb : add esi, ebp ; add al, byte ptr [rax] ; ret
0x0000000000434c63 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000043e92c : add esi, ebx ; ret
0x000000000043db20 : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x000000000042f208 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000462838 : add esi, esi ; ret 0x7420
0x0000000000487197 : add esp, 0x10 ; pop rbx ; jmp rax
0x000000000040fec1 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043dc79 : add esp, 0x10 ; pop rbx ; ret
0x000000000041fad7 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043dc61 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000472b62 : add esp, 0x140 ; mov eax, ebx ; pop rbx ; ret
0x0000000000472b44 : add esp, 0x140 ; pop rbx ; ret
0x00000000004760cd : add esp, 0x18 ; jmp r11
0x000000000043f42d : add esp, 0x18 ; mov eax, edx ; ret
0x0000000000416ea1 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410d47 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043e900 : add esp, 0x18 ; ret
0x0000000000443870 : add esp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x0000000000451853 : add esp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x000000000048756c : add esp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x0000000000444db1 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004151af : add esp, 0x20 ; pop rbx ; ret
0x000000000047a5f9 : add esp, 0x28 ; movzx eax, al ; neg eax ; ret
0x000000000040db58 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000414a0e : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004874c1 : add esp, 0x28 ; ret
0x000000000047643c : add esp, 0x30 ; jmp r11
0x000000000046a362 : add esp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000477bd9 : add esp, 0x30 ; pop rbx ; ret
0x000000000047654e : add esp, 0x30 ; ret
0x000000000043e2c0 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000477c66 : add esp, 0x38 ; ret
0x0000000000477aec : add esp, 0x48 ; jmp qword ptr [rax]
0x000000000046a2d2 : add esp, 0x48 ; movzx eax, al ; ret
0x0000000000477cf8 : add esp, 0x48 ; ret
0x0000000000477a7a : add esp, 0x50 ; jmp qword ptr [rax]
0x0000000000487614 : add esp, 0x50 ; mov rax, rbx ; pop rbx ; ret
0x0000000000465e8c : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043ebb0 : add esp, 0x60 ; pop rbx ; ret
0x00000000004004ca : add esp, 0x608 ; pop rbx ; pop rbp ; ret
0x0000000000477de2 : add esp, 0x68 ; ret
0x0000000000441c8d : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040f851 : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x0000000000469feb : add esp, 0x80 ; pop rbx ; ret
0x00000000004145c7 : add esp, 0x80 ; ret
0x000000000041f596 : add esp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x000000000046a0e9 : add esp, 0x90 ; pop rbx ; ret
0x000000000046a107 : add esp, 0x90 ; xor eax, eax ; pop rbx ; ret
0x000000000041310d : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000040114f : add esp, 0x98 ; ret
0x000000000044ef09 : add esp, 0xd0 ; ret
0x000000000040f3c8 : add esp, 0xd8 ; ret
0x00000000004779b5 : add esp, 8 ; jmp rax
0x00000000004110f3 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000041e498 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000043f38a : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000417a48 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000040eb80 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000041ea73 : add esp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x00000000004874f7 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000041d3fe : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000004059a1 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401823 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412d58 : add esp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x00000000004002de : add esp, 8 ; ret
0x0000000000422ec9 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000473431 : add esp, 8 ; xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004c5eea : add esp, dword ptr [rdx + 0x380e0a01] ; ret
0x00000000004c7169 : add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x00000000004462ed : add qword ptr [rax - 0x7d], r9 ; ret 0x4d02
0x0000000000422daa : add qword ptr [rax], rax ; ret
0x00000000004c7152 : add qword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x0000000000425cec : add r11b, sil ; ret
0x0000000000434d42 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000434cd2 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000434c62 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000045edbd : add r15b, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000495260 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049958d : add r8, rax ; jmp r8
0x000000000047447a : add r8b, bpl ; call rdx
0x0000000000474506 : add r8b, bpl ; ret
0x000000000046d9b7 : add r8b, bpl ; ret 0xf93d
0x000000000049ebc7 : add r8b, bpl ; ret 0xfa25
0x000000000042f20d : add r9, r11 ; jmp r9
0x0000000000449343 : add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000449360 : add r9d, dword ptr [r8 + 0x39] ; ret
0x0000000000496a12 : add rax, -0x7cb80000 ; ret 0xe910
0x0000000000477f49 : add rax, -8 ; ret
0x000000000043d7f4 : add rax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000465cd0 : add rax, 1 ; ret
0x0000000000465cc7 : add rax, 2 ; ret
0x0000000000465ce0 : add rax, 3 ; ret
0x000000000044eba8 : add rax, qword ptr [0] ; ret
0x0000000000470c5a : add rax, qword ptr [r12] ; call rax
0x00000000004710f4 : add rax, qword ptr [r15] ; call rax
0x000000000047e090 : add rax, qword ptr [rbx] ; call rax
0x0000000000477cf3 : add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000475448 : add rax, qword ptr [rdx + 8] ; call rax
0x000000000044eba7 : add rax, qword ptr fs:[0] ; ret
0x000000000049b03d : add rax, r14 ; jmp rax
0x000000000049aab5 : add rax, r8 ; jmp rax
0x000000000049a75d : add rax, rbp ; jmp rax
0x0000000000425469 : add rax, rcx ; ret
0x0000000000425466 : add rax, rdi ; add rax, rcx ; ret
0x00000000004256a3 : add rax, rdi ; ret
0x0000000000423075 : add rax, rdx ; sub rax, rdi ; ret
0x000000000047b30c : add rbp, rax ; mov qword ptr [rsp + 0x78], rbp ; call r12
0x0000000000470c56 : add rbx, 0x18 ; add rax, qword ptr [r12] ; call rax
0x000000000042dbb1 : add rcx, r11 ; jmp rcx
0x00000000004997b5 : add rcx, r14 ; jmp rcx
0x000000000049e2ee : add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000042f20a : add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000471c3b : add rdx, qword ptr [rax] ; mov rax, rdx ; call rax
0x0000000000451fd2 : add rdx, r13 ; call qword ptr [r10 + rax*8]
0x0000000000478b71 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000475904 : add rdx, rax ; jmp 0x47591b
0x0000000000487196 : add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000040fec0 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043dc78 : add rsp, 0x10 ; pop rbx ; ret
0x000000000043dc60 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000472b43 : add rsp, 0x140 ; pop rbx ; ret
0x00000000004760cc : add rsp, 0x18 ; jmp r11
0x000000000043f42c : add rsp, 0x18 ; mov eax, edx ; ret
0x0000000000410d46 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043e8ff : add rsp, 0x18 ; ret
0x000000000044386f : add rsp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x0000000000451852 : add rsp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x000000000048756b : add rsp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x0000000000444db0 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004151ae : add rsp, 0x20 ; pop rbx ; ret
0x000000000047a5f8 : add rsp, 0x28 ; movzx eax, al ; neg eax ; ret
0x0000000000414a0d : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004874c0 : add rsp, 0x28 ; ret
0x000000000047643b : add rsp, 0x30 ; jmp r11
0x000000000046a361 : add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000477bd8 : add rsp, 0x30 ; pop rbx ; ret
0x000000000047654d : add rsp, 0x30 ; ret
0x000000000043e2bf : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000477c65 : add rsp, 0x38 ; ret
0x0000000000477aeb : add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046a2d1 : add rsp, 0x48 ; movzx eax, al ; ret
0x0000000000477cf7 : add rsp, 0x48 ; ret
0x0000000000477a79 : add rsp, 0x50 ; jmp qword ptr [rax]
0x0000000000487613 : add rsp, 0x50 ; mov rax, rbx ; pop rbx ; ret
0x0000000000465e8b : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043ebaf : add rsp, 0x60 ; pop rbx ; ret
0x00000000004004c9 : add rsp, 0x608 ; pop rbx ; pop rbp ; ret
0x0000000000477de1 : add rsp, 0x68 ; ret
0x0000000000441c8c : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000469fea : add rsp, 0x80 ; pop rbx ; ret
0x00000000004145c6 : add rsp, 0x80 ; ret
0x000000000046a0e8 : add rsp, 0x90 ; pop rbx ; ret
0x000000000041310c : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000040114e : add rsp, 0x98 ; ret
0x000000000044ef08 : add rsp, 0xd0 ; ret
0x000000000040f3c7 : add rsp, 0xd8 ; ret
0x00000000004779b4 : add rsp, 8 ; jmp rax
0x00000000004110f2 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000041e497 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000043f389 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000417a47 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000040eb7f : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000041ea72 : add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x00000000004874f6 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000041d3fd : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000401822 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412d57 : add rsp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x00000000004002dd : add rsp, 8 ; ret
0x0000000000422ec8 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000042b8de : add sil, sil ; ret 0x7404
0x00000000004879fa : add word ptr [rdx + rax*2], 1 ; ret
0x0000000000400a0a : and ah, al ; add byte ptr [rax], al ; leave ; ret
0x00000000004879f8 : and al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000487c04 : and al, 0 ; ret
0x000000000043ebdd : and al, 0x10 ; add cl, byte ptr [rdi] ; ret 0x8348
0x000000000049b9b8 : and al, 0x10 ; add rsp, 0x28 ; ret
0x0000000000446693 : and al, 0x10 ; call r12
0x000000000041ae9d : and al, 0x10 ; call rax
0x00000000004644e9 : and al, 0x10 ; call rbx
0x0000000000400bf5 : and al, 0x10 ; mov edi, dword ptr [rsp + 0xc] ; call r12
0x000000000043fb71 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000446987 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000004472ea : and al, 0x10 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x00000000004874bb : and al, 0x10 ; mov rax, rdx ; add rsp, 0x28 ; ret
0x000000000049c065 : and al, 0x10 ; mov rsi, qword ptr [r15] ; call r14
0x000000000044fb06 : and al, 0x10 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000464b35 : and al, 0x14 ; add al, ch ; ret
0x0000000000418b06 : and al, 0x14 ; pop r12 ; ret
0x000000000041d3fb : and al, 0x18 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000044aedc : and al, 0x18 ; call r14
0x0000000000400c52 : and al, 0x18 ; call rax
0x00000000004644e4 : and al, 0x18 ; lea r9, qword ptr [rsp + 0x10] ; call rbx
0x000000000041ae98 : and al, 0x18 ; mov qword ptr [rsp + 0x10], r10 ; call rax
0x0000000000443fb8 : and al, 0x18 ; mov r9, r14 ; call rbx
0x00000000004476d0 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000047a6c0 : and al, 0x18 ; mov rax, rdx ; add rsp, 0x38 ; ret
0x000000000044668e : and al, 0x18 ; mov rdi, qword ptr [rsp + 0x10] ; call r12
0x00000000004645c2 : and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000418ad2 : and al, 0x1c ; je 0x418ae3 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000418ad1 : and al, 0x1c ; je 0x418ae4 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044698c : and al, 0x20 ; call rax
0x0000000000466047 : and al, 0x20 ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000450123 : and al, 0x20 ; mov rdi, r12 ; call r15
0x00000000004694d0 : and al, 0x26 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004b8b84 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000477c60 : and al, 0x28 ; add byte ptr [rbp + 0xb], dh ; add rsp, 0x38 ; ret
0x00000000004890ab : and al, 0x28 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000446e07 : and al, 0x28 ; call r12
0x0000000000447b32 : and al, 0x28 ; call r14
0x0000000000446494 : and al, 0x28 ; call r15
0x00000000004472ef : and al, 0x28 ; call rax
0x0000000000446ebb : and al, 0x28 ; call rbx
0x0000000000466362 : and al, 0x28 ; lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x00000000004660ef : and al, 0x28 ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x000000000041e113 : and al, 0x28 ; mov rdi, rbp ; call rax
0x000000000048f13f : and al, 0x30 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x000000000044a71c : and al, 0x30 ; call r14
0x0000000000472b0f : and al, 0x30 ; call r9
0x0000000000448d3a : and al, 0x30 ; call rbx
0x00000000004875df : and al, 0x30 ; je 0x4875f3 ; mov edi, 0x6ca140 ; call rax
0x000000000040e099 : and al, 0x30 ; lea r15, qword ptr [rbx + r14] ; call rax
0x0000000000465f2d : and al, 0x30 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000044917a : and al, 0x30 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000446531 : and al, 0x30 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000446eb6 : and al, 0x30 ; mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x000000000048174f : and al, 0x31 ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000048c2e2 : and al, 0x38 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000477e0e : and al, 0x38 ; add rsp, 0x68 ; ret
0x0000000000472b0a : and al, 0x38 ; mov r9, qword ptr [rsp + 0x30] ; call r9
0x0000000000448d35 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000477ae9 : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000477a77 : and al, 0x40 ; add rsp, 0x50 ; jmp qword ptr [rax]
0x00000000004480ba : and al, 0x40 ; call r15
0x000000000046604c : and al, 0x40 ; call rbx
0x0000000000448461 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000004760cb : and al, 0x48 ; add esp, 0x18 ; jmp r11
0x000000000043f42b : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x000000000043e8fe : and al, 0x48 ; add esp, 0x18 ; ret
0x000000000047643a : and al, 0x48 ; add esp, 0x30 ; jmp r11
0x000000000047654c : and al, 0x48 ; add esp, 0x30 ; ret
0x000000000041d723 : and al, 0x48 ; call rax
0x000000000046ef74 : and al, 0x48 ; lea edi, dword ptr [rax + 0x6ca1e0] ; call rdx
0x0000000000446e02 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r12
0x000000000044648f : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x00000000004480b5 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000466752 : and al, 0x48 ; mov rdi, r12 ; call rbx
0x000000000049d4ec : and al, 0x49 ; mov esi, dword ptr [rdi + rbp*8 + 0x10] ; call rbx
0x000000000044aed7 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x000000000041c08d : and al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004c36e4 : and al, 0x5d ; add byte ptr [rax], al ; cmp bl, bl ; clc ; call qword ptr [rdx]
0x0000000000418b01 : and al, 0x5d ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x0000000000466260 : and al, 0x60 ; lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x000000000041da2b : and al, 0x68 ; call rax
0x000000000041ed0b : and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x000000000041177e : and al, 0x74 ; ret 0x8b4c
0x00000000004721aa : and al, 0x75 ; ret
0x000000000047ae7e : and al, 0x78 ; call r12
0x000000000047b34d : and al, 0x78 ; lea rdi, qword ptr [rsp + 0x78] ; call r12
0x0000000000447b2d : and al, 0x78 ; mov rdi, qword ptr [rsp + 0x28] ; call r14
0x000000000044a717 : and al, 0x78 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000048ac9f : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047bb24 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x0000000000446611 : and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000041b6a6 : and al, 0x89 ; ret 0xb48b
0x000000000043eb35 : and al, 0xa8 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x000000000049b54b : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000477c8f : and al, 0xc ; add rsp, 0x38 ; ret
0x0000000000400bf9 : and al, 0xc ; call r12
0x0000000000400c4d : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000047b0fa : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000040884b : and al, 0xe8 ; call rbx
0x00000000004099a4 : and al, 0xe8 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x00000000004099ba : and al, 0xe8 ; nop ; ret 0xffff
0x000000000040995b : and al, 0xe8 ; out dx, eax ; ret 0xffff
0x00000000004099dc : and al, 0xe8 ; outsb dx, byte ptr [rsi] ; ret 0xffff
0x00000000004099f2 : and al, 0xe8 ; pop rax ; ret 0xffff
0x00000000004098fc : and al, 0xe8 ; ret
0x0000000000406f78 : and al, 0xe8 ; ret 0x166
0x0000000000409a03 : and al, 0xe8 ; ret 0xffff
0x00000000004098b3 : and al, 0xe8 ; xchg eax, edi ; ret
0x0000000000490f28 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x000000000049c445 : and al, 0xf ; ret 0x8348
0x000000000042b9e6 : and al, 0xf8 ; jne 0x42b8c2 ; ret
0x0000000000490ee1 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000490ee7 : and al, 0xf8 ; ret
0x0000000000490e9b : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000490ea1 : and al, 0xfc ; ret
0x000000000044ec77 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x000000000044ec7b : and al, 0xfe ; ret
0x000000000044140a : and al, 0xff ; ror dword ptr [rcx + rcx*4 - 0x19], cl ; call 0x41d648
0x0000000000469606 : and al, 1 ; add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x000000000044f08c : and al, 6 ; mov rbx, rax ; mov rdi, r12 ; call r15
0x000000000043dc76 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000047a172 : and al, 8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043fa88 : and al, 8 ; call rbx
0x0000000000487539 : and al, 8 ; je 0x48754d ; mov edi, 0x6ca140 ; call rax
0x000000000041a6a5 : and al, 8 ; jmp 0x419eee
0x000000000043ec41 : and al, 8 ; jmp 0x43ebb8
0x0000000000477820 : and al, 8 ; mov edi, 0x6ca140 ; call rax
0x000000000041af54 : and al, 8 ; mov qword ptr [rsp], rcx ; call rdx
0x000000000040e256 : and al, 8 ; mov rsi, r15 ; mov rdi, r13 ; call r14
0x00000000004a2c50 : and al, ah ; clc ; jmp rax
0x00000000004c5ec0 : and al, bl ; cli ; jmp rdi
0x000000000049ff18 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004bfc9d : and al, byte ptr [rax] ; add byte ptr [rax], dh ; jae 0x4bfc9e ; call qword ptr [rsi]
0x0000000000410de6 : and al, byte ptr [rax] ; add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x000000000049e283 : and al, byte ptr [rax] ; jne 0x49e26d ; pop rbx ; ret
0x000000000049d644 : and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x0000000000422e7a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x0000000000466347 : and al, ch ; ret
0x000000000040fb98 : and al, ch ; ret 0x530
0x00000000004bd864 : and al, dl ; std ; jmp qword ptr [rax]
0x000000000045c99e : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004c6150 : and bl, 0xfa ; jmp qword ptr [rdx]
0x0000000000473d63 : and bl, bh ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x00000000004a2e50 : and bl, byte ptr [rcx] ; stc ; call qword ptr [rdx + 0x22fff91f]
0x00000000004a2c88 : and bl, ch ; clc ; jmp qword ptr [rax]
0x000000000040dbff : and bl, dh ; ret
0x0000000000466a7e : and byte ptr [r11 + 0x5d], r11b ; pop r12 ; pop r13 ; ret
0x0000000000414dd4 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x000000000049dee4 : and byte ptr [rax + 0x39], cl ; ret
0x0000000000419b39 : and byte ptr [rax + 0x39], cl ; ret 0x820f
0x0000000000451e2e : and byte ptr [rax + 1], cl ; ret
0x0000000000466048 : and byte ptr [rax - 0x73], cl ; je 0x466077 ; call rbx
0x0000000000476466 : and byte ptr [rax - 0x75], cl ; jg 0x47649a ; call r11
0x0000000000476a56 : and byte ptr [rax - 0x75], cl ; jg 0x476a8a ; call r11
0x0000000000476df2 : and byte ptr [rax - 0x75], cl ; jg 0x476e26 ; call r11
0x000000000041b3b3 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x000000000040ed03 : and byte ptr [rax - 0x77], cl ; ret
0x0000000000468f94 : and byte ptr [rax - 0x77], cl ; ret 0x4eb
0x00000000004453e4 : and byte ptr [rax - 0x77], cl ; ret 0xee75
0x000000000044e584 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x44e598 ; call rax
0x000000000049c6bb : and byte ptr [rax - 0x7b], cl ; ret 0x840f
0x000000000044527e : and byte ptr [rax - 0x7d], cl ; ret
0x00000000004bf680 : and byte ptr [rax - 0xb], ah ; call qword ptr [rcx]
0x00000000004125d2 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000043db03 : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004bd31c : and byte ptr [rbp + rdi*8 - 0x2c07f01], al ; call rax
0x0000000000466242 : and byte ptr [rbp - 0x73], cl ; jl 0x4661d5 ; add al, 0xe8 ; ret
0x00000000004c7226 : and byte ptr [rbx + 0x1890304], al ; ret
0x0000000000405ba8 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000466a7f : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000444db3 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004bec75 : and byte ptr [rbx + 0xa470204], al ; ret
0x00000000004bf24d : and byte ptr [rbx + 0xa4d0204], al ; ret
0x00000000004549c6 : and byte ptr [rbx + rcx*2], 0 ; jmp rax
0x000000000045fafe : and byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x0000000000454b60 : and byte ptr [rbx - 0x4ef43], al ; call qword ptr [rax]
0x0000000000462489 : and byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004a31ec : and byte ptr [rbx], dl ; stc ; jmp qword ptr [rax + 0x20fff912]
0x0000000000414dd5 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x00000000004c3a6e : and byte ptr [rcx + 0xa], al ; ret
0x0000000000450124 : and byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x0000000000451855 : and byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x00000000004a31e4 : and byte ptr [rcx + rdi*8], dl ; jmp qword ptr [rax + 0x20fff913]
0x0000000000490f25 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000044536c : and byte ptr [rcx - 0x77], cl ; ret 0xee75
0x00000000004a31fc : and byte ptr [rcx], dl ; stc ; jmp qword ptr [rax + 0x10fff910]
0x00000000004bd2c4 : and byte ptr [rdi - 3], dh ; inc dword ptr [rax] ; jns 0x4bd2cf ; jmp rax
0x0000000000445359 : and byte ptr [rdi], cl ; test bh, cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043b350 : and byte ptr [rdi], cl ; test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000004a31f4 : and byte ptr [rdx], dl ; stc ; jmp qword ptr [rax + 0x20fff911]
0x00000000004a31dc : and byte ptr [rip + 0x14a0fff9], dl ; stc ; jmp qword ptr [rax]
0x000000000042dc4a : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004c3b3d : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000004a2fd8 : and byte ptr [rsi], dl ; stc ; call qword ptr [rax + 0x10fff915]
0x0000000000465cc2 : and ch, 0xf ; je 0x465ce9 ; add rax, 2 ; ret
0x0000000000465cad : and cl, 0xf ; je 0x465cd5 ; ret
0x000000000041a626 : and cl, bpl ; ret
0x000000000047dfd3 : and cl, byte ptr [rax + 0x29] ; fmul dword ptr [rax + 0x39] ; ret 0x860f
0x000000000042582d : and cl, byte ptr [rcx - 0x77] ; ret
0x00000000004a2c84 : and cl, ch ; clc ; jmp qword ptr [rax]
0x000000000041a627 : and cl, ch ; ret
0x0000000000425e17 : and dh, dh ; ret 0x7504
0x000000000045c99d : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004bfb4d : and dword ptr [rax], eax ; add byte ptr [rax + 0x6f], dl ; cmc ; jmp qword ptr [rax]
0x0000000000456dd9 : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004ba6a2 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x0000000000415d3c : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000040fd89 : and dword ptr [rcx + 0x415d5bd8], ecx ; pop rsp ; ret
0x000000000048e2ec : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9e74
0x00000000004b7759 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004ba6a1 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000044ebab : and eax, 0 ; ret
0x000000000049c1da : and eax, 0x10468b48 ; add rsp, 8 ; ret
0x000000000047bf16 : and eax, 0x2d0 ; ret
0x000000000040ea11 : and eax, 0x30 ; call rax
0x000000000040e9c9 : and eax, 0x30 ; call rdx
0x0000000000475e13 : and eax, 0x38754000 ; ret
0x000000000043da6d : and eax, 0x3fc00 ; pop rbx ; ret
0x000000000043da8d : and eax, 0x3fc00 ; ret
0x000000000043da4c : and eax, 0x3fffc00 ; pop rbx ; ret
0x0000000000470790 : and eax, 0x48c03100 ; add esp, 8 ; ret
0x000000000043eabb : and eax, 0x4e ; add byte ptr [rax], al ; ret
0x000000000047361f : and eax, 0x6894800 ; ret
0x000000000043dac0 : and eax, 0x7ff80000 ; ret
0x0000000000473f03 : and eax, 0x89485300 ; ret
0x000000000041a7a6 : and eax, 0x950f4100 ; ret
0x0000000000441ef7 : and eax, 0xc ; cmp eax, 4 ; je 0x441f08 ; ret
0x0000000000400d0f : and eax, 0xf ; mov dword ptr [r8], eax ; pop rbx ; ret
0x00000000004439a6 : and eax, 0xffffffd0 ; or rax, 0xffffffffffffffff ; ret
0x0000000000477fdc : and eax, 2 ; sub eax, 1 ; ret
0x00000000004423c2 : and eax, dword ptr [rax + rax + 0x48] ; mov dword ptr [rax + 8], edx ; ret
0x00000000004bfd85 : and eax, dword ptr [rax] ; add byte ptr [rax + 0x74], bl ; cmc ; call qword ptr [rdx]
0x00000000004174a9 : and ebp, dword ptr [rbx] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000415d3d : and ebp, edi ; pop rbx ; ret
0x0000000000441e92 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x441ea5 ; ret
0x000000000042f1c5 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000042e8f8 : and ecx, 0xffff ; sub eax, ecx ; ret
0x0000000000419bbb : and ecx, dword ptr [rax + 0x39] ; ret
0x0000000000454976 : and ecx, dword ptr [rbx] ; jmp rax
0x000000000041f3cc : and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x0000000000417965 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret
0x000000000041d462 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; xchg eax, esi ; ret
0x0000000000416aec : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x00000000004c4e19 : and edx, edi ; jmp rdi
0x0000000000490efe : and esi, 0xe0837fff ; jg 0x490f17 ; ret 0x5488
0x000000000049f519 : and esp, ecx ; idiv edi ; nop dword ptr [rax] ; ret
0x000000000042c2ba : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x00000000004256a0 : bsf eax, eax ; add rax, rdi ; ret
0x00000000004256b0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00000000004256c0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000425690 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000004255df : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000042c4b3 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000422f16 : bsf eax, edx ; ret
0x0000000000423072 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000042c5d0 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000422f62 : bsf rax, rdx ; ret
0x0000000000464e97 : bsr eax, eax ; add rax, rdi ; ret
0x000000000046511b : bsr eax, esi ; add rax, rdi ; ret
0x0000000000465029 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000464f25 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000464e96 : bsr rax, rax ; add rax, rdi ; ret
0x000000000046511a : bsr rax, rsi ; add rax, rdi ; ret
0x0000000000465028 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000464f24 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000047b207 : call 0x1009ea2e
0x000000000047bb6a : call 0x1009f391
0x00000000004c76a8 : call 0x114c72b8
0x00000000004c76d8 : call 0x114c72e8
0x00000000004c7708 : call 0x114c7318
0x00000000004c7cd8 : call 0x114c7972
0x00000000004bdca8 : call 0x134bd0f2
0x000000000044a808 : call 0x2072b58
0x000000000042bbf4 : call 0x24b7474d
0x00000000004754af : call 0x401782
0x000000000040995c : call 0x405c52
0x000000000044a8ae : call 0x406b9e
0x0000000000411951 : call 0x40dc42
0x0000000000468d75 : call 0x415012
0x000000000041af97 : call 0x417202
0x000000000041d48b : call 0x418219
0x000000000041ff36 : call 0x418a08
0x0000000000461080 : call 0x41d2a2
0x0000000000441361 : call 0x41d642
0x0000000000408634 : call 0x41d646
0x000000000049f66e : call 0x41d648
0x000000000045bee8 : call 0x425e57
0x0000000000400721 : call 0x43d9d6
0x00000000004127fa : call 0x43ea72
0x000000000041314f : call 0x43f442
0x000000000041325f : call 0x43f502
0x000000000049fe65 : call 0x441198
0x0000000000455bd2 : call 0x441de2
0x0000000000415b7f : call 0x441e52
0x0000000000457c56 : call 0x462d36
0x000000000048c39c : call 0x478662
0x00000000004342ca : call 0x4fc252c8
0x00000000004342c9 : call 0x4fc252c9
0x000000000047ad6b : call 0xffffffff8a09d692
0x000000000047aed2 : call 0xffffffff8a09d7f9
0x000000000047b0bf : call 0xffffffff8a09d9e6
0x000000000047b6eb : call 0xffffffff8a09e012
0x000000000047b848 : call 0xffffffff8a09e16f
0x000000000047ba16 : call 0xffffffff8a09e33d
0x00000000004b81c3 : call 0xffffffffaf0e2039
0x000000000047a9ea : call 0xffffffffc270f232
0x000000000041b7c8 : call 0xffffffffc27affd9
0x0000000000458d9c : call 0xffffffffc27ed5a6
0x000000000041bf58 : call 0xffffffffc2cb0771
0x00000000004687fd : call 0xffffffffc37fd10a
0x00000000004853ba : call 0xffffffffc3819fc4
0x000000000046612c : call 0xffffffffc3a2a292
0x000000000044f085 : call 0xffffffffc3f3ffd6
0x000000000046712c : call 0xffffffffc40db965
0x00000000004263b7 : call 0xffffffffc412ed08
0x0000000000422e87 : call 0xffffffffc43ab7d8
0x00000000004c25a8 : call 0xffffffffe54c1de0
0x0000000000451fd5 : call qword ptr [r10 + rax*8]
0x00000000004a2ffb : call qword ptr [rax + 0x10fff911]
0x00000000004a2ff3 : call qword ptr [rax + 0x10fff912]
0x00000000004a2feb : call qword ptr [rax + 0x10fff913]
0x00000000004a2fe3 : call qword ptr [rax + 0x10fff914]
0x00000000004a2fdb : call qword ptr [rax + 0x10fff915]
0x00000000004a2c4b : call qword ptr [rax + 0x20fff8ed]
0x00000000004a2fbf : call qword ptr [rax + 0x20fff91a]
0x00000000004a2da7 : call qword ptr [rax + 0x20fff91d]
0x00000000004a291f : call qword ptr [rax + 0x30fff866]
0x0000000000410627 : call qword ptr [rax + 0x80]
0x00000000004bd353 : call qword ptr [rax - 0x1f0002a3]
0x00000000004a2d7b : call qword ptr [rax - 0x1f000729]
0x00000000004a2d27 : call qword ptr [rax - 0x1f000730]
0x00000000004a2963 : call qword ptr [rax - 0x1f00077f]
0x00000000004bd387 : call qword ptr [rax - 0x2f00024b]
0x00000000004bd377 : call qword ptr [rax - 0x2f000254]
0x00000000004bd367 : call qword ptr [rax - 0x2f00025d]
0x00000000004a2b93 : call qword ptr [rax]
0x0000000000400b18 : call qword ptr [rbx + 0x10]
0x00000000004015a8 : call qword ptr [rbx*8 + 0x6c8ed8]
0x000000000047d978 : call qword ptr [rbx]
0x0000000000499cae : call qword ptr [rcx]
0x00000000004c1d5b : call qword ptr [rdi]
0x00000000004a2e53 : call qword ptr [rdx + 0x22fff91f]
0x0000000000451fd6 : call qword ptr [rdx + rax*8]
0x00000000004a2e73 : call qword ptr [rdx]
0x00000000004a2b23 : call qword ptr [rsi + 0x16fff8c0]
0x00000000004a2b2b : call qword ptr [rsi + 0x16fff8c1]
0x00000000004a2b33 : call qword ptr [rsi + 0x26fff8c2]
0x00000000004a2def : call qword ptr [rsi + 0x26fff91c]
0x0000000000491ea2 : call qword ptr [rsi]
0x000000000047646c : call r11
0x0000000000400bfb : call r12
0x000000000040e020 : call r14
0x0000000000403581 : call r15
0x0000000000461e3b : call r8
0x0000000000472b11 : call r9
0x00000000004a2d37 : call rax
0x0000000000402c2d : call rbx
0x000000000040554a : call rcx
0x0000000000403582 : call rdi
0x000000000040e9ce : call rdx
0x00000000004a2b43 : call rsi
0x0000000000400bfc : call rsp
0x000000000044e744 : cdq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000047078f : cdq ; and eax, 0x48c03100 ; add esp, 8 ; ret
0x00000000004b9f00 : cdq ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004c6c21 : cdq ; jmp qword ptr [rsi]
0x0000000000400708 : cdq ; sub al, 0 ; pop rbp ; pop r12 ; ret
0x000000000048525e : clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000041b6a3 : clc ; add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x00000000004584ca : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000045d29d : clc ; add cl, byte ptr [rax + 0x29] ; ret
0x000000000040d5bc : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x000000000043d71c : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x000000000047c31c : clc ; add eax, dword ptr [rcx + 0x5d] ; pop r14 ; pop r15 ; ret
0x000000000046d18a : clc ; add ecx, dword ptr [rcx - 0x7bf0cf8d] ; ret 2
0x0000000000425468 : clc ; add rax, rcx ; ret
0x00000000004a2c4a : clc ; call qword ptr [rax + 0x20fff8ed]
0x00000000004a291e : clc ; call qword ptr [rax + 0x30fff866]
0x00000000004a2d7a : clc ; call qword ptr [rax - 0x1f000729]
0x00000000004a2d26 : clc ; call qword ptr [rax - 0x1f000730]
0x00000000004a2962 : clc ; call qword ptr [rax - 0x1f00077f]
0x00000000004a2b92 : clc ; call qword ptr [rax]
0x00000000004c36ba : clc ; call qword ptr [rbx]
0x00000000004c1cfa : clc ; call qword ptr [rcx]
0x00000000004c1d5a : clc ; call qword ptr [rdi]
0x00000000004c2fca : clc ; call qword ptr [rdx]
0x00000000004a2b22 : clc ; call qword ptr [rsi + 0x16fff8c0]
0x00000000004a2b2a : clc ; call qword ptr [rsi + 0x16fff8c1]
0x00000000004a2b32 : clc ; call qword ptr [rsi + 0x26fff8c2]
0x00000000004a2b16 : clc ; call qword ptr [rsi]
0x00000000004a2d36 : clc ; call rax
0x00000000004a2afa : clc ; call rcx
0x00000000004a2b42 : clc ; call rsi
0x00000000004c1e7a : clc ; call rsp
0x000000000042f169 : clc ; cmp rcx, rax ; jne 0x42f19b ; xor eax, eax ; ret
0x000000000042f168 : clc ; cmp rcx, rax ; jne 0x42f19c ; xor eax, eax ; ret
0x00000000004c6628 : clc ; cwde ; std ; call rcx
0x0000000000473b70 : clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000420910 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000412706 : clc ; dec dword ptr [rax + 0xf] ; ret 0x938b
0x000000000040171b : clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a2b76 : clc ; dec dword ptr [rbx] ; ret
0x000000000045461b : clc ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000455c42 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000479ddd : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000004a29c6 : clc ; inc dword ptr [rax + 0x5a] ; clc ; jmp rax
0x00000000004a2cfe : clc ; inc dword ptr [rax - 0x1a] ; clc ; call qword ptr [rax]
0x00000000004a2bd6 : clc ; inc dword ptr [rax - 0x1c] ; clc ; jmp qword ptr [rax]
0x00000000004a2d76 : clc ; inc dword ptr [rax - 0x2a] ; clc ; call qword ptr [rax - 0x1f000729]
0x00000000004a296e : clc ; inc dword ptr [rax - 0x2f00077b] ; xchg al, bh ; jmp qword ptr [rax]
0x00000000004a2d22 : clc ; inc dword ptr [rax - 0x31] ; clc ; call qword ptr [rax - 0x1f000730]
0x00000000004a2bc6 : clc ; inc dword ptr [rax - 0x3b] ; clc ; jmp rax
0x00000000004a295e : clc ; inc dword ptr [rax - 0x80] ; clc ; call qword ptr [rax - 0x1f00077f]
0x00000000004a2836 : clc ; inc dword ptr [rax] ; add eax, edi ; call rax
0x00000000004a2a82 : clc ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; clc ; jmp qword ptr [rax]
0x00000000004a29b6 : clc ; inc dword ptr [rax] ; push rdx ; clc ; call qword ptr [rax]
0x00000000004a2af6 : clc ; inc dword ptr [rcx - 0x3d] ; clc ; call rcx
0x000000000044d9e9 : clc ; inc dword ptr [rcx - 0x77] ; ret
0x00000000004a2aba : clc ; inc dword ptr [rdx - 0x41] ; clc ; jmp rax
0x00000000004a2ab6 : clc ; inc dword ptr [rdx - 0x42] ; clc ; inc dword ptr [rdx - 0x41] ; clc ; jmp rax
0x00000000004a2b3e : clc ; inc dword ptr [rsi - 0x3c] ; clc ; call rsi
0x00000000004a2b12 : clc ; inc dword ptr [rsi - 0x43] ; clc ; call qword ptr [rsi]
0x00000000004a29a6 : clc ; inc eax ; clc ; call rax
0x00000000004a2d42 : clc ; inc eax ; fprem ; call qword ptr [rax]
0x00000000004a297e : clc ; inc eax ; mov bh, al ; call qword ptr [rax]
0x00000000004a2d56 : clc ; inc eax ; retf ; clc ; call qword ptr [rax]
0x00000000004491ce : clc ; jg 0x44915d ; ret 0x5c77
0x00000000004a2bc2 : clc ; jmp qword ptr [rax + 0x40fff8c4]
0x00000000004a2a76 : clc ; jmp qword ptr [rax - 0x3f000758]
0x00000000004a2a56 : clc ; jmp qword ptr [rax - 0x3f000761]
0x00000000004a2976 : clc ; jmp qword ptr [rax]
0x000000000047d8c8 : clc ; jmp qword ptr [rsi + 0xf]
0x00000000004a2b36 : clc ; jmp qword ptr [rsi]
0x00000000004a2a5e : clc ; jmp rax
0x00000000004c305a : clc ; jmp rbx
0x00000000004c25aa : clc ; jmp rsp
0x000000000042b9e7 : clc ; jne 0x42b8c1 ; ret
0x000000000049bbc0 : clc ; leave ; ret
0x00000000004b8b62 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000430c47 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004315b7 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434057 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004317b7 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000433fc7 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004319b7 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000433f37 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000430c63 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434eac : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000049bc58 : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000490ee2 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000004a292a : clc ; push qword ptr [rax + 0x6b] ; clc ; call qword ptr [rax]
0x00000000004a2c0e : clc ; push qword ptr [rax - 0x20] ; clc ; push qword ptr [rax] ; loop 0x4a2c18 ; call qword ptr [rax]
0x00000000004a2cae : clc ; push qword ptr [rax - 0x21] ; clc ; push qword ptr [rax] ; loope 0x4a2cb8 ; call qword ptr [rax]
0x00000000004a2d3e : clc ; push qword ptr [rax - 0x28] ; clc ; inc eax ; fprem ; call qword ptr [rax]
0x00000000004a2d52 : clc ; push qword ptr [rax - 0x36] ; clc ; inc eax ; retf ; clc ; call qword ptr [rax]
0x00000000004a29a2 : clc ; push qword ptr [rax - 0x3f0007b9] ; clc ; call rax
0x00000000004a297a : clc ; push qword ptr [rax - 0x77] ; clc ; inc eax ; mov bh, al ; call qword ptr [rax]
0x00000000004a2bf6 : clc ; push qword ptr [rax] ; in al, -8 ; call qword ptr [rax]
0x00000000004a2c9a : clc ; push qword ptr [rax] ; in eax, -8 ; call qword ptr [rax]
0x00000000004a2942 : clc ; push qword ptr [rax] ; jne 0x4a2944 ; call rax
0x00000000004a2c12 : clc ; push qword ptr [rax] ; loop 0x4a2c14 ; call qword ptr [rax]
0x00000000004a2cb2 : clc ; push qword ptr [rax] ; loope 0x4a2cb4 ; call qword ptr [rax]
0x00000000004a29c2 : clc ; push qword ptr [rax] ; pop rax ; clc ; inc dword ptr [rax + 0x5a] ; clc ; jmp rax
0x0000000000410dea : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x0000000000415d90 : clc ; push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x0000000000442011 : clc ; push qword ptr [rbp - 0xd] ; xor eax, eax ; leave ; ret
0x0000000000415d38 : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x00000000004a2aea : clc ; push qword ptr [rcx + 0x31fff8c1] ; ret 0xfff8
0x00000000004a2af2 : clc ; push qword ptr [rcx + 0x41fff8c2] ; ret
0x00000000004a2aee : clc ; push qword ptr [rcx] ; ret 0xfff8
0x0000000000415215 : clc ; push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x000000000046a0cc : clc ; push qword ptr [rsi + rsi - 0x77] ; ret 0xe283
0x00000000004a2b46 : clc ; push qword ptr [rsi - 0x3b] ; clc ; call qword ptr [rsi]
0x00000000004a29b2 : clc ; push rax ; clc ; inc dword ptr [rax] ; push rdx ; clc ; call qword ptr [rax]
0x00000000004a2cba : clc ; push rax ; in al, -8 ; call rax
0x00000000004a2c1a : clc ; push rax ; in eax, -8 ; call rax
0x00000000004a2c36 : clc ; push rax ; jrcxz 0x4a2c38 ; call rax
0x00000000004a2bfe : clc ; push rax ; out -8, eax ; jmp rax
0x00000000004a2bb6 : clc ; push rax ; ret 0xfff8
0x00000000004169e2 : clc ; ret
0x000000000047853a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000004777ad : clc ; std ; jbe 0x4777bc ; ret
0x000000000046d918 : cld ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x000000000043da6f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043da8f : cld ; add eax, dword ptr [rax] ; ret
0x00000000004c76aa : cld ; call qword ptr [rax]
0x00000000004c76c2 : cld ; call qword ptr [rdx]
0x00000000004801cf : cld ; cmove rsi, r9 ; jmp 0x48019e
0x000000000045beeb : cld ; dec dword ptr [rax - 0x39] ; ret 0xffb0
0x00000000004708ee : cld ; inc dword ptr [rbp + 0x5b0378c0] ; ret
0x000000000043db1e : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043da4e : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004c7402 : cld ; jmp qword ptr [rax]
0x000000000047a080 : cld ; mov dl, 0xf9 ; dec dword ptr [rax + 0x39] ; ret
0x00000000004313d2 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004315d5 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004317d5 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004319d5 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434ebe : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000431f08 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000431006 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004341e6 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004311e6 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434166 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004313c6 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004340e6 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430e26 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434266 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000490e9c : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000004c76bc : cld ; pushfq ; add byte ptr [rax], al ; loopne 0x4c76d1 ; cld ; call qword ptr [rdx]
0x0000000000425e38 : cld ; ret
0x00000000004b8016 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004c5ebc : cld ; test byte ptr [rax], al ; add byte ptr [rax], ah ; fdivr st(2) ; jmp rdi
0x000000000041f3c9 : cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000041f5a9 : cli ; add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x000000000041d0fb : cli ; add byte ptr [rax - 0x418aff94], bl ; ret
0x0000000000446109 : cli ; add byte ptr [rax - 0x7f], cl ; ret 0x4fe0
0x000000000047bee9 : cli ; add byte ptr [rcx - 0xcf68130], cl ; ret
0x00000000004669da : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000488ba3 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x0000000000488bcc : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00000000004107c8 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000043d7bc : cli ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x000000000044898f : cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x0000000000473f86 : cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x00000000004747f3 : cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000043d2e1 : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x0000000000434edc : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000047ad5c : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000004c5742 : cli ; call rax
0x00000000004c5b5a : cli ; call rdx
0x00000000004c479a : cli ; call rsi
0x0000000000431ecb : cli ; jg 0x431ede ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000434e97 : cli ; jg 0x434eaa ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000043d2a1 : cli ; jg 0x43d2b3 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043d426 : cli ; jg 0x43d438 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000004c4c42 : cli ; jmp qword ptr [rax]
0x00000000004c6152 : cli ; jmp qword ptr [rdx]
0x00000000004c4e1a : cli ; jmp rdi
0x00000000004c48d2 : cli ; jmp rdx
0x00000000004c5e3a : cli ; jmp rsi
0x00000000004c54f2 : cli ; jmp rsp
0x00000000004317d8 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000425848 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000047a846 : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x0000000000489558 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004ba481 : cli ; push 0x6e ; ja 0x4ba40e ; ret 0x48f
0x000000000049fdbd : cli ; ret
0x00000000004b8f25 : cli ; ret 0xac65
0x0000000000441e1b : cli ; setae al ; ret
0x0000000000422fb9 : cli ; test rdx, rdx ; je 0x422fd9 ; bsf rax, rdx ; ret
0x0000000000464d28 : cli ; test rdx, rdx ; je 0x464d59 ; bsf rax, rdx ; ret
0x00000000004b7b6a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004c89b5 : cmc ; add al, byte ptr [rax] ; ret
0x00000000004c89a5 : cmc ; add al, byte ptr [rax] ; ret 0x503
0x00000000004954b8 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044316c : cmc ; add byte ptr [rax], al ; add byte ptr [rbx - 0x76bef020], al ; ret 0xb8
0x000000000041d440 : cmc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004be46a : cmc ; call qword ptr [rax]
0x00000000004be3b2 : cmc ; call qword ptr [rbx]
0x00000000004bf682 : cmc ; call qword ptr [rcx]
0x00000000004be482 : cmc ; call qword ptr [rdx]
0x00000000004bfca2 : cmc ; call qword ptr [rsi]
0x00000000004c067a : cmc ; call rdx
0x00000000004bfb52 : cmc ; jmp qword ptr [rax]
0x00000000004bf4b2 : cmc ; jmp qword ptr [rcx]
0x00000000004becba : cmc ; jmp qword ptr [rsi]
0x00000000004ba8a9 : cmc ; mov ch, 0xab ; ret
0x000000000043416a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043105e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000441647 : cmc ; mov edi, 0x8b49fffd ; cmp al, 0x24 ; call rbx
0x000000000043c833 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004b7757 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000047a08d : cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040fdc2 : cmc ; ret
0x000000000043c837 : cmc ; sub eax, edx ; ret
0x00000000004b9ee5 : cmc ; xlatb ; ret 0x4e27
0x000000000049bfc7 : cmova eax, edx ; ret
0x0000000000466841 : cmova esi, edx ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x00000000004171e9 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x00000000004171e8 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000043e8fb : cmove eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000464451 : cmove eax, ecx ; ret
0x000000000043ebe0 : cmove eax, edx ; add rsp, 0x60 ; pop rbx ; ret
0x0000000000420913 : cmove eax, edx ; add rsp, 8 ; ret
0x00000000004253c2 : cmove eax, edx ; ret
0x00000000004801d1 : cmove esi, ecx ; jmp 0x48019c
0x0000000000464450 : cmove r8, rcx ; ret
0x000000000043e8fa : cmove rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x000000000046a7a0 : cmove rax, r9 ; ret
0x0000000000420912 : cmove rax, rdx ; add rsp, 8 ; ret
0x00000000004253c1 : cmove rax, rdx ; ret
0x00000000004801d0 : cmove rsi, r9 ; jmp 0x48019d
0x0000000000414d2b : cmovg eax, ecx ; test rdx, rdx ; jne 0x414d29 ; ret
0x000000000046304b : cmovg eax, ecx ; test rdx, rdx ; jne 0x463049 ; ret
0x00000000004137c3 : cmovne eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000420993 : cmovne eax, edx ; ret
0x0000000000420992 : cmovne rax, rdx ; ret
0x0000000000443113 : cmovno eax, dword ptr [rbx - 0x76bef907] ; ret 0x840f
0x0000000000455c0d : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret
0x00000000004461dc : cmovs eax, edx ; ret
0x00000000004199f2 : cmovs ebp, dword ptr [rcx] ; ret 0x14c
0x000000000049bef8 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x00000000004801ce : cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x48019f
0x0000000000467e2c : cmp ah, byte ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000467e72 : cmp ah, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xfb57
0x000000000043fad1 : cmp al, 0x24 ; call rbx
0x000000000049d4eb : cmp al, 0x24 ; mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x000000000040e09d : cmp al, 0x33 ; call rax
0x00000000004b8b60 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004c24fc : cmp al, 0x4b ; add byte ptr [rax], al ; ror bh, 0xfd ; jmp qword ptr [rdx]
0x00000000004c73fc : cmp al, 0x9a ; add byte ptr [rax], al ; loopne 0x4c7409 ; cld ; jmp qword ptr [rax]
0x00000000004bd8b0 : cmp al, 0xd8 ; std ; call rsp
0x00000000004c13dd : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0xfff7
0x000000000043ccf6 : cmp al, byte ptr [rsi - 1] ; jne 0x43cd1c ; xor eax, eax ; ret
0x000000000043edc8 : cmp al, ch ; ret 0x2b3
0x0000000000425696 : cmp al, dh ; ret
0x0000000000425695 : cmp al, r14b ; ret
0x00000000004c8231 : cmp bh, ch ; call rcx
0x0000000000452713 : cmp bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xe920
0x00000000004c6c69 : cmp bl, bh ; jmp qword ptr [rdx]
0x00000000004c36b8 : cmp bl, bl ; clc ; call qword ptr [rbx]
0x00000000004c36e8 : cmp bl, bl ; clc ; call qword ptr [rdx]
0x0000000000486739 : cmp bl, ch ; ret 0x8148
0x000000000042c0f3 : cmp bl, dh ; ret
0x000000000041046b : cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x000000000040fd47 : cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000401313 : cmp byte ptr [rax + 0x39], cl ; ret 0x2773
0x00000000004261ff : cmp byte ptr [rax + 0xf], cl ; ret
0x00000000004256d7 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x000000000043fa84 : cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x000000000041046c : cmp byte ptr [rax - 0x77], cl ; ret 0x2b48
0x0000000000482747 : cmp byte ptr [rax - 0x7d], cl ; ret
0x00000000004256c6 : cmp byte ptr [rax], ah ; ret
0x00000000004151e3 : cmp byte ptr [rax], al ; je 0x4151f4 ; ret
0x000000000049b7a5 : cmp byte ptr [rax], al ; je 0x49b81b ; add rsp, 0x18 ; ret
0x0000000000420990 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x00000000004256b6 : cmp byte ptr [rax], dl ; ret
0x00000000004256b5 : cmp byte ptr [rax], r10b ; ret
0x00000000004256c5 : cmp byte ptr [rax], r12b ; ret
0x000000000042098f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000004c1f64 : cmp byte ptr [rbx + 0x1b70307], al ; ret
0x00000000004c6325 : cmp byte ptr [rbx + 0x2030d07], al ; cld ; ret
0x00000000004c6385 : cmp byte ptr [rbx + 0x2030d07], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004c62c5 : cmp byte ptr [rbx + 0x3030d07], al ; or al, byte ptr [rcx] ; ret
0x000000000043e2c2 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x0000000000472b0b : cmp byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r9
0x0000000000463f27 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x0000000000476446 : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000004bd320 : cmp byte ptr [rdi], 0xfd ; call rax
0x00000000004151a8 : cmp byte ptr [rdi], cl ; ret 0x389
0x000000000042e63d : cmp byte ptr [rdi], dl ; ret
0x000000000042f150 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042f139 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042f122 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042dbde : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000046a79c : cmp byte ptr [rsi - 2], 0x3a ; cmove rax, r9 ; ret
0x0000000000449043 : cmp byte ptr [rsi], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004c7ca8 : cmp cl, bl ; cld ; call qword ptr [rax]
0x000000000041a320 : cmp cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000048142b : cmp cl, byte ptr [rax - 0x77] ; ret 0x8d4a
0x000000000046a79f : cmp cl, byte ptr [rcx + 0xf] ; rol ebx, 0x4c ; mov eax, ecx ; ret
0x0000000000488c66 : cmp cl, ch ; ret
0x000000000046a76e : cmp dh, byte ptr [rbp + 4] ; test ecx, ecx ; jne 0x46a72a ; xor eax, eax ; ret
0x000000000046d913 : cmp dh, byte ptr [rcx] ; rol byte ptr [rcx - 0x80], cl ; cld ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x00000000004c8230 : cmp dil, bpl ; call rcx
0x0000000000434edb : cmp dl, 1 ; jb 0x434eed ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043d2e0 : cmp dl, 1 ; jb 0x43d2ee ; mov byte ptr [rdi], cl ; ret
0x000000000043d45a : cmp dl, 1 ; jb 0x43d468 ; mov byte ptr [rdi], cl ; ret
0x0000000000463ef8 : cmp dword ptr [rax + 0x30], 0 ; je 0x463f06 ; ret
0x0000000000433c7c : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000044ff8e : cmp dword ptr [rcx - 0x7d], ecx ; ret 0xf301
0x00000000004151e1 : cmp dword ptr [rdi + 0x38], 0 ; je 0x4151f6 ; ret
0x0000000000442000 : cmp dword ptr [rdx + rcx*8 - 8], 1 ; sbb eax, 0 ; leave ; ret
0x000000000049bfc4 : cmp dword ptr [rsi + 8], ecx ; cmova eax, edx ; ret
0x000000000043eb33 : cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x000000000047a459 : cmp eax, 0x251566 ; call rax
0x000000000047a31c : cmp eax, 0x2516a3 ; jmp rax
0x00000000004bd87c : cmp eax, 0x32fffdd6 ; salc ; std ; jmp qword ptr [rdi]
0x00000000004777ac : cmp eax, 0xfd ; jbe 0x4777bd ; ret
0x0000000000473b6f : cmp eax, 0xff ; cmove rax, rdx ; ret
0x0000000000415214 : cmp eax, 0xff ; je 0x415229 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415d37 : cmp eax, 0xff ; je 0x415d48 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000046410a : cmp eax, 0xff ; je 0x46411b ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000046414e : cmp eax, 0xff ; je 0x46415f ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000410de9 : cmp eax, 0xff ; jne 0x410df6 ; pop rbx ; ret
0x0000000000415d8f : cmp eax, 0xff ; jne 0x415d80 ; pop rbx ; ret
0x0000000000442010 : cmp eax, 0xff ; jne 0x442010 ; xor eax, eax ; leave ; ret
0x000000000040dbf9 : cmp eax, 0xfffff000 ; ja 0x40dc28 ; ret
0x000000000043e926 : cmp eax, 0xfffff000 ; ja 0x43e938 ; ret
0x000000000043e975 : cmp eax, 0xfffff000 ; ja 0x43e988 ; ret
0x000000000043eb04 : cmp eax, 0xfffff000 ; ja 0x43eb48 ; ret
0x000000000044efa1 : cmp eax, 0xfffff000 ; ja 0x44efb8 ; ret
0x0000000000469e18 : cmp eax, 0xfffff000 ; ja 0x469e30 ; pop rbx ; ret
0x000000000046a1a6 : cmp eax, 0xfffff000 ; ja 0x46a1b8 ; ret
0x000000000046a1fb : cmp eax, 0xfffff000 ; ja 0x46a210 ; ret
0x000000000043db6b : cmp eax, 2 ; je 0x43db7f ; xor eax, eax ; ret
0x0000000000441efa : cmp eax, 4 ; je 0x441f05 ; ret
0x0000000000413215 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x413228 ; movzx eax, byte ptr [rax] ; ret
0x0000000000440871 : cmp eax, dword ptr [rip - 0x9cf0000] ; mov rdi, r12 ; call rbx
0x0000000000473bb8 : cmp eax, dword ptr [rsi + rdx] ; jae 0x473b68 ; xor eax, eax ; ret
0x0000000000416ae9 : cmp eax, ecx ; jae 0x416b17 ; movzx eax, byte ptr [rax] ; ret
0x000000000043cd13 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000477984 : cmp eax, esi ; je 0x477994 ; ret
0x00000000004bee59 : cmp ebp, esi ; call qword ptr [rax]
0x0000000000441e96 : cmp ebx, 0xa ; je 0x441ea1 ; ret
0x00000000004437de : cmp ebx, eax ; setne dl ; jmp 0x4437ca
0x0000000000470c51 : cmp ecx, dword ptr [rax - 0x75] ; adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000046cc2e : cmp ecx, dword ptr [rax - 0x7b] ; sal byte ptr [rsp + 0x48], 0x83 ; ret
0x0000000000447289 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000466840 : cmp ecx, dword ptr [rdi] ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x000000000046444e : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000042f16b : cmp ecx, eax ; jne 0x42f199 ; xor eax, eax ; ret
0x0000000000473496 : cmp ecx, edx ; jne 0x473475 ; ret
0x00000000004c2639 : cmp edi, eax ; call qword ptr [rax]
0x0000000000459a25 : cmp edi, ecx ; ja 0x459a10 ; mov eax, r8d ; ret
0x000000000046a3ae : cmp edi, edx ; ja 0x46a3dd ; ret
0x000000000047bee8 : cmp edx, 0 ; mov eax, edx ; jle 0x47bf00 ; ret
0x000000000041d0fa : cmp edx, 0x6c9800 ; jne 0x41d0c9 ; ret
0x00000000004734a8 : cmp edx, eax ; jne 0x473452 ; mov eax, dword ptr [rsi + 4] ; ret
0x0000000000441403 : cmp edx, eax ; std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000425e08 : cmp edx, ecx ; jne 0x425df5 ; ret
0x0000000000441e1a : cmp edx, edi ; setae al ; ret
0x00000000004664d6 : cmp edx, esi ; je 0x4664e7 ; test edx, edx ; jne 0x4664d9 ; ret
0x0000000000416b29 : cmp esi, 0xff ; setne al ; neg eax ; ret
0x000000000044ca55 : cmp esi, 3 ; je 0x44ca66 ; pop rbx ; ret
0x00000000004b9ee4 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x00000000004641aa : cmp esi, ecx ; jb 0x4641a7 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000415dca : cmp esi, ecx ; jne 0x415dc7 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000463ef7 : cmp qword ptr [rax + 0x30], 0 ; je 0x463f07 ; ret
0x00000000004151e0 : cmp qword ptr [rdi + 0x38], 0 ; je 0x4151f7 ; ret
0x000000000049bfc3 : cmp qword ptr [rsi + 8], rcx ; cmova eax, edx ; ret
0x000000000042c0f2 : cmp r11b, r14b ; ret
0x0000000000441e95 : cmp r11d, 0xa ; je 0x441ea2 ; ret
0x00000000004801cd : cmp r12b, 0x49 ; cmove esi, ecx ; jmp 0x4801a0
0x0000000000473bb7 : cmp r8, qword ptr [rsi + rdx] ; jae 0x473b69 ; xor eax, eax ; ret
0x000000000040dbf8 : cmp rax, -0x1000 ; ja 0x40dc29 ; ret
0x000000000043e925 : cmp rax, -0x1000 ; ja 0x43e939 ; ret
0x000000000043e974 : cmp rax, -0x1000 ; ja 0x43e989 ; ret
0x000000000043eb03 : cmp rax, -0x1000 ; ja 0x43eb49 ; ret
0x000000000044efa0 : cmp rax, -0x1000 ; ja 0x44efb9 ; ret
0x0000000000469e17 : cmp rax, -0x1000 ; ja 0x469e31 ; pop rbx ; ret
0x000000000046a1a5 : cmp rax, -0x1000 ; ja 0x46a1b9 ; ret
0x000000000046a1fa : cmp rax, -0x1000 ; ja 0x46a211 ; ret
0x00000000004777ab : cmp rax, 0xfd ; jbe 0x4777be ; ret
0x0000000000473b6e : cmp rax, 0xff ; cmove rax, rdx ; ret
0x0000000000413214 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x413229 ; movzx eax, byte ptr [rax] ; ret
0x0000000000416ae8 : cmp rax, rcx ; jae 0x416b18 ; movzx eax, byte ptr [rax] ; ret
0x0000000000477983 : cmp rax, rsi ; je 0x477995 ; ret
0x000000000046444d : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000042f16a : cmp rcx, rax ; jne 0x42f19a ; xor eax, eax ; ret
0x0000000000473495 : cmp rcx, rdx ; jne 0x473476 ; ret
0x000000000046a3ad : cmp rdi, rdx ; ja 0x46a3de ; ret
0x00000000004734a7 : cmp rdx, r8 ; jne 0x473453 ; mov eax, dword ptr [rsi + 4] ; ret
0x0000000000425e07 : cmp rdx, rcx ; jne 0x425df6 ; ret
0x0000000000425e06 : cmp rdx, rcx ; jne 0x425df7 ; ret
0x0000000000441e19 : cmp rdx, rdi ; setae al ; ret
0x00000000004641a9 : cmp rsi, rcx ; jb 0x4641a8 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000415dc9 : cmp rsi, rcx ; jne 0x415dc8 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000495ab7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000495db7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496cb7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041bef6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x0000000000425175 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004969b7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x000000000042ebe9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000004005da : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e1 ; ret
0x0000000000429716 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004966b7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004963b7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004099a6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x000000000041310f : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000049aab4 : cwde ; add rax, r8 ; jmp rax
0x00000000004c2638 : cwde ; cmp edi, eax ; call qword ptr [rax]
0x000000000041e085 : cwde ; insb byte ptr [rdi], dx ; add al, ch ; ret
0x000000000041d0fd : cwde ; insb byte ptr [rdi], dx ; add byte ptr [rbp - 0x42], dh ; ret
0x000000000041b899 : cwde ; insb byte ptr [rdi], dx ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8349
0x00000000004c3bb8 : cwde ; jge 0x4c3bb7 ; call rdi
0x0000000000414f3c : cwde ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000047f1d3 : cwde ; ret 0x4b
0x00000000004c6629 : cwde ; std ; call rcx
0x00000000004bd315 : cwde ; std ; push qword ptr [rax - 0x66] ; std ; jmp qword ptr [rax]
0x0000000000438a11 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x0000000000438a12 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000479576 : dec byte ptr [rax + 0x29] ; ret 0x8d49
0x000000000045c5fc : dec byte ptr [rax - 0x75] ; mov ebp, 0xfffffb60 ; call rax
0x0000000000440138 : dec byte ptr [rax - 0x77] ; fucompi st(0) ; call rsp
0x0000000000464bdd : dec byte ptr [rax - 0x77] ; ret
0x000000000040e25a : dec byte ptr [rcx + rcx*4 - 0x11] ; call r14
0x000000000047dacd : dec dword ptr [r13 + r9*4 + 0x7c] ; ret
0x0000000000482623 : dec dword ptr [r8 + 0x39] ; ret
0x00000000004777a9 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x4777c0 ; ret
0x000000000041a8dc : dec dword ptr [r9 - 0x7b] ; ret 0x840f
0x0000000000410789 : dec dword ptr [rax + 0x29] ; ret
0x0000000000438b52 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000004730a1 : dec dword ptr [rax + 0x29] ; ret 0x48e9
0x000000000045dc66 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x000000000041903d : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x000000000041ce3d : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x0000000000418725 : dec dword ptr [rax + 0x39] ; ret
0x00000000004802f4 : dec dword ptr [rax + 0x39] ; ret 0x840f
0x00000000004850ed : dec dword ptr [rax + 0x39] ; ret 0x940f
0x000000000046fd95 : dec dword ptr [rax + 0x39] ; ret 0xed75
0x0000000000473cfa : dec dword ptr [rax + 0x63] ; ret
0x00000000004bd85b : dec dword ptr [rax + 0x69fffdd6] ; salc ; std ; jmp qword ptr [rax]
0x0000000000461a1b : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x000000000046216f : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x0000000000465119 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x0000000000473b71 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000420911 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000458b2e : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x0000000000412707 : dec dword ptr [rax + 0xf] ; ret 0x938b
0x00000000004107ec : dec dword ptr [rax + 1] ; ret
0x000000000047d037 : dec dword ptr [rax + 1] ; ret 0x3948
0x000000000045cbb6 : dec dword ptr [rax - 0x39] ; ret
0x000000000045beec : dec dword ptr [rax - 0x39] ; ret 0xffb0
0x0000000000411977 : dec dword ptr [rax - 0x39] ; ret 0xffd0
0x000000000048025e : dec dword ptr [rax - 0x39] ; ret 0xfffe
0x000000000043e32c : dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000468c6e : dec dword ptr [rax - 0x73] ; dec dword ptr [rax + 0x39] ; ret
0x0000000000473d65 : dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000410468 : dec dword ptr [rax - 0x75] ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x0000000000481428 : dec dword ptr [rax - 0x75] ; cmp cl, byte ptr [rax - 0x77] ; ret 0x8d4a
0x000000000043f80d : dec dword ptr [rax - 0x75] ; jge 0x43f817 ; call rbx
0x000000000043fac0 : dec dword ptr [rax - 0x75] ; jge 0x43faca ; call rbx
0x0000000000441658 : dec dword ptr [rax - 0x75] ; jge 0x441662 ; call rbx
0x0000000000478867 : dec dword ptr [rax - 0x75] ; pop rbp ; enter -0x74b8, 0x14 ; ret
0x000000000041b39f : dec dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x7404
0x00000000004141f1 : dec dword ptr [rax - 0x75] ; push rbx ; sub cl, ch ; ret 0xfffe
0x0000000000477c0c : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000483462 : dec dword ptr [rax - 0x77] ; add cl, byte ptr [rax + 1] ; ret
0x0000000000487c37 : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000425f78 : dec dword ptr [rax - 0x77] ; clc ; ret
0x0000000000468cb6 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; push rcx ; ret
0x000000000049e2ea : dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000040171c : dec dword ptr [rax - 0x77] ; ret
0x000000000046a39e : dec dword ptr [rax - 0x77] ; ret 0x1477
0x00000000004834af : dec dword ptr [rax - 0x77] ; ret 0x348
0x000000000041d3e1 : dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000044ee22 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000045dc2a : dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000465a56 : dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000482d39 : dec dword ptr [rax - 0x77] ; ret 0x89e9
0x0000000000454857 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000045f3f6 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000481d6d : dec dword ptr [rax - 0x77] ; ret 0xc6e9
0x000000000042088e : dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x000000000046a963 : dec dword ptr [rax - 0x77] ; ret 0xf0eb
0x0000000000402b48 : dec dword ptr [rax - 0x77] ; ret 0xf4e9
0x0000000000477b71 : dec dword ptr [rax - 0x77] ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000486fa8 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x000000000048525b : dec dword ptr [rax - 0x7d] ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00000000004777aa : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x4777bf ; ret
0x00000000004532d1 : dec dword ptr [rax - 0x7d] ; jge 0x45330e ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000040410c : dec dword ptr [rax - 0x7d] ; ret
0x0000000000418fef : dec dword ptr [rax - 0x7d] ; ret 0x4007
0x00000000004481b2 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000047019f : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x000000000047018d : dec dword ptr [rax - 0x7d] ; ret 0x4810
0x0000000000456634 : dec dword ptr [rax - 0x7d] ; ret 0x4820
0x0000000000469776 : dec dword ptr [rax - 0x7d] ; ret 0x4909
0x000000000047022b : dec dword ptr [rax - 0x7d] ; ret 0x8908
0x0000000000484c52 : dec dword ptr [rax - 0x7d] ; ret 0xb908
0x0000000000452716 : dec dword ptr [rax - 0x7d] ; ret 0xe920
0x0000000000433c80 : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000046bfc0 : dec dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x000000000047dace : dec dword ptr [rbp + rcx*4 + 0x7c] ; ret
0x000000000049ab29 : dec dword ptr [rbp - 0x75] ; adc cl, byte ptr [rcx + 1] ; ret 0x3ee9
0x000000000043fcce : dec dword ptr [rbp - 0x75] ; push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x000000000041bea9 : dec dword ptr [rbx + 0x2ad8c03d] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000041acdf : dec dword ptr [rbx + 0x2aeb1e15] ; add dh, dh ; ret 0xf02
0x0000000000477c8c : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x00000000004a2b77 : dec dword ptr [rbx] ; ret
0x0000000000483af6 : dec dword ptr [rcx + 0x29] ; fmul dword ptr [rax - 0x77] ; ret 0x348
0x0000000000454b14 : dec dword ptr [rcx + 0x29] ; ret
0x000000000046d1c3 : dec dword ptr [rcx + 0x29] ; ret 0x8d49
0x0000000000454723 : dec dword ptr [rcx + 0x39] ; ret
0x000000000041be13 : dec dword ptr [rcx + 0x39] ; ret 0x4874
0x000000000046bff2 : dec dword ptr [rcx + 0x39] ; ret 0x830f
0x00000000004546a1 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x00000000004718ca : dec dword ptr [rcx + 0x39] ; ret 0x870f
0x000000000049cb5c : dec dword ptr [rcx + 0x63] ; add byte ptr [r8 + 1], r9b ; ret
0x0000000000468c46 : dec dword ptr [rcx + 0x6b] ; ret
0x000000000045a22c : dec dword ptr [rcx + 0xf40244c] ; ret 0x548b
0x0000000000452379 : dec dword ptr [rcx + rcx*4 - 2] ; mov rdi, rbx ; call rax
0x000000000048036f : dec dword ptr [rcx - 0x60f73] ; dec dword ptr [rax + 0x39] ; ret 0x840f
0x000000000043f645 : dec dword ptr [rcx - 0x75] ; call rbx
0x000000000043face : dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x000000000043f6d8 : dec dword ptr [rcx - 0x75] ; jge 0x43f6e2 ; call rbx
0x000000000043f7ff : dec dword ptr [rcx - 0x75] ; jge 0x43f809 ; call rbx
0x000000000043f942 : dec dword ptr [rcx - 0x75] ; jge 0x43f94c ; call rbx
0x000000000043fab2 : dec dword ptr [rcx - 0x75] ; jge 0x43fabc ; call rbx
0x00000000004412d0 : dec dword ptr [rcx - 0x75] ; jge 0x4412da ; call rbx
0x00000000004413f8 : dec dword ptr [rcx - 0x75] ; jge 0x441402 ; call rbx
0x000000000044153b : dec dword ptr [rcx - 0x75] ; jge 0x441545 ; call rbx
0x000000000044163c : dec dword ptr [rcx - 0x75] ; jge 0x441646 ; call rbx
0x000000000047c2dc : dec dword ptr [rcx - 0x77] ; imul ecx ; ret
0x0000000000453313 : dec dword ptr [rcx - 0x77] ; ret
0x0000000000445658 : dec dword ptr [rcx - 0x77] ; ret 0x11e9
0x000000000044deb7 : dec dword ptr [rcx - 0x77] ; ret 0x87e9
0x0000000000455943 : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000041a8dd : dec dword ptr [rcx - 0x7b] ; ret 0x840f
0x00000000004853b7 : dec dword ptr [rcx - 0x7d] ; call 0xffffffffc3819fc7
0x000000000043e9c5 : dec dword ptr [rdi] ; adc esp, 0x4f ; add byte ptr [rax], al ; ret
0x000000000043eab9 : dec dword ptr [rdi] ; and eax, 0x4e ; add byte ptr [rax], al ; ret
0x00000000004837d6 : dec dword ptr [rdi] ; lahf ; ret 0xb60f
0x000000000048608f : dec dword ptr [rdi] ; lahf ; ret 0xd729
0x00000000004137c2 : dec dword ptr [rdi] ; lds r11d, ptr [r11 + 0x5d] ; pop r12 ; ret
0x0000000000441dcc : dec dword ptr [rdi] ; or ebp, 0x1b ; add byte ptr [rax], al ; ret
0x000000000043e8cc : dec dword ptr [rdi] ; or ebp, 0x50 ; add byte ptr [rax], al ; ret
0x00000000004461db : dec dword ptr [rdi] ; ret 0x41c3
0x0000000000441daf : dec dword ptr [rdi] ; sub edx, 0x1b ; add byte ptr [rax], al ; ret
0x00000000004108a1 : dec dword ptr [rdi] ; test ah, al ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000043cba0 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000046fe2c : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xdaf7
0x0000000000416b2b : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000484faf : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x0000000000479dde : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000459176 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xfa80
0x000000000043e21d : dec dword ptr [rdi] ; xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000043ea25 : dec dword ptr [rdi] ; xor dword ptr [rdi + rcx*2], 0 ; ret
0x00000000004798fd : dec ecx ; ret
0x0000000000438b51 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x0000000000461ba6 : dec qword ptr [r8 + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x00000000004481b1 : dec qword ptr [rax - 0x7d] ; ret 0x4801
0x000000000046d1c2 : dec qword ptr [rcx + 0x29] ; ret 0x8d49
0x0000000000464c22 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000047a08c : div ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000459a35 : div ecx ; add eax, r8d ; ret
0x000000000043db21 : div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000462686 : div esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047a08b : div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040054c : enter -0x1401, -0x3b ; ret
0x000000000040053c : enter -0x2eff, 0x39 ; ret 0xffb8
0x000000000043cd14 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x0000000000438a0e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000438b4e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000047886b : enter -0x74b8, 0x14 ; ret
0x000000000046cda4 : enter -0x76b4, -7 ; mov r15, rax ; jmp 0x46cd78
0x000000000046b4e4 : enter -0x76bc, 0x45 ; mov ah, 0xe8 ; ret 0xfd34
0x000000000043f724 : enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x0000000000416aea : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x0000000000479bfe : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000421fad : enter 0x31c3, -0x40 ; ret
0x00000000004c1483 : enter 0x380e, 0x41 ; ret
0x00000000004186dd : enter 0x4801, -0x77 ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000041a8a5 : enter 0x4801, -0x7d ; ret 0x4810
0x000000000046a726 : enter 0x4f75, -0xd ; ret
0x00000000004ba69c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000042ec96 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004209e1 : enter 0xf66, -0x15 ; ret
0x0000000000414e87 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000415383 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000040f3ca : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000442006 : fadd dword ptr [rax] ; leave ; ret
0x000000000041c21f : fadd dword ptr [rbp - 0x78] ; or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x0000000000411ce0 : fadd dword ptr [rcx + rcx*4 + 0x65] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004c12d8 : fadd dword ptr [rcx - 9] ; call qword ptr [rax]
0x0000000000405621 : fadd dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000443872 : fadd dword ptr [rcx] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004c89f9 : fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x0000000000411457 : fadd dword ptr [rdi + rcx + 0x47] ; ret
0x000000000047ad69 : fadd st(1) ; call 0xffffffff8a09d694
0x000000000047aed0 : fadd st(1) ; call 0xffffffff8a09d7fb
0x000000000047b6e9 : fadd st(1) ; call 0xffffffff8a09e014
0x000000000047b846 : fadd st(1) ; call 0xffffffff8a09e171
0x0000000000476f55 : fadd st(3) ; mov eax, 0xffffffff ; ret
0x000000000042e7e1 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049e114 : fbstp dword ptr [rbp - 0x17] ; pop rbx ; ret
0x0000000000441362 : fcmovb st(0), st(2) ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004b9cd8 : fcmovb st(0), st(3) ; ret
0x000000000044e6be : fcom dword ptr [rax - 0x3ece49f1] ; ret 0x4809
0x000000000044e371 : fcom dword ptr [rdi + 0x4a] ; add byte ptr [rax - 0x77], cl ; ret 0x8840
0x00000000004bd848 : fcom st(0), st(3) ; std ; jmp rsp
0x00000000004c18f9 : fcomi st(7) ; jmp qword ptr [rbx]
0x00000000004681e7 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040f98a : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000040fa6f : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000043f38f : fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000041d636 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000004baa59 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000004b8cc0 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000485259 : fdiv st(1), st(0) ; dec dword ptr [rax - 0x7d] ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00000000004c5fb9 : fdiv st(2), st(0) ; call rsi
0x000000000043f9d4 : fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000043f940 : fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; jge 0x43f94e ; call rbx
0x000000000041d3df : fdiv st(7), st(0) ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000043f80b : fdivp st(5) ; dec dword ptr [rax - 0x75] ; jge 0x43f819 ; call rbx
0x000000000043f76a : fdivp st(5) ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000043f7fd : fdivp st(5) ; dec dword ptr [rcx - 0x75] ; jge 0x43f80b ; call rbx
0x000000000043f7fc : fdivp st(5) ; dec dword ptr [rcx - 0x75] ; jge 0x43f80c ; call rbx
0x00000000004c0e08 : fdivr dword ptr [rdi] ; idiv bh ; ret
0x00000000004a2d41 : fdivr st(0) ; inc eax ; fprem ; call qword ptr [rax]
0x00000000004c5ec1 : fdivr st(2) ; jmp rdi
0x00000000004b8015 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004bd8b1 : fdivr st(5) ; call rsp
0x000000000043cd18 : fdivr st(7) ; ret
0x000000000043eb32 : fiadd dword ptr [rbx + 0x2a8247c] ; cmove eax, edx ; ret
0x0000000000463904 : fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x0000000000405435 : fiadd dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000417182 : ficom dword ptr [rax + 1] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043fe89 : ficomp word ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004ba8a6 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x0000000000443785 : fidivr dword ptr [rax + 1] ; ret
0x000000000043d73f : fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x0000000000459a28 : fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x0000000000489b65 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00000000004127f6 : fimul dword ptr [rax - 0x77] ; out dx, al ; call 0x43ea76
0x0000000000410890 : fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x0000000000404e08 : fimul dword ptr [rax - 0x7d] ; ret
0x0000000000425fa2 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x000000000048a382 : fimul word ptr [rax + 0x29] ; ret
0x0000000000411a6e : fimul word ptr [rax - 0x77] ; ret
0x00000000004726fa : fimul word ptr [rax - 0x7d] ; ret
0x0000000000479a2e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x479a88
0x000000000047f53e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x47f598
0x000000000044f0f0 : fimul word ptr [rcx + rcx*4 - 0x19] ; call r15
0x0000000000414ef5 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000415065 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000004177a8 : fisttp dword ptr [rax + 0x21] ; ret
0x0000000000467662 : fisttp dword ptr [rax + 0xf] ; fucompp ; ret 0xfffe
0x000000000049e111 : fisttp dword ptr [rax - 0x77] ; fbstp dword ptr [rbp - 0x17] ; pop rbx ; ret
0x00000000004736c9 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000478ad1 : fisttp dword ptr [rax - 0x77] ; ret
0x000000000049aab0 : fisttp dword ptr [rbx + 0x63] ; add al, 0x98 ; add rax, r8 ; jmp rax
0x0000000000478aeb : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000440369 : fisttp dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000041da5e : fisttp qword ptr [rax + 0x39] ; ret 0x860f
0x00000000004475b7 : fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x000000000041bfb9 : fisttp word ptr [rax + 9] ; ret 0x8948
0x0000000000478b6f : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000042aa4d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000042ebb1 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e8b1 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000431f9c : fisubr word ptr [rcx] ; ret 0xfec5
0x000000000045ad41 : fisubr word ptr [rdx] ; add byte ptr [r15 + r9 + 0x44], cl ; ret 0xf4c
0x0000000000405529 : fld dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000047cca2 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000400c5a : fld qword ptr [rax] ; add byte ptr [rcx], bh ; ret 0x860f
0x0000000000401716 : fld qword ptr [rbx] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b8d01 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x0000000000490f2a : fld xword ptr [rsp - 0x18] ; ret
0x000000000044ec79 : fldcw word ptr [rsp - 2] ; ret
0x00000000004255c9 : fldenv dword ptr [rsi + 0xf] ; je 0x425626 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042c3f7 : fldenv dword ptr [rsi + 0xf] ; je 0x42c454 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042ec31 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004254c1 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000479ad4 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000418caf : fmul dword ptr [rax + 0x39] ; ret
0x000000000047dcb1 : fmul dword ptr [rax + 0x39] ; ret 0x4976
0x000000000047dfd6 : fmul dword ptr [rax + 0x39] ; ret 0x860f
0x000000000048e5b7 : fmul dword ptr [rax - 0x39] ; ret
0x0000000000457d41 : fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x0000000000411551 : fmul dword ptr [rax - 0x77] ; ret
0x0000000000483af9 : fmul dword ptr [rax - 0x77] ; ret 0x348
0x000000000047c6f3 : fmul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0xf], cl ; ret 0x8349
0x0000000000468e4c : fmul dword ptr [rax - 0x7d] ; ret
0x0000000000411bda : fmul dword ptr [rcx + 0x21] ; ret
0x000000000045a43e : fmul dword ptr [rcx + 0xf] ; ret
0x0000000000499d5d : fmul dword ptr [rcx + 9] ; ret 0x65e9
0x0000000000499ff5 : fmul dword ptr [rcx + 9] ; ret 0x85e9
0x000000000045c49b : fmul dword ptr [rdi] ; ret
0x00000000004015ab : fmul dword ptr [rsi - 0x7cb7ff94] ; ret
0x000000000048a287 : fmul qword ptr [rcx + 0x19] ; ret 0x8545
0x00000000004c639c : fmul qword ptr [rcx + 0xae00000] ; sti ; jmp rsi
0x000000000048990c : fmul qword ptr [rcx + 0xf] ; mov esi, 0xbe0f2414 ; ret 0x8349
0x0000000000420d69 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000042681f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000048e4b2 : fmul st(0) ; ret
0x000000000048e430 : fmulp st(1) ; ret
0x000000000040dba5 : fpatan ; ret
0x00000000004a2d45 : fprem ; call qword ptr [rax]
0x00000000004c7ca9 : frndint ; call qword ptr [rax]
0x000000000042e9b1 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b89e7 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000004b8d60 : fstp st(0) ; ret 0xde5d
0x000000000040dc28 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000042ecb1 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000437884 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000047bf12 : fsub qword ptr [rcx + rcx*4 + 4] ; and eax, 0x2d0 ; ret
0x00000000004bfc9c : fsub qword ptr [rdx] ; add byte ptr [rax], al ; xor byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x000000000043d12b : fsub qword ptr [rsi + 0xf] ; jmp 0x43d0f7
0x000000000042eab1 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000420afc : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000043f722 : fsubp st(0) ; enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000044122b : fsubp st(0) ; mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x000000000044162a : fsubp st(0) ; rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000440c98 : fsubp st(0) ; ret 0xffe8
0x0000000000440b98 : fsubp st(0) ; ret 0xffe9
0x000000000041bead : fsubr dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004baa38 : fucom st(5) ; loop 0x4baa91 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000047e455 : fucomi st(1) ; ret
0x000000000043ed1f : fucomp st(2) ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000044013b : fucompi st(0) ; call rsp
0x0000000000468cb9 : fucompi st(0) ; push rcx ; ret
0x0000000000468527 : fucompi st(0) ; ret
0x0000000000418f08 : fucompi st(0) ; ret 0xfff1
0x0000000000444e52 : fucompi st(3) ; ret
0x0000000000467666 : fucompp ; ret 0xfffe
0x00000000004c41b4 : hlt ; add byte ptr [eax], al ; in al, dx ; stc ; call qword ptr [rsi]
0x000000000043e220 : hlt ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000441c8b : hlt ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004bde8a : hlt ; call qword ptr [rax]
0x00000000004bdcaa : hlt ; call qword ptr [rdx]
0x00000000004b8de8 : hlt ; jmp 0x4b8dbd
0x00000000004340ea : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043124e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043c823 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000004c36b4 : hlt ; pop rsp ; add byte ptr [rax], al ; cmp bl, bl ; clc ; call qword ptr [rbx]
0x00000000004bf159 : hlt ; ret
0x00000000004b8f23 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000043c827 : hlt ; sub eax, edx ; ret
0x00000000004c5fb4 : hlt ; test dword ptr [rax], eax ; add byte ptr [rax], cl ; fdiv st(2), st(0) ; call rsi
0x00000000004c0e0a : idiv bh ; ret
0x0000000000401666 : idiv byte ptr [rdi + 1] ; call rax
0x00000000004461d6 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x000000000049cb5a : idiv edi ; dec dword ptr [rcx + 0x63] ; add byte ptr [r8 + 1], r9b ; ret
0x000000000049afdf : idiv edi ; dec dword ptr [rcx - 0x77] ; ret
0x000000000049f51b : idiv edi ; nop dword ptr [rax] ; ret
0x000000000049f4d8 : idiv edi ; nop word ptr [rax + rax] ; ret
0x000000000049fed8 : idiv edi ; ret
0x00000000004a2832 : idiv edi ; xor byte ptr [rax], al ; clc ; inc dword ptr [rax] ; add eax, edi ; call rax
0x0000000000441245 : imul eax ; cmc ; ret
0x00000000004412cb : imul eax ; outsd dx, dword ptr [rsi] ; ret
0x0000000000409c77 : imul eax ; ret
0x000000000046a998 : imul eax ; ret 0xfff8
0x00000000004413f3 : imul eax ; ret 0xfffd
0x000000000044a9ad : imul eax, dword ptr [rcx], 0 ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x000000000043b381 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x000000000044688b : imul eax, dword ptr [rdx], 0 ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x00000000004437d9 : imul eax, dword ptr [rdx], 0x39d23100 ; ret
0x000000000043f9d3 : imul ebx, esp, 0x8b49fffd ; call rbx
0x000000000047c2df : imul ecx ; ret
0x00000000004a2929 : imul edi, eax, 0xf86b70ff ; call qword ptr [rax]
0x00000000004bd860 : imul edx, esi, 0xd020fffd ; std ; jmp qword ptr [rax]
0x0000000000466844 : imul esi, esi, 0x3c ; add eax, esi ; ret
0x000000000043a7fc : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x00000000004c7ca4 : in al, -0x5e ; add byte ptr [rax], al ; cmp cl, bl ; cld ; call qword ptr [rax]
0x00000000004c76a4 : in al, -0x64 ; add byte ptr [rax], al ; call 0x114c72bc
0x00000000004340ca : in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000425e0b : in al, -0xd ; ret
0x00000000004c3ef1 : in al, -7 ; jmp rax
0x00000000004a2bf9 : in al, -8 ; call qword ptr [rax]
0x00000000004a2cbd : in al, -8 ; call rax
0x00000000004a2cfd : in al, -8 ; inc dword ptr [rax - 0x1a] ; clc ; call qword ptr [rax]
0x00000000004a2bd9 : in al, -8 ; jmp qword ptr [rax]
0x00000000004a2c19 : in al, -8 ; push rax ; in eax, -8 ; call rax
0x00000000004c25a4 : in al, 0x4b ; add byte ptr [rax], al ; call 0xffffffffe54c1de4
0x0000000000422e7c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000043d7b8 : in al, 0x75 ; adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x000000000048549a : in al, 0xf ; lahf ; ret 0x2941
0x00000000004570b8 : in al, 0xf ; test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x00000000004bdca4 : in al, 2 ; add byte ptr [rax], al ; call 0x134bd0f6
0x0000000000415bd9 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; insd dword ptr [rdi], dx ; ret 2
0x0000000000422730 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x00000000004708ed : in al, dx ; cld ; inc dword ptr [rbp + 0x5b0378c0] ; ret
0x0000000000490f29 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x000000000043124a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004344ca : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000464a57 : in al, dx ; or al, ch ; ret 1
0x000000000041c257 : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000413150 : in al, dx ; ret 2
0x00000000004bf4ac : in al, dx ; sbb al, byte ptr [rax] ; add al, al ; pop rcx ; cmc ; jmp qword ptr [rcx]
0x00000000004c41b9 : in al, dx ; stc ; call qword ptr [rsi]
0x00000000004ba47e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4ba411 ; ret 0x48f
0x00000000004ba47d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4ba412 ; ret 0x48f
0x00000000004baa39 : in eax, -0x1e ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000459e0b : in eax, -0x21 ; loopne 0x459d9c ; ret 0xe680
0x000000000043414a : in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042b92a : in eax, -0xd ; ret
0x00000000004b9f01 : in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004a2c9d : in eax, -8 ; call qword ptr [rax]
0x00000000004a2c1d : in eax, -8 ; call rax
0x00000000004b8b83 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000425eca : in eax, 0x48 ; mov eax, edi ; ret
0x0000000000451742 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000004b7e19 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x0000000000465cc3 : in eax, 0xf ; je 0x465ce8 ; add rax, 2 ; ret
0x00000000004a2c4d : in eax, dx ; clc ; jmp qword ptr [rax]
0x000000000049e15f : in eax, dx ; jne 0x49e141 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041d22b : in eax, dx ; jrcxz 0x41d261 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000043d042 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000044eb47 : in eax, dx ; mov esi, 0x3740027 ; ret
0x000000000043105a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043454a : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000494cc0 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047827b : in eax, dx ; or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x000000000047d982 : in eax, dx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000414d32 : in eax, dx ; ret
0x000000000043d192 : in eax, dx ; sub rax, 1 ; ret
0x000000000049c205 : in eax, dx ; xor eax, eax ; add rsp, 8 ; ret
0x000000000043d458 : inc bl ; cmp dl, 1 ; jb 0x43d46a ; mov byte ptr [rdi], cl ; ret
0x0000000000431f26 : inc bl ; jb 0x431f36 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000425e31 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000004151a2 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x000000000044ca56 : inc byte ptr [rbx] ; je 0x44ca65 ; pop rbx ; ret
0x00000000004a2fcb : inc dword ptr [rax + 0x19] ; stc ; jmp rax
0x00000000004a2db3 : inc dword ptr [rax + 0x1c] ; stc ; call rax
0x00000000004a29c7 : inc dword ptr [rax + 0x5a] ; clc ; jmp rax
0x00000000004bd34f : inc dword ptr [rax + 0x5b] ; std ; call qword ptr [rax - 0x1f0002a3]
0x00000000004bd2bf : inc dword ptr [rax + 0x75] ; std ; jmp qword ptr [rax]
0x00000000004a2cff : inc dword ptr [rax - 0x1a] ; clc ; call qword ptr [rax]
0x00000000004a2bd7 : inc dword ptr [rax - 0x1c] ; clc ; jmp qword ptr [rax]
0x00000000004a2d77 : inc dword ptr [rax - 0x2a] ; clc ; call qword ptr [rax - 0x1f000729]
0x00000000004bd31f : inc dword ptr [rax - 0x2f0002c1] ; std ; jmp qword ptr [rax]
0x00000000004a296f : inc dword ptr [rax - 0x2f00077b] ; xchg al, bh ; jmp qword ptr [rax]
0x00000000004a2d23 : inc dword ptr [rax - 0x31] ; clc ; call qword ptr [rax - 0x1f000730]
0x00000000004bd48f : inc dword ptr [rax - 0x35] ; std ; call rsp
0x00000000004a2bc7 : inc dword ptr [rax - 0x3b] ; clc ; jmp rax
0x00000000004529ea : inc dword ptr [rax - 0x4d343] ; jmp qword ptr [rax]
0x0000000000454b9c : inc dword ptr [rax - 0x50f43] ; jmp qword ptr [rax]
0x00000000004a295f : inc dword ptr [rax - 0x80] ; clc ; call qword ptr [rax - 0x1f00077f]
0x000000000045f743 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000042f1c7 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000004a2837 : inc dword ptr [rax] ; add eax, edi ; call rax
0x00000000004a32fb : inc dword ptr [rax] ; ja 0x4a32fc ; call qword ptr [rax]
0x00000000004a3353 : inc dword ptr [rax] ; jl 0x4a3354 ; call qword ptr [rax]
0x00000000004bd2c7 : inc dword ptr [rax] ; jns 0x4bd2cc ; jmp rax
0x00000000004a332b : inc dword ptr [rax] ; js 0x4a332c ; jmp qword ptr [rax]
0x00000000004a2a83 : inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; clc ; jmp qword ptr [rax]
0x00000000004a29b7 : inc dword ptr [rax] ; push rdx ; clc ; call qword ptr [rax]
0x00000000004a2fbb : inc dword ptr [rax] ; sbb edi, ecx ; call qword ptr [rax + 0x20fff91a]
0x00000000004708ef : inc dword ptr [rbp + 0x5b0378c0] ; ret
0x00000000004a2f27 : inc dword ptr [rbp + rbx - 7] ; call rsp
0x0000000000472b00 : inc dword ptr [rbp - 0x76b48a40] ; ret
0x000000000045a910 : inc dword ptr [rbx + 0x394401c3] ; jrcxz 0x45a995 ; ret
0x00000000004bd4b7 : inc dword ptr [rbx + rdx*8 - 3] ; push qword ptr [rbx + rdx*8] ; std ; call rsp
0x000000000045fb37 : inc dword ptr [rbx - 0x10ab43] ; jmp qword ptr [rax]
0x000000000040d5ba : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x000000000049c692 : inc dword ptr [rbx - 0x38b7f808] ; ret 0xffff
0x000000000044d9e7 : inc dword ptr [rbx - 0x76be0008] ; ret
0x0000000000467cac : inc dword ptr [rbx - 0x7bf0fd08] ; ret
0x0000000000407672 : inc dword ptr [rbx - 0x7bf0fe08] ; ret
0x000000000043db1f : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043da4f : inc dword ptr [rbx] ; pop rbx ; ret
0x000000000045d809 : inc dword ptr [rcx + 0xf] ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x0000000000476f20 : inc dword ptr [rcx + rcx*4 - 0x40] ; sub eax, ecx ; ret
0x00000000004a2af7 : inc dword ptr [rcx - 0x3d] ; clc ; call rcx
0x000000000047f0b7 : inc dword ptr [rcx - 0x43] ; ret 0x4b
0x000000000044d9ea : inc dword ptr [rcx - 0x77] ; ret
0x00000000004c89f6 : inc dword ptr [rcx] ; or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x000000000047f3c0 : inc dword ptr [rdx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a2e5f : inc dword ptr [rdx + 0x1e] ; stc ; call rdx
0x00000000004a2abb : inc dword ptr [rdx - 0x41] ; clc ; jmp rax
0x00000000004a2ab7 : inc dword ptr [rdx - 0x42] ; clc ; inc dword ptr [rdx - 0x41] ; clc ; jmp rax
0x000000000042b22d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000004a2dfb : inc dword ptr [rsi + 0x1b] ; stc ; call rsi
0x00000000004a2b3f : inc dword ptr [rsi - 0x3c] ; clc ; call rsi
0x00000000004a2b13 : inc dword ptr [rsi - 0x43] ; clc ; call qword ptr [rsi]
0x00000000004a2deb : inc dword ptr [rsi] ; sbb eax, 0x1c96fff9 ; stc ; jmp qword ptr [rsi]
0x00000000004a29a7 : inc eax ; clc ; call rax
0x00000000004a2d43 : inc eax ; fprem ; call qword ptr [rax]
0x00000000004a3323 : inc eax ; ja 0x4a3324 ; jmp rax
0x00000000004a32eb : inc eax ; jbe 0x4a32ec ; call rax
0x00000000004a3343 : inc eax ; js 0x4a3344 ; jmp rax
0x00000000004a297f : inc eax ; mov bh, al ; call qword ptr [rax]
0x00000000004a2d57 : inc eax ; retf ; clc ; call qword ptr [rax]
0x00000000004bd32f : inc eax ; std ; call qword ptr [rax]
0x000000000046445c : inc ebx ; nop ; xor eax, eax ; ret
0x000000000043cd19 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000412dc8 : inc ebx ; nop word ptr [rax + rax] ; ret
0x0000000000476f5b : inc ebx ; sub eax, edx ; ret
0x000000000045f8f2 : inc edi ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x00000000004808c6 : inc esi ; add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000041e086 : insb byte ptr [rdi], dx ; add al, ch ; ret
0x000000000049df8f : insb byte ptr [rdi], dx ; add bh, bh ; ror byte ptr [rbx + rcx*4 + 0x2d], 1 ; ret 0x22
0x0000000000402c2b : insb byte ptr [rdi], dx ; add bh, bh ; sar dword ptr [rdi + 0x6cafe0], cl ; call rbx
0x00000000004015ad : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041d0fe : insb byte ptr [rdi], dx ; add byte ptr [rbp - 0x42], dh ; ret
0x0000000000470395 : insb byte ptr [rdi], dx ; add byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000041b89a : insb byte ptr [rdi], dx ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8349
0x000000000047a496 : insb byte ptr [rdi], dx ; add cl, ch ; ret
0x000000000047b311 : insb byte ptr [rdi], dx ; and al, 0x78 ; call r12
0x0000000000490f2b : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000044ec7a : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x00000000004baa3e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004c822c : insb byte ptr [rdi], dx ; test al, 0 ; add byte ptr [rax + 0x3a], al ; std ; call rcx
0x0000000000494540 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c4795 : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; sub byte ptr [rax], al ; cli ; call rsi
0x000000000043f32f : insd dword ptr [rdi], dx ; add byte ptr [rax], r8b ; ret
0x0000000000495440 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000462111 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x00000000004baa3f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004b8ded : insd dword ptr [rdi], dx ; ret 0xb9b9
0x0000000000415bdf : insd dword ptr [rdi], dx ; ret 2
0x00000000004b9cff : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000478123 : int 0x48
0x00000000004b9ec7 : int 0x80
0x00000000004c1401 : int 0xa
0x0000000000403c2f : int 0xc3
0x0000000000487f6f : int 0xfc
0x000000000045b877 : int 0xff
0x0000000000425ce1 : int1 ; add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x0000000000459a36 : int1 ; add eax, r8d ; ret
0x0000000000443fbc : int1 ; call rbx
0x0000000000473494 : int1 ; cmp rcx, rdx ; jne 0x473477 ; ret
0x000000000043d3db : int1 ; jl 0x43d42c ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043d3fc : int1 ; jl 0x43d44d ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043d40f : int1 ; jl 0x43d460 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043d4e4 : int1 ; jl 0x43d535 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043d53c : int1 ; jl 0x43d58d ; adc dword ptr [rsi + 3], edx ; ret
0x000000000043d5d9 : int1 ; jl 0x43d62a ; adc dword ptr [rsi + 7], edx ; ret
0x00000000004801d3 : int1 ; jmp 0x48019a
0x00000000004801d2 : int1 ; jmp 0x48019b
0x00000000004997b7 : int1 ; jmp rcx
0x0000000000433f3b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000043181f : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043c7f3 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000043db22 : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000004ba416 : int1 ; ret 0x5803
0x000000000043c7f7 : int1 ; sub eax, edx ; ret
0x00000000004a2d25 : iretd ; clc ; call qword ptr [rax - 0x1f000730]
0x00000000004c2501 : iretd ; std ; jmp qword ptr [rdx]
0x000000000041e652 : iretd ; sub al, byte ptr [rax] ; test rax, rax ; je 0x41e664 ; call rax
0x000000000040dbfe : ja 0x40dc23 ; ret
0x0000000000425d92 : ja 0x425da3 ; ret
0x000000000042b8b8 : ja 0x42b8b2 ; ret 0x7401
0x0000000000435303 : ja 0x435307 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000043a947 : ja 0x43a94d ; ret
0x000000000043a963 : ja 0x43a96d ; mov dword ptr [rdi], ecx ; ret
0x000000000043a9a4 : ja 0x43a9b3 ; mov qword ptr [rdi], rcx ; ret
0x000000000043aa29 : ja 0x43aa3d ; ret
0x000000000043aa7f : ja 0x43aa97 ; ret
0x000000000043ab01 : ja 0x43ab1d ; ret
0x000000000043af67 : ja 0x43af71 ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043af83 : ja 0x43af91 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043afd4 : ja 0x43afe7 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043b0b9 : ja 0x43b0d1 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000043b12f : ja 0x43b14b ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000043b1b1 : ja 0x43b1d1 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000043e92b : ja 0x43e933 ; ret
0x000000000043e97a : ja 0x43e983 ; ret
0x000000000043eb09 : ja 0x43eb43 ; ret
0x000000000043ebad : ja 0x43ebf7 ; add rsp, 0x60 ; pop rbx ; ret
0x000000000044efa6 : ja 0x44efb3 ; ret
0x0000000000459a27 : ja 0x459a0e ; mov eax, r8d ; ret
0x0000000000469e1d : ja 0x469e2b ; pop rbx ; ret
0x000000000046a1ab : ja 0x46a1b3 ; ret
0x000000000046a200 : ja 0x46a20b ; ret
0x000000000046a3b0 : ja 0x46a3db ; ret
0x0000000000476465 : ja 0x47648f ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x0000000000476a55 : ja 0x476a7f ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x0000000000476df1 : ja 0x476e1b ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x000000000047859e : ja 0x4785f0 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000484194 : ja 0x484121 ; ret 0x348
0x0000000000486b0b : ja 0x486a98 ; ret 0x348
0x00000000004a32fd : ja 0x4a32fa ; call qword ptr [rax]
0x00000000004a3301 : ja 0x4a32fe ; jmp qword ptr [rax]
0x00000000004a3321 : ja 0x4a3322 ; inc eax ; ja 0x4a3326 ; jmp rax
0x00000000004a3325 : ja 0x4a3322 ; jmp rax
0x00000000004a3329 : ja 0x4a332a ; inc dword ptr [rax] ; js 0x4a332e ; jmp qword ptr [rax]
0x00000000004ba484 : ja 0x4ba40b ; ret 0x48f
0x00000000004bd2c5 : ja 0x4bd2ca ; inc dword ptr [rax] ; jns 0x4bd2ce ; jmp rax
0x0000000000413218 : jae 0x413225 ; movzx eax, byte ptr [rax] ; ret
0x000000000041325a : jae 0x4132a3 ; sub rsi, rdi ; call 0x43f507
0x0000000000416aeb : jae 0x416b15 ; movzx eax, byte ptr [rax] ; ret
0x0000000000443784 : jae 0x443767 ; mov eax, 1 ; ret
0x000000000043e8cd : jae 0x4439a6 ; ret
0x0000000000473bbb : jae 0x473b65 ; xor eax, eax ; ret
0x00000000004a2941 : jae 0x4a2941 ; push qword ptr [rax] ; jne 0x4a2945 ; call rax
0x00000000004b8a42 : jae 0x4b8a24 ; jo 0x4b8ac0 ; mov ebp, 0xfb67d10d ; ret
0x00000000004b98de : jae 0x4b98b9 ; push rsi ; pop rdx ; je 0x4b98ae ; ret 0xacfc
0x00000000004bd2bd : jae 0x4bd2c2 ; inc dword ptr [rax + 0x75] ; std ; jmp qword ptr [rax]
0x00000000004be681 : jae 0x4be699 ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000004bfca1 : jae 0x4bfc9a ; call qword ptr [rsi]
0x00000000004c439f : jae 0x4c43ad ; ret
0x000000000042f82a : jb 0x42f83a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f97a : jb 0x42f98a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042faca : jb 0x42fada ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fc1a : jb 0x42fc2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fd6a : jb 0x42fd7a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042feba : jb 0x42feca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043000a : jb 0x43001a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043015a : jb 0x43016a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004302aa : jb 0x4302ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004303fa : jb 0x43040a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043054a : jb 0x43055a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043069a : jb 0x4306aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004307ea : jb 0x4307fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043093a : jb 0x43094a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430a8a : jb 0x430a9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431e21 : jb 0x431e0a ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000431e84 : jb 0x431e6d ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x0000000000431f28 : jb 0x431f34 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000434ede : jb 0x434eea ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043d2c7 : jb 0x43d2d7 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043d2d3 : jb 0x43d2e9 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043d2e3 : jb 0x43d2eb ; mov byte ptr [rdi], cl ; ret
0x000000000043d445 : jb 0x43d454 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043d450 : jb 0x43d463 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043d45d : jb 0x43d465 ; mov byte ptr [rdi], cl ; ret
0x00000000004641ac : jb 0x4641a5 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000049a453 : jb 0x49a45d ; add byte ptr [rax], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000049ff16 : jb 0x49feda ; and al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000414f3b : jbe 0x414edb ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000041d28a : jbe 0x41d277 ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004256d6 : jbe 0x425715 ; add rax, rdi ; ret
0x00000000004256e6 : jbe 0x425717 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000004256f6 : jbe 0x425717 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000425706 : jbe 0x425717 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000042b923 : jbe 0x42b93e ; lea rdi, qword ptr [rdi + 0x10] ; jne 0x42b919 ; ret
0x000000000045a1f2 : jbe 0x45a17f ; ret 0x8166
0x00000000004636da : jbe 0x463650 ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000004777af : jbe 0x4777ba ; ret
0x000000000049d2e6 : jbe 0x49d2f8 ; mov rdx, qword ptr [r15] ; mov rdi, rbp ; call rbx
0x00000000004a2b48 : jbe 0x4a2b12 ; clc ; call qword ptr [rsi]
0x00000000004a32ed : jbe 0x4a32ea ; call rax
0x00000000004a32e9 : jbe 0x4a32ea ; inc eax ; jbe 0x4a32ee ; call rax
0x00000000004a32f1 : jbe 0x4a32ee ; jmp rax
0x00000000004a32f9 : jbe 0x4a32fa ; inc dword ptr [rax] ; ja 0x4a32fe ; call qword ptr [rax]
0x00000000004c1051 : jbe 0x4c104b ; call qword ptr [rax]
0x00000000004c1050 : jbe 0x4c104c ; call qword ptr [rax]
0x00000000004008dd : je 0x4008f8 ; pop rbp ; mov edi, 0x6cab50 ; jmp rax
0x000000000040092b : je 0x400940 ; pop rbp ; mov edi, 0x6cab50 ; jmp rax
0x000000000040095a : je 0x40096a ; mov edi, 0x4bd9c0 ; call rax
0x00000000004009a8 : je 0x40099a ; call rax
0x0000000000400bf4 : je 0x400c22 ; adc byte ptr [rbx + 0x410c247c], cl ; call rsp
0x0000000000401663 : je 0x401677 ; xor esi, esi ; mov edi, 1 ; call rax
0x00000000004021a9 : je 0x4021bd ; lea rdi, qword ptr [rbx + 0x80] ; call rax
0x00000000004023f5 : je 0x402409 ; lea rdi, qword ptr [rbx + 0x80] ; call rax
0x0000000000402cd4 : je 0x402ce4 ; mov edi, 0x6cb060 ; call rax
0x0000000000402f23 : je 0x402f3d ; mov edi, 0x6cafe0 ; call rax
0x0000000000403117 : je 0x403131 ; mov edi, 0x6cafe0 ; call rax
0x0000000000403532 : je 0x403542 ; mov edi, 0x6cb0a0 ; call rax
0x000000000040357a : je 0x40358c ; mov edi, 0x6cb0a0 ; call r15
0x000000000040367a : je 0x40368a ; mov edi, 0x6cb0a0 ; call rax
0x000000000040f80e : je 0x40f81d ; mov eax, edx ; pop rbx ; ret
0x000000000040fbc5 : je 0x40fbe1 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040fd88 : je 0x40fdb3 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041432b : je 0x4142d1 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000414f03 : je 0x414ebd ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000415073 : je 0x41502d ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004151e5 : je 0x4151f2 ; ret
0x0000000000415217 : je 0x415226 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415d3a : je 0x415d45 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000004178dd : je 0x417afe ; mov rdx, rax ; jmp 0x417908
0x0000000000417eaa : je 0x417eb1 ; pop rbx ; ret
0x0000000000417f87 : je 0x417f8d ; call rax
0x0000000000418ad4 : je 0x418ae1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041d722 : je 0x41d74b ; call rax
0x000000000041e112 : je 0x41e13e ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000041e658 : je 0x41e65e ; call rax
0x0000000000420659 : je 0x420662 ; ret
0x00000000004208e2 : je 0x4208f7 ; mov eax, 0x16 ; ret
0x0000000000420931 : je 0x420943 ; lea rax, qword ptr [rip + 0x1a966] ; ret
0x0000000000422063 : je 0x42202d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000422d35 : je 0x422d3d ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000422da4 : je 0x422db6 ; lea rax, qword ptr [rip + 0x14853] ; ret
0x0000000000422f14 : je 0x422f1e ; bsf eax, edx ; ret
0x0000000000422f14 : je 0x422f1f ; bsf eax, edx ; ret
0x0000000000422fbd : je 0x422fd5 ; bsf rax, rdx ; ret
0x0000000000422fbd : je 0x422fd6 ; bsf rax, rdx ; ret
0x0000000000422f5c : je 0x422fe9 ; bsf rax, rdx ; ret
0x00000000004255cc : je 0x425623 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042573e : je 0x425751 ; lea rax, qword ptr [rip + 0x8449] ; ret
0x0000000000425d20 : je 0x425d32 ; lea rax, qword ptr [rip + 0x17647] ; ret
0x00000000004262d4 : je 0x4262e6 ; lea rax, qword ptr [rip + 0x12ad3] ; ret
0x00000000004287a3 : je 0x42876d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000042a333 : je 0x42a2fd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000042c3fa : je 0x42c451 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042c4b1 : je 0x42c4c9 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000042ef27 : je 0x42ef31 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043da5d : je 0x43da26 ; movzx eax, dl ; pop rbx ; ret
0x000000000043da35 : je 0x43da28 ; movzx eax, cl ; pop rbx ; ret
0x000000000043da5d : je 0x43da28 ; movzx eax, dl ; pop rbx ; ret
0x000000000043db6e : je 0x43db7c ; xor eax, eax ; ret
0x000000000043db69 : je 0x43db89 ; cmp eax, 2 ; je 0x43db81 ; xor eax, eax ; ret
0x000000000043dbbd : je 0x43dba3 ; ret
0x000000000043dca8 : je 0x43dcb8 ; mov edi, 0x6cb720 ; call rax
0x000000000043dcc0 : je 0x43dcd0 ; mov edi, 0x6cb720 ; call rax
0x000000000043e020 : je 0x43e001 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043ea28 : je 0x43ea7d ; add byte ptr [rax], al ; ret
0x000000000043f3ea : je 0x43f3f1 ; ret
0x000000000043f6c8 : je 0x43f6b0 ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000440730 : je 0x440742 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000441e99 : je 0x441e9e ; ret
0x0000000000441efd : je 0x441f02 ; ret
0x0000000000443493 : je 0x4434a3 ; mov edi, 0x6ca140 ; call rax
0x0000000000443621 : je 0x443631 ; mov edi, 0x6ca140 ; call rax
0x00000000004437a8 : je 0x4437b2 ; ret
0x00000000004437c4 : je 0x4437d9 ; mov dword ptr [rip + 0x2857cc], edx ; pop rbx ; ret
0x0000000000443fb7 : je 0x443fe3 ; sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x00000000004480b4 : je 0x4480e3 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000044ca58 : je 0x44ca63 ; pop rbx ; ret
0x000000000044ca53 : je 0x44ca68 ; cmp esi, 3 ; je 0x44ca68 ; pop rbx ; ret
0x000000000044cfe0 : je 0x44cff0 ; mov edi, 0x6cb720 ; call rax
0x000000000044d00f : je 0x44d027 ; mov edi, 0x6cb720 ; call rax
0x000000000044d110 : je 0x44d116 ; call rax
0x000000000044d16f : je 0x44d17f ; mov edi, 0x6cb720 ; call rax
0x000000000044d2e8 : je 0x44d2ff ; mov edi, 0x6cb720 ; call rax
0x000000000044d5c8 : je 0x44d5d8 ; mov edi, 0x6cb720 ; call rax
0x000000000044d6cc : je 0x44d6d2 ; call rax
0x000000000044e58b : je 0x44e591 ; call rax
0x000000000044eb4b : je 0x44eb53 ; ret
0x0000000000450122 : je 0x45014f ; and byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x0000000000462488 : je 0x4624b2 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000463116 : je 0x463166 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000463115 : je 0x463167 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000463efc : je 0x463f02 ; ret
0x0000000000463f2a : je 0x463f8c ; pop rbp ; pop r12 ; ret
0x0000000000463fcf : je 0x464031 ; pop rbp ; pop r12 ; ret
0x000000000046410d : je 0x464118 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000464151 : je 0x46415c ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000464d2c : je 0x464d55 ; bsf rax, rdx ; ret
0x0000000000464d2c : je 0x464d56 ; bsf rax, rdx ; ret
0x0000000000464cbc : je 0x464d69 ; bsf rax, rdx ; ret
0x0000000000465ca9 : je 0x465cc9 ; mov cl, dl ; and cl, 0xf ; je 0x465cd9 ; ret
0x0000000000465cb0 : je 0x465cd2 ; ret
0x0000000000465cc5 : je 0x465ce6 ; add rax, 2 ; ret
0x000000000046604b : je 0x466074 ; call rbx
0x00000000004660f3 : je 0x46611c ; call rbx
0x0000000000466240 : je 0x46626f ; and byte ptr [rbp - 0x73], cl ; jl 0x4661d7 ; add al, 0xe8 ; ret
0x00000000004664d8 : je 0x4664e5 ; test edx, edx ; jne 0x4664d7 ; ret
0x00000000004664d7 : je 0x4664e6 ; test edx, edx ; jne 0x4664d8 ; ret
0x000000000046a735 : je 0x46a724 ; ret
0x000000000046d21a : je 0x46d1a4 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x0000000000470324 : je 0x470334 ; mov edi, 0x6ca100 ; call rax
0x0000000000474318 : je 0x474328 ; mov edi, 0x6ca140 ; call rax
0x0000000000474340 : je 0x474350 ; mov edi, 0x6ca140 ; call rax
0x00000000004743b6 : je 0x4743c6 ; mov edi, 0x6ca140 ; call rax
0x00000000004758db : je 0x4758ef ; mov rdi, qword ptr [rbp - 0x88] ; call rax
0x00000000004758fe : je 0x47594a ; shl rdx, 5 ; add rdx, rax ; jmp 0x475921
0x0000000000475ecc : je 0x475ef1 ; pop rbx ; mov edi, 0x6ca140 ; jmp rax
0x0000000000475e83 : je 0x475ef7 ; mov edi, 0x6ca140 ; call rax
0x0000000000475ee7 : je 0x475f50 ; pop rbx ; ret
0x0000000000476024 : je 0x47602b ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000047621f : je 0x476226 ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000047783e : je 0x477809 ; mov edi, 0x6ca140 ; call rax
0x000000000047781f : je 0x47784d ; or byte ptr [rdi + 0x6ca140], bh ; call rax
0x0000000000477986 : je 0x477992 ; ret
0x000000000047799c : je 0x4779ac ; mov edi, 0x6ca140 ; call rax
0x0000000000479dea : je 0x479df5 ; mov eax, edx ; pop rbx ; ret
0x000000000047a6e2 : je 0x47a6f6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047b34c : je 0x47b37b ; js 0x47b3a1 ; lea edi, dword ptr [rsp + 0x78] ; call r12
0x000000000047ddb8 : je 0x47ddc8 ; mov edi, 0x6ca140 ; call rax
0x000000000047dde4 : je 0x47ddf4 ; mov edi, 0x6ca140 ; call rax
0x000000000047e08a : je 0x47e09e ; mov rax, qword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x0000000000486dbb : je 0x486d48 ; ret 0x348
0x000000000048753b : je 0x48754b ; mov edi, 0x6ca140 ; call rax
0x0000000000487562 : je 0x487572 ; mov edi, 0x6ca140 ; call rax
0x00000000004875e1 : je 0x4875f1 ; mov edi, 0x6ca140 ; call rax
0x000000000048760a : je 0x48761a ; mov edi, 0x6ca140 ; call rax
0x0000000000493743 : je 0x49370d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004956f3 : je 0x4956bd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000499525 : je 0x499503 ; ret
0x000000000049b7f0 : je 0x49b7a8 ; add rsp, 0x18 ; ret
0x000000000049b7a7 : je 0x49b819 ; add rsp, 0x18 ; ret
0x000000000049d6e3 : je 0x49d6f4 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49d6f9 ; ret
0x000000000049d89d : je 0x49d907 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049dd18 : je 0x49dd23 ; ret
0x000000000049df8a : je 0x49df9a ; mov edi, 0x6ca100 ; call rax
0x000000000049e04b : je 0x49e05b ; mov edi, 0x6ca100 ; call rax
0x000000000049fcee : je 0x49fcf9 ; call rax
0x00000000004b8ba8 : je 0x4b8b73 ; xor al, 0xd8 ; ret
0x00000000004b8de7 : je 0x4b8de4 ; jmp 0x4b8dbe
0x00000000004b98e2 : je 0x4b98aa ; ret 0xacfc
0x00000000004be67a : je 0x4be688 ; ret
0x00000000004bfd89 : je 0x4bfd82 ; call qword ptr [rdx]
0x00000000004c2634 : je 0x4c2689 ; add byte ptr [rax], al ; cwde ; cmp edi, eax ; call qword ptr [rax]
0x00000000004c4b34 : je 0x4c4bae ; add byte ptr [rax], al ; pop rax ; adc al, 0xfa ; jmp rdx
0x00000000004c5e34 : je 0x4c5dc1 ; add byte ptr [rax], al ; mov dh, dl ; cli ; jmp rsi
0x0000000000425da2 : jg 0x425df4 ; adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000425ec7 : jg 0x425ee0 ; jne 0x425eb7 ; mov rax, rdi ; ret
0x000000000042b927 : jg 0x42b93e ; jne 0x42b915 ; ret
0x0000000000431409 : jg 0x43145c ; ret
0x000000000043148f : jg 0x4314da ; ret
0x0000000000431609 : jg 0x43165c ; ret 0x894c
0x000000000043168f : jg 0x4316da ; ret 0x894c
0x0000000000431e20 : jg 0x431e9c ; loopne 0x431df1 ; jp 0x431ead ; jp 0x431e20 ; ret
0x0000000000431ecc : jg 0x431edd ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000433f18 : jg 0x433f69 ; loope 0x433f17 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000433f8f : jg 0x433fda ; ret 0xff2
0x0000000000433fa8 : jg 0x433ff9 ; loop 0x433fa7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043401f : jg 0x43406a ; ret
0x0000000000434038 : jg 0x434089 ; jrcxz 0x434037 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004340c8 : jg 0x434119 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434148 : jg 0x434199 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004341c8 : jg 0x434219 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434248 : jg 0x434299 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004342c8 : jg 0x434319 ; call 0x4fc252ca
0x0000000000434348 : jg 0x434399 ; jmp 0x4fc2534a
0x00000000004344c8 : jg 0x434519 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434548 : jg 0x434599 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004345d8 : jg 0x434629 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434658 : jg 0x4346a9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004346cc : jg 0x4346d7 ; ret
0x0000000000434726 : jg 0x434739 ; ret
0x0000000000434721 : jg 0x434771 ; psllq mm1, qword ptr [rdi] ; jg 0x43473e ; ret
0x0000000000434796 : jg 0x4347a9 ; ret
0x0000000000434806 : jg 0x434819 ; ret
0x0000000000434801 : jg 0x434851 ; or eax, 0xf7f0ff3 ; ret
0x0000000000434876 : jg 0x434889 ; ret
0x0000000000434871 : jg 0x4348c1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004348e6 : jg 0x4348f9 ; ret
0x00000000004348e1 : jg 0x434931 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000434956 : jg 0x434969 ; ret
0x0000000000434951 : jg 0x4349a1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004349c6 : jg 0x4349d9 ; ret
0x00000000004349c1 : jg 0x434a11 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000434a36 : jg 0x434a49 ; ret
0x0000000000434a31 : jg 0x434a81 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000434aa6 : jg 0x434ab9 ; ret
0x0000000000434b16 : jg 0x434b29 ; ret
0x0000000000434b86 : jg 0x434b99 ; ret
0x0000000000434b81 : jg 0x434bd1 ; add eax, 0xf7f0ff3 ; ret
0x0000000000434bf6 : jg 0x434c09 ; ret
0x0000000000434bf1 : jg 0x434c41 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000434c66 : jg 0x434c79 ; ret
0x0000000000434c61 : jg 0x434cb1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000434cd6 : jg 0x434ce9 ; ret
0x0000000000434cd1 : jg 0x434d21 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000434d46 : jg 0x434d59 ; ret
0x0000000000434d41 : jg 0x434d91 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000434e84 : jg 0x434e95 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000434e98 : jg 0x434ea9 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000043530a : jg 0x435306 ; ret
0x000000000043aa16 : jg 0x43aa21 ; ret
0x000000000043aa26 : jg 0x43aa34 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043aa3a : jg 0x43aa49 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043aa59 : jg 0x43aa67 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043aa69 : jg 0x43aa77 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043aa79 : jg 0x43aa8a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043aa9a : jg 0x43aaa9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043aaba : jg 0x43aac9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043aada : jg 0x43aae9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043aafa : jg 0x43ab0c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043ab3d : jg 0x43ab4f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043ab5d : jg 0x43ab6f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043ab7b : jg 0x43ab8b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043ab9b : jg 0x43abab ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043abbb : jg 0x43abcb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043abdb : jg 0x43abeb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043b0a6 : jg 0x43b0b5 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043b0b6 : jg 0x43b0c8 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000043b0e9 : jg 0x43b0fb ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000043b109 : jg 0x43b11b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000043b22f : jg 0x43b28f ; or eax, 0x1c478d48 ; ret
0x000000000043d2a2 : jg 0x43d2b2 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043d343 : jg 0x43d394 ; loopne 0x43d398 ; sub eax, edx ; vzeroupper ; ret
0x000000000043d427 : jg 0x43d437 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043d41d : jg 0x43d43d ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043d9f0 : jg 0x43da2d ; ret 0x2b77
0x000000000043fabd : jg 0x43faa2 ; std ; dec dword ptr [rax - 0x75] ; jge 0x43facd ; call rbx
0x00000000004491cf : jg 0x44915c ; ret 0x5c77
0x0000000000472afd : jg 0x472ac9 ; std ; inc dword ptr [rbp - 0x76b48a40] ; ret
0x0000000000476469 : jg 0x476497 ; call r11
0x0000000000476a59 : jg 0x476a87 ; call r11
0x0000000000476df5 : jg 0x476e23 ; call r11
0x000000000047e7f1 : jg 0x47e7f7 ; add byte ptr [rcx], bh ; ret
0x0000000000490f04 : jg 0x490f11 ; ret 0x5488
0x00000000004c3cb9 : jg 0x4c3cb6 ; call rdx
0x00000000004c58dd : jg 0x4c58e5 ; add byte ptr [rax], ah ; mov edi, edx ; call rsi
0x000000000040e01e : jge 0x40e023 ; call r14
0x000000000043f6db : jge 0x43f6df ; call rbx
0x000000000043f802 : jge 0x43f806 ; call rbx
0x000000000043f810 : jge 0x43f814 ; call rbx
0x000000000043f945 : jge 0x43f949 ; call rbx
0x000000000043fab5 : jge 0x43fab9 ; call rbx
0x000000000043fac3 : jge 0x43fac7 ; call rbx
0x000000000043ff16 : jge 0x43fee1 ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000004412d3 : jge 0x4412d7 ; call rbx
0x00000000004413fb : jge 0x4413ff ; call rbx
0x000000000044153e : jge 0x441542 ; call rbx
0x000000000044163f : jge 0x441643 ; call rbx
0x000000000044165b : jge 0x44165f ; call rbx
0x00000000004532d4 : jge 0x45330b ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000465a54 : jge 0x465a56 ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000465e86 : jge 0x465e8b ; call r12
0x00000000004694cf : jge 0x4694fb ; add byte ptr es:[rax - 0x7d], cl ; ret
0x000000000049bbbf : jge 0x49bbbc ; leave ; ret
0x000000000049bc57 : jge 0x49bc5a ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049bceb : jge 0x49bce8 ; leave ; ret
0x000000000049bd37 : jge 0x49bd3a ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049be00 : jge 0x49be03 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049be8f : jge 0x49be8c ; leave ; ret
0x000000000049bee0 : jge 0x49bee3 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049e2f0 : jge 0x49e305 ; call r12
0x00000000004a339d : jge 0x4a339a ; call rax
0x00000000004a33a5 : jge 0x4a33a2 ; call qword ptr [rax]
0x00000000004a33a1 : jge 0x4a33a2 ; push rax ; jge 0x4a33a6 ; call qword ptr [rax]
0x00000000004c3bb9 : jge 0x4c3bb6 ; call rdi
0x00000000004c573d : jge 0x4c5745 ; add byte ptr [rax], al ; jle 0x4c5743 ; call rax
0x0000000000400bf8 : jl 0x400c22 ; or al, 0x41 ; call rsp
0x0000000000400c4c : jl 0x400c7a ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000004140db : jl 0x414126 ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041aaf5 : jl 0x41ab20 ; or byte ptr [rax + 1], cl ; ret 0x8948
0x000000000041ac2c : jl 0x41ac57 ; or byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000434e04 : jl 0x434e53 ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000434e40 : jl 0x434e8f ; adc dword ptr [rcx - 1], ebx ; ret
0x000000000043503e : jl 0x43508d ; adc dword ptr [rcx - 1], edi ; ret
0x00000000004351a5 : jl 0x4351f4 ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000435307 : jl 0x435356 ; adc dword ptr [rdi - 8], edi ; ret
0x000000000043d3dc : jl 0x43d42b ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043d3fd : jl 0x43d44c ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043d410 : jl 0x43d45f ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043d4e5 : jl 0x43d534 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043d53d : jl 0x43d58c ; adc dword ptr [rsi + 3], edx ; ret
0x000000000043d5da : jl 0x43d629 ; adc dword ptr [rsi + 7], edx ; ret
0x000000000043eb34 : jl 0x43eb60 ; test al, 2 ; cmove eax, edx ; ret
0x000000000043eb34 : jl 0x43eb61 ; test al, 2 ; cmove eax, edx ; ret
0x000000000043fb70 : jl 0x43fb9e ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000004412c0 : jl 0x44128c ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000446986 : jl 0x4469b4 ; adc byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x00000000004472e9 : jl 0x447317 ; adc byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x00000000004476cf : jl 0x4476fd ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x00000000004480b9 : jl 0x4480e3 ; call r15
0x0000000000448460 : jl 0x44848e ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000449179 : jl 0x4491a7 ; xor byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x000000000044a085 : jl 0x44a0b3 ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000044c638 : jl 0x44c663 ; sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x000000000044f122 : jl 0x44f14d ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x0000000000451e2c : jl 0x451e57 ; and byte ptr [rax + 1], cl ; ret
0x00000000004584c8 : jl 0x458492 ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000045c0ac : jl 0x45c0d7 ; and byte ptr [rax + 1], cl ; ret
0x0000000000463e75 : jl 0x463e11 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000466245 : jl 0x4661d2 ; add al, 0xe8 ; ret
0x0000000000472b09 : jl 0x472b38 ; cmp byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r9
0x000000000047ae7d : jl 0x47aea7 ; js 0x47aec6 ; call rsp
0x000000000047b192 : jl 0x47b1bc ; js 0x47b1db ; call rsp
0x000000000047b351 : jl 0x47b37b ; js 0x47b39a ; call rsp
0x000000000047b559 : jl 0x47b583 ; js 0x47b5a2 ; call rsp
0x000000000049a212 : jl 0x49a23d ; sub byte ptr [rax - 0x7d], cl ; ret
0x00000000004a2e4c : jl 0x4a2e6a ; stc ; jmp qword ptr [rdx]
0x00000000004a3355 : jl 0x4a3352 ; call qword ptr [rax]
0x00000000004a3359 : jl 0x4a3356 ; jmp qword ptr [rax]
0x00000000004a3379 : jl 0x4a3376 ; call rax
0x00000000004a3381 : jl 0x4a337e ; call qword ptr [rax]
0x00000000004a337d : jl 0x4a337e ; push rax ; jl 0x4a3382 ; call qword ptr [rax]
0x00000000004c4c3c : jl 0x4c4cb7 ; add byte ptr [rax], al ; sbb byte ptr [rax], 0xfa ; jmp qword ptr [rax]
0x00000000004c573c : jl 0x4c57c2 ; add byte ptr [rax], al ; add byte ptr [rsi - 6], bh ; call rax
0x0000000000422f5e : jle 0x422f67 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000422f5e : jle 0x422f68 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000044caa2 : jle 0x44cab5 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000047beed : jle 0x47befb ; ret
0x00000000004a33bd : jle 0x4a33ba ; call rax
0x00000000004a33c5 : jle 0x4a33c2 ; call qword ptr [rax]
0x00000000004a33c1 : jle 0x4a33c2 ; push rax ; jle 0x4a33c6 ; call qword ptr [rax]
0x00000000004c5741 : jle 0x4c573f ; call rax
0x0000000000444146 : jmp 0x400362
0x00000000004007bd : jmp 0x400782
0x0000000000401041 : jmp 0x400fa1
0x00000000004020d2 : jmp 0x4020e8
0x0000000000411973 : jmp 0x41187b
0x0000000000417774 : jmp 0x4176cf
0x0000000000417964 : jmp 0x41798e
0x000000000041a6a7 : jmp 0x419eec
0x000000000041a6b8 : jmp 0x41a52b
0x000000000041d461 : jmp 0x41d48c
0x00000000004209e4 : jmp 0x4209aa
0x0000000000420b38 : jmp 0x420afd
0x000000000042c50c : jmp 0x42c4d2
0x000000000042c658 : jmp 0x42c61d
0x000000000043cfee : jmp 0x43cfb4
0x000000000043d0bf : jmp 0x43d085
0x000000000043d12e : jmp 0x43d0f4
0x000000000043ec43 : jmp 0x43ebb6
0x000000000043f4e3 : jmp 0x43f486
0x00000000004432dc : jmp 0x442dbf
0x0000000000444e53 : jmp 0x444e19
0x00000000004452ce : jmp 0x445293
0x000000000044ea8f : jmp 0x44e6b1
0x000000000044f921 : jmp 0x44f92b
0x0000000000456113 : jmp 0x4560ef
0x000000000045b8b2 : jmp 0x45b8db
0x0000000000461ca4 : jmp 0x461c69
0x0000000000461ca3 : jmp 0x461c6a
0x000000000046443b : jmp 0x464401
0x000000000046443a : jmp 0x464402
0x000000000046554b : jmp 0x4653a1
0x000000000046960b : jmp 0x4695d0
0x0000000000469f00 : jmp 0x469ec6
0x000000000046cdab : jmp 0x46cd71
0x000000000046de50 : jmp 0x46db21
0x0000000000479a32 : jmp 0x479a84
0x000000000047cb9c : jmp 0x47cbae
0x000000000047bf05 : jmp 0x47e6cb
0x000000000047f542 : jmp 0x47f594
0x0000000000482186 : jmp 0x47f8be
0x00000000004801d4 : jmp 0x480199
0x0000000000482f35 : jmp 0x482efa
0x0000000000484a5b : jmp 0x484a20
0x000000000048673a : jmp 0x4866ff
0x00000000004b80aa : jmp 0x4b80e9
0x00000000004b8de9 : jmp 0x4b8dbc
0x00000000004b9de0 : jmp 0x4b9d74
0x00000000004b9ddf : jmp 0x4b9d75
0x000000000043434a : jmp 0x4fc25348
0x0000000000434349 : jmp 0x4fc25349
0x000000000046891b : jmp 0xffffffffbf09126b
0x00000000004785a1 : jmp 0xffffffffc3570ef6
0x00000000004a31ff : jmp qword ptr [rax + 0x10fff910]
0x00000000004a31f7 : jmp qword ptr [rax + 0x20fff911]
0x00000000004a31ef : jmp qword ptr [rax + 0x20fff912]
0x00000000004a31e7 : jmp qword ptr [rax + 0x20fff913]
0x00000000004a31df : jmp qword ptr [rax + 0x20fff914]
0x00000000004a2fd3 : jmp qword ptr [rax + 0x20fff916]
0x00000000004a2bc3 : jmp qword ptr [rax + 0x40fff8c4]
0x00000000004a2a77 : jmp qword ptr [rax - 0x3f000758]
0x00000000004a2a57 : jmp qword ptr [rax - 0x3f000761]
0x000000000047fcdb : jmp qword ptr [rax*8 + 0x4bc2f0]
0x000000000041c3c9 : jmp qword ptr [rax]
0x0000000000482b5e : jmp qword ptr [rbx + rcx*4 + 1]
0x00000000004c133b : jmp qword ptr [rbx]
0x00000000004bf4b3 : jmp qword ptr [rcx]
0x00000000004ba6a4 : jmp qword ptr [rdi]
0x00000000004a2e4f : jmp qword ptr [rdx]
0x000000000047d8c9 : jmp qword ptr [rsi + 0xf]
0x000000000045b856 : jmp qword ptr [rsi]
0x0000000000420c19 : jmp r10
0x00000000004760d1 : jmp r11
0x0000000000499590 : jmp r8
0x000000000042f210 : jmp r9
0x00000000004a2a5f : jmp rax
0x00000000004760d2 : jmp rbx
0x000000000041fb9e : jmp rcx
0x00000000004c4e1b : jmp rdi
0x0000000000420c1a : jmp rdx
0x00000000004a2de3 : jmp rsi
0x000000000045f782 : jmp rsp
0x00000000004005db : jne 0x4005e0 ; ret
0x000000000040dba4 : jne 0x40db82 ; ret
0x000000000040fa6b : jne 0x40fa81 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410dec : jne 0x410df3 ; pop rbx ; ret
0x00000000004135b5 : jne 0x4135c2 ; ret
0x0000000000414d31 : jne 0x414d23 ; ret
0x0000000000415a41 : jne 0x415a58 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000415d92 : jne 0x415d7d ; pop rbx ; ret
0x0000000000415dcc : jne 0x415dc5 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000416686 : jne 0x41667b ; ret
0x0000000000417962 : jne 0x417976 ; jmp 0x417990
0x000000000041d100 : jne 0x41d0c3 ; ret
0x000000000041d45f : jne 0x41d474 ; jmp 0x41d48e
0x0000000000420b84 : jne 0x420b96 ; lea rax, qword ptr [rip + 3] ; ret
0x0000000000425689 : jne 0x4256e5 ; xor rax, rax ; ret
0x0000000000425649 : jne 0x425709 ; xor rax, rax ; ret
0x000000000042572a : jne 0x42573d ; lea rax, qword ptr [rip + 0x1d] ; ret
0x0000000000425e0a : jne 0x425df3 ; ret
0x0000000000425f73 : jne 0x425e5f ; mov rax, rdi ; ret
0x0000000000425ec9 : jne 0x425eb5 ; mov rax, rdi ; ret
0x00000000004263f0 : jne 0x426402 ; lea rax, qword ptr [rip + 0x67] ; ret
0x0000000000426443 : jne 0x426455 ; lea rax, qword ptr [rip + 4] ; ret
0x000000000042b9e8 : jne 0x42b8c0 ; ret
0x000000000042b929 : jne 0x42b913 ; ret
0x000000000042db7c : jne 0x42db66 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000042f16d : jne 0x42f197 ; xor eax, eax ; ret
0x000000000042e761 : jne 0x42f19b ; xor eax, eax ; ret
0x000000000042e789 : jne 0x42f1a7 ; xor eax, eax ; ret
0x000000000043b395 : jne 0x43b326 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043b367 : jne 0x43b326 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043b366 : jne 0x43b327 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043caf4 : jne 0x43cd08 ; xor eax, eax ; ret
0x000000000043ccf9 : jne 0x43cd19 ; xor eax, eax ; ret
0x000000000043cba1 : jne 0x43cd1d ; xor eax, eax ; ret
0x000000000043cd11 : jne 0x43cd1e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000043ce21 : jne 0x43ce12 ; ret
0x000000000043ced1 : jne 0x43cec2 ; ret
0x000000000043d041 : jne 0x43d036 ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000043d191 : jne 0x43d186 ; sub rax, 1 ; ret
0x000000000043fe88 : jne 0x43fe70 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000441c8a : jne 0x441c88 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000441cfa : jne 0x441cf8 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000441e42 : jne 0x441e39 ; pop rdx ; pop r10 ; ret
0x0000000000442013 : jne 0x44200d ; xor eax, eax ; leave ; ret
0x00000000004452cc : jne 0x4452a3 ; jmp 0x445295
0x0000000000451741 : jne 0x45172d ; mov rax, rsi ; ret
0x00000000004517c5 : jne 0x4517a5 ; mov rax, rsi ; ret
0x000000000045b8b0 : jne 0x45b8c3 ; jmp 0x45b8dd
0x0000000000463051 : jne 0x463043 ; ret
0x0000000000464c23 : jne 0x464c2e ; xor rax, rax ; ret
0x0000000000465df5 : jne 0x465e02 ; mov dword ptr [r9 + 8], esi ; ret
0x000000000046649b : jne 0x466456 ; mov rax, rdx ; ret
0x00000000004664dc : jne 0x4664d3 ; ret
0x000000000046a773 : jne 0x46a725 ; xor eax, eax ; ret
0x000000000046a727 : jne 0x46a77b ; ret
0x000000000046a76f : jne 0x46a77d ; test ecx, ecx ; jne 0x46a729 ; xor eax, eax ; ret
0x00000000004734aa : jne 0x473450 ; mov eax, dword ptr [rsi + 4] ; ret
0x0000000000473498 : jne 0x473473 ; ret
0x00000000004735b7 : jne 0x4735ca ; mov rax, qword ptr [rip + 0x2587b0] ; ret
0x0000000000473600 : jne 0x4735d3 ; ret
0x0000000000475e16 : jne 0x475e53 ; ret
0x0000000000475e15 : jne 0x475e54 ; ret
0x0000000000477c63 : jne 0x477c76 ; add rsp, 0x38 ; ret
0x0000000000477d05 : jne 0x477d18 ; xor eax, eax ; add rsp, 0x48 ; ret
0x0000000000477ddd : jne 0x477e20 ; xor eax, eax ; add rsp, 0x68 ; ret
0x0000000000477e95 : jne 0x477ea8 ; xor eax, eax ; add rsp, 0x48 ; ret
0x000000000047a060 : jne 0x47a076 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047d818 : jne 0x47d7d5 ; nop word ptr [rax + rax] ; call rbx
0x0000000000490f60 : jne 0x490f72 ; lea rax, qword ptr [rip + 0x67] ; ret
0x0000000000490fb3 : jne 0x490fc5 ; lea rax, qword ptr [rip + 4] ; ret
0x000000000049b8b3 : jne 0x49b8ac ; mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x000000000049b917 : jne 0x49b90c ; mov qword ptr [rcx], rdx ; add rsp, 8 ; ret
0x000000000049bbbb : jne 0x49bbb4 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049bce7 : jne 0x49bce0 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049be8b : jne 0x49be84 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049c204 : jne 0x49c1fb ; xor eax, eax ; add rsp, 8 ; ret
0x000000000049c264 : jne 0x49c25b ; xor eax, eax ; add rsp, 8 ; ret
0x000000000049d6e9 : jne 0x49d6f3 ; ret
0x000000000049d704 : jne 0x49d713 ; ret
0x000000000049d924 : jne 0x49d933 ; ret
0x000000000049dd23 : jne 0x49dd32 ; mov eax, 8 ; ret
0x000000000049e115 : jne 0x49e103 ; pop rbx ; ret
0x000000000049e160 : jne 0x49e140 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000049e285 : jne 0x49e26b ; pop rbx ; ret
0x00000000004a2945 : jne 0x4a2941 ; call rax
0x00000000004bd2c1 : jne 0x4bd2c2 ; jmp qword ptr [rax]
0x00000000004bd2c0 : jne 0x4bd2c3 ; jmp qword ptr [rax]
0x000000000042574b : jno 0x4257af ; add dword ptr [rax], eax ; ret
0x000000000042ea1e : jno 0x42ea2d ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000434e00 : jno 0x434e09 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000043503a : jno 0x435043 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000004351a1 : jno 0x4351b2 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000435306 : jno 0x43538a ; adc qword ptr [rdi - 8], rdi ; ret
0x000000000043facb : jno 0x43fab0 ; std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000465df3 : jno 0x465e02 ; jne 0x465e04 ; mov dword ptr [r9 + 8], esi ; ret
0x0000000000465df9 : jno 0x465e06 ; ret
0x0000000000478494 : jno 0x4784e6 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004c4b35 : jno 0x4c4b3d ; add byte ptr [rax + 0x14], bl ; cli ; jmp rdx
0x00000000004a2b74 : jnp 0x4a2b3d ; clc ; dec dword ptr [rbx] ; ret
0x00000000004a3351 : jnp 0x4a3352 ; inc dword ptr [rax] ; jl 0x4a3356 ; call qword ptr [rax]
0x00000000004b88c5 : jnp 0x4b8882 ; ret
0x00000000004c54ed : jnp 0x4c54f5 ; add al, ah ; push rcx ; cli ; jmp rsp
0x00000000004007b7 : jns 0x4006ab ; jmp 0x400788
0x0000000000434e07 : jns 0x434e0a ; ret
0x0000000000435041 : jns 0x435044 ; ret
0x00000000004351a8 : jns 0x4351b3 ; ret
0x000000000046ea0c : jns 0x46ea1a ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8545
0x000000000049b7a4 : jns 0x49b7e7 ; add byte ptr [rdx + rbp*2 + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004b79ce : jns 0x4b7964 ; ret 0xf869
0x00000000004b79cd : jns 0x4b7965 ; ret 0xf869
0x00000000004b9dde : jns 0x4b9e35 ; jmp 0x4b9d76
0x00000000004bd2c9 : jns 0x4bd2ca ; jmp rax
0x00000000004127f3 : jo 0x412846 ; mov edx, ebx ; mov rsi, rbp ; call 0x43ea79
0x0000000000413434 : jo 0x413485 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000425cea : jo 0x425d3e ; add r11b, sil ; ret
0x00000000004630ca : jo 0x4630e2 ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004665ec : jo 0x466600 ; xchg eax, ebp ; ret 0x8b4c
0x0000000000479d3a : jo 0x479cc7 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000479d39 : jo 0x479cc8 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x00000000004a297c : jo 0x4a290e ; clc ; inc eax ; mov bh, al ; call qword ptr [rax]
0x00000000004a292c : jo 0x4a299c ; clc ; call qword ptr [rax]
0x00000000004a2c10 : jo 0x4a2bf9 ; clc ; push qword ptr [rax] ; loop 0x4a2c16 ; call qword ptr [rax]
0x00000000004a2cb0 : jo 0x4a2c98 ; clc ; push qword ptr [rax] ; loope 0x4a2cb6 ; call qword ptr [rax]
0x00000000004a2d40 : jo 0x4a2d21 ; clc ; inc eax ; fprem ; call qword ptr [rax]
0x00000000004a2d54 : jo 0x4a2d27 ; clc ; inc eax ; retf ; clc ; call qword ptr [rax]
0x00000000004b8a44 : jo 0x4b8abe ; mov ebp, 0xfb67d10d ; ret
0x00000000004bd318 : jo 0x4bd2b7 ; std ; jmp qword ptr [rax]
0x00000000004bd32c : jo 0x4bd37b ; std ; inc eax ; std ; call qword ptr [rax]
0x00000000004c48d0 : jo 0x4c48da ; cli ; jmp rdx
0x0000000000425e55 : jp 0x425e4f ; ret 0x7401
0x0000000000431e26 : jp 0x431e1a ; ret
0x0000000000431e89 : jp 0x431e7d ; ret
0x0000000000431e1f : jp 0x431ea9 ; jb 0x431e0c ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000431e24 : jp 0x431ea9 ; jp 0x431e1c ; ret
0x0000000000464439 : jp 0x46447e ; jmp 0x464403
0x000000000047abbe : jp 0x47abd3 ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000487c35 : jp 0x487c3e ; dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000041d22c : jrcxz 0x41d260 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000043403a : jrcxz 0x434035 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434039 : jrcxz 0x434036 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000441e93 : jrcxz 0x441e58 ; cmp r11d, 0xa ; je 0x441ea4 ; ret
0x000000000045a916 : jrcxz 0x45a98f ; ret
0x000000000045c928 : jrcxz 0x45c922 ; ret 0xf40
0x00000000004a2c39 : jrcxz 0x4a2c35 ; call rax
0x00000000004a2c99 : jrcxz 0x4a2c99 ; push qword ptr [rax] ; in eax, -8 ; call qword ptr [rax]
0x00000000004a2cb9 : jrcxz 0x4a2cb9 ; push rax ; in al, -8 ; call rax
0x00000000004b7825 : jrcxz 0x4b787f ; ret
0x00000000004c6151 : jrcxz 0x4c614f ; jmp qword ptr [rdx]
0x0000000000409956 : js 0x409970 ; mov qword ptr [rsp], rax ; call 0x405c58
0x0000000000409967 : js 0x409979 ; mov qword ptr [rsp], rax ; call 0x405c58
0x000000000040997d : js 0x40999f ; mov qword ptr [rsp], rax ; call 0x405c58
0x000000000040998e : js 0x4099a8 ; mov qword ptr [rsp], rax ; call 0x405c58
0x000000000040999f : js 0x4099b1 ; mov qword ptr [rsp], rax ; call 0x405c58
0x00000000004099b5 : js 0x4099d7 ; mov qword ptr [rsp], rax ; call 0x405c58
0x00000000004099c6 : js 0x4099e0 ; mov qword ptr [rsp], rax ; call 0x405c58
0x00000000004099d7 : js 0x4099e9 ; mov qword ptr [rsp], rax ; call 0x405c58
0x00000000004099ed : js 0x409a0f ; mov qword ptr [rsp], rax ; call 0x405c58
0x00000000004099fe : js 0x409a18 ; mov qword ptr [rsp], rax ; call 0x405c58
0x0000000000409a0f : js 0x409a21 ; mov qword ptr [rsp], rax ; call 0x405c58
0x0000000000409a25 : js 0x409a47 ; mov qword ptr [rsp], rax ; call 0x405c58
0x0000000000409a36 : js 0x409a50 ; mov qword ptr [rsp], rax ; call 0x405c58
0x0000000000441c8f : js 0x441cef ; pop rbp ; ret
0x0000000000441cff : js 0x441d5f ; pop rbp ; ret
0x0000000000447b2e : js 0x447b7f ; mov edi, dword ptr [rsp + 0x28] ; call r14
0x000000000044a718 : js 0x44a769 ; mov edi, dword ptr [rsp + 0x30] ; call r14
0x000000000044b578 : js 0x44b5c9 ; mov edi, dword ptr [rsp + 0x30] ; call r14
0x00000000004708f2 : js 0x4708fb ; pop rbx ; ret
0x0000000000479d3d : js 0x479d4b ; ret
0x000000000047ae7f : js 0x47aec4 ; call rsp
0x000000000047b194 : js 0x47b1d9 ; call rsp
0x000000000047b313 : js 0x47b358 ; call rsp
0x000000000047b353 : js 0x47b398 ; call rsp
0x000000000047b34e : js 0x47b39f ; lea edi, dword ptr [rsp + 0x78] ; call r12
0x000000000047b516 : js 0x47b55b ; call rsp
0x000000000047b55b : js 0x47b5a0 ; call rsp
0x000000000049bae5 : js 0x49baf2 ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000049baf2 : js 0x49bafe ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004a332d : js 0x4a332a ; jmp qword ptr [rax]
0x00000000004a3341 : js 0x4a3342 ; inc eax ; js 0x4a3346 ; jmp rax
0x00000000004a3345 : js 0x4a3342 ; jmp rax
0x00000000004c2bd9 : js 0x4c2bd5 ; call qword ptr [rcx]
0x00000000004c3058 : js 0x4c2ff7 ; clc ; jmp rbx
0x00000000004c3318 : js 0x4c32e6 ; std ; call qword ptr [rbx]
0x000000000041f3fd : lahf ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x000000000045beea : lahf ; cld ; dec dword ptr [rax - 0x39] ; ret 0xffb0
0x00000000004b9f03 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004734ab : lahf ; mov eax, dword ptr [rsi + 4] ; ret
0x000000000042af8d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fbe8 : lahf ; ret
0x000000000048549c : lahf ; ret 0x2941
0x000000000040fe8e : lahf ; ret 0x3841
0x000000000043fbee : lahf ; ret 0x3845
0x00000000004b775d : lahf ; ret 0x871e
0x0000000000483671 : lahf ; ret 0xb60f
0x0000000000486108 : lahf ; ret 0xd129
0x000000000048617f : lahf ; ret 0xd629
0x0000000000486091 : lahf ; ret 0xd729
0x000000000043d9e9 : lahf ; ret 0xea81
0x000000000049ae46 : lahf ; ret 0xf45
0x000000000042b61d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000411293 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x00000000004878fa : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044c1d3 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000450ff2 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004110dd : lcall ptr [rbx + 0x5d] ; ret
0x0000000000473f36 : lcall ptr [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x000000000041f673 : lcall ptr [rbx - 0x3d] ; mov eax, 0xfffffffe ; pop rbx ; ret
0x00000000004346c6 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004137c4 : lds r11d, ptr [r11 + 0x5d] ; pop r12 ; ret
0x0000000000415ddb : lea eax, dword ptr [r8 - 1] ; ret
0x000000000046a79b : lea eax, dword ptr [rax + 0x493afe7e] ; cmove eax, ecx ; ret
0x000000000043f50f : lea eax, dword ptr [rax + rax] ; ret
0x00000000004256b4 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x00000000004256c4 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x0000000000425694 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x0000000000415ddc : lea eax, dword ptr [rax - 1] ; ret
0x00000000004c6715 : lea eax, dword ptr [rax] ; add byte ptr [rax], ch ; sbb bl, bh ; call qword ptr [rax]
0x000000000046502d : lea eax, dword ptr [rcx + rsi] ; ret
0x000000000043d044 : lea eax, dword ptr [rcx - 1] ; ret
0x000000000043b0bc : lea eax, dword ptr [rdi + 0x10] ; ret
0x000000000043b0d1 : lea eax, dword ptr [rdi + 0x11] ; ret
0x000000000043b0ef : lea eax, dword ptr [rdi + 0x12] ; ret
0x000000000043b10f : lea eax, dword ptr [rdi + 0x13] ; ret
0x000000000043b132 : lea eax, dword ptr [rdi + 0x14] ; ret
0x000000000043b151 : lea eax, dword ptr [rdi + 0x15] ; ret
0x000000000043b171 : lea eax, dword ptr [rdi + 0x16] ; ret
0x000000000043b191 : lea eax, dword ptr [rdi + 0x17] ; ret
0x000000000043b1b4 : lea eax, dword ptr [rdi + 0x18] ; ret
0x000000000043b1d9 : lea eax, dword ptr [rdi + 0x19] ; ret
0x000000000043b1f7 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x000000000043b217 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x000000000043b233 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x000000000043b253 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x000000000043b273 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x000000000043b293 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x000000000043b00d : lea eax, dword ptr [rdi + 0xa] ; ret
0x000000000043b02d : lea eax, dword ptr [rdi + 0xb] ; ret
0x000000000043b04f : lea eax, dword ptr [rdi + 0xc] ; ret
0x000000000043b06f : lea eax, dword ptr [rdi + 0xd] ; ret
0x000000000043b08f : lea eax, dword ptr [rdi + 0xe] ; ret
0x000000000043b0a9 : lea eax, dword ptr [rdi + 0xf] ; ret
0x000000000043af57 : lea eax, dword ptr [rdi + 1] ; ret
0x000000000043af6a : lea eax, dword ptr [rdi + 2] ; ret
0x000000000043af75 : lea eax, dword ptr [rdi + 3] ; ret
0x000000000043af88 : lea eax, dword ptr [rdi + 4] ; ret
0x000000000043af9d : lea eax, dword ptr [rdi + 5] ; ret
0x000000000043afbb : lea eax, dword ptr [rdi + 6] ; ret
0x000000000043afc7 : lea eax, dword ptr [rdi + 7] ; ret
0x000000000043afda : lea eax, dword ptr [rdi + 8] ; ret
0x000000000043afef : lea eax, dword ptr [rdi + 9] ; ret
0x00000000004256e9 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x00000000004256f9 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x00000000004255e3 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x000000000042c4b7 : lea eax, dword ptr [rdi + rax] ; ret
0x0000000000464f29 : lea eax, dword ptr [rdi + rsi] ; ret
0x00000000004777a8 : lea eax, dword ptr [rdi - 1] ; cmp rax, 0xfd ; jbe 0x4777c1 ; ret
0x000000000043af43 : lea eax, dword ptr [rdi] ; ret
0x000000000043a52d : lea eax, dword ptr [rdx + 0xa] ; ret
0x000000000043a54d : lea eax, dword ptr [rdx + 0xb] ; ret
0x000000000043a56f : lea eax, dword ptr [rdx + 0xc] ; ret
0x000000000043a58f : lea eax, dword ptr [rdx + 0xd] ; ret
0x000000000043a5af : lea eax, dword ptr [rdx + 0xe] ; ret
0x000000000043a43f : lea eax, dword ptr [rdx + 0xf] ; ret
0x000000000043a467 : lea eax, dword ptr [rdx + 1] ; ret
0x000000000043a47d : lea eax, dword ptr [rdx + 2] ; ret
0x000000000043a495 : lea eax, dword ptr [rdx + 3] ; ret
0x000000000043a4ab : lea eax, dword ptr [rdx + 4] ; ret
0x000000000043a4bd : lea eax, dword ptr [rdx + 5] ; ret
0x000000000043a4db : lea eax, dword ptr [rdx + 6] ; ret
0x000000000043a3e7 : lea eax, dword ptr [rdx + 7] ; ret
0x000000000043a4ed : lea eax, dword ptr [rdx + 8] ; ret
0x000000000043a50d : lea eax, dword ptr [rdx + 9] ; ret
0x0000000000415dce : lea eax, dword ptr [rdx + rdi] ; ret
0x000000000043dabc : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000043a455 : lea eax, dword ptr [rdx] ; ret
0x00000000004262d7 : lea eax, dword ptr [rip + 0x12ad3] ; ret
0x0000000000422da7 : lea eax, dword ptr [rip + 0x14853] ; ret
0x0000000000425749 : lea eax, dword ptr [rip + 0x15e71] ; ret
0x0000000000425d23 : lea eax, dword ptr [rip + 0x17647] ; ret
0x0000000000420934 : lea eax, dword ptr [rip + 0x1a966] ; ret
0x000000000042572d : lea eax, dword ptr [rip + 0x1d] ; ret
0x00000000004263f3 : lea eax, dword ptr [rip + 0x67] ; ret
0x0000000000425741 : lea eax, dword ptr [rip + 0x8449] ; ret
0x0000000000420b87 : lea eax, dword ptr [rip + 3] ; ret
0x0000000000426446 : lea eax, dword ptr [rip + 4] ; ret
0x00000000004c4995 : lea eax, dword ptr [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000044be10 : lea eax, dword ptr [rsp + 0x88] ; call r15
0x000000000047b50f : lea ebx, dword ptr [rdx + rax] ; mov qword ptr [rsp + 0x78], rbx ; call r12
0x000000000040fcaf : lea ebx, dword ptr [rdx - 0x76b7ffd5] ; ret
0x00000000004b8011 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000049c015 : lea ebx, dword ptr [rsp + rcx*8] ; mov rsi, qword ptr [rbx] ; call r14
0x0000000000465f30 : lea ecx, dword ptr [rax + 1] ; call rbx
0x0000000000468f92 : lea ecx, dword ptr [rax] ; mov rdx, rax ; jmp 0x468fa3
0x000000000042f267 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x000000000043a7de : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x0000000000451fcf : lea ecx, dword ptr [rbx + rdx] ; add rdx, r13 ; call qword ptr [r10 + rax*8]
0x00000000004635b1 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000479a30 : lea ecx, dword ptr [rdx] ; jmp 0x479a86
0x000000000047f540 : lea ecx, dword ptr [rdx] ; jmp 0x47f596
0x000000000046a517 : lea ecx, dword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000004644e7 : lea ecx, dword ptr [rsp + 0x10] ; call rbx
0x00000000004645c0 : lea ecx, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000466045 : lea ecx, dword ptr [rsp + 0x20] ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000466360 : lea ecx, dword ptr [rsp + 0x28] ; lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x000000000046625e : lea ecx, dword ptr [rsp + 0x60] ; lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x000000000046ef76 : lea edi, dword ptr [rax + 0x6ca1e0] ; call rdx
0x00000000004021ac : lea edi, dword ptr [rbx + 0x80] ; call rax
0x000000000040e09c : lea edi, dword ptr [rbx + rsi] ; call rax
0x0000000000425ec6 : lea edi, dword ptr [rdi + 0x10] ; jne 0x425eb8 ; mov rax, rdi ; ret
0x000000000042b926 : lea edi, dword ptr [rdi + 0x10] ; jne 0x42b916 ; ret
0x000000000047ae7c : lea edi, dword ptr [rsp + 0x78] ; call r12
0x000000000047b222 : lea edi, dword ptr [rsp + 0x80] ; call r12
0x000000000047b02f : lea edi, dword ptr [rsp + 0x88] ; call r14
0x000000000041668b : lea edx, dword ptr [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000464790 : lea edx, dword ptr [rbp - 0x40] ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x000000000042f334 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000046433d : lea edx, dword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000420c16 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x000000000042f728 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00000000004634f1 : lea edx, dword ptr [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000004644e2 : lea edx, dword ptr [rsp + 0x18] ; lea r9, qword ptr [rsp + 0x10] ; call rbx
0x00000000004660ed : lea edx, dword ptr [rsp + 0x28] ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000466750 : lea edx, dword ptr [rsp + 0x48] ; mov rdi, r12 ; call rbx
0x000000000044bd36 : lea edx, dword ptr [rsp + 0x80] ; call r12
0x000000000048555c : lea esi, dword ptr [rax - 0x77000005] ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000048c395 : lea esi, dword ptr [rax*8 + 0x4b74a8] ; call 0x478669
0x0000000000466263 : lea esi, dword ptr [rsp + 0x30] ; call rbx
0x0000000000465f2b : lea esi, dword ptr [rsp + 0x30] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000046604a : lea esi, dword ptr [rsp + 0x40] ; call rbx
0x000000000046a8bd : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000040f4d1 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000420c15 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000040e09b : lea r15, qword ptr [rbx + r14] ; call rax
0x000000000044be0f : lea r8, qword ptr [rsp + 0x88] ; call r15
0x000000000042f266 : lea r9, qword ptr [r11 + r9] ; jmp r9
0x0000000000479a2f : lea r9, qword ptr [rdx] ; jmp 0x479a87
0x000000000047f53f : lea r9, qword ptr [rdx] ; jmp 0x47f597
0x00000000004644e6 : lea r9, qword ptr [rsp + 0x10] ; call rbx
0x00000000004645bf : lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000004256b3 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00000000004256c3 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000425693 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000046502c : lea rax, qword ptr [rcx + rsi] ; ret
0x000000000043d043 : lea rax, qword ptr [rcx - 1] ; ret
0x000000000043b0bb : lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000043b0d0 : lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000043b0ee : lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000043b10e : lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000043b131 : lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000043b150 : lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000043b170 : lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000043b190 : lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000043b1b3 : lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000043b1d8 : lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000043b1f6 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000043b216 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000043b232 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000043b252 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000043b272 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000043b292 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000043b00c : lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043b02c : lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043b04e : lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000043b06e : lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000043b08e : lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000043b0a8 : lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043af56 : lea rax, qword ptr [rdi + 1] ; ret
0x000000000043af69 : lea rax, qword ptr [rdi + 2] ; ret
0x000000000043af74 : lea rax, qword ptr [rdi + 3] ; ret
0x000000000043af87 : lea rax, qword ptr [rdi + 4] ; ret
0x000000000043af9c : lea rax, qword ptr [rdi + 5] ; ret
0x000000000043afba : lea rax, qword ptr [rdi + 6] ; ret
0x000000000043afc6 : lea rax, qword ptr [rdi + 7] ; ret
0x000000000043afd9 : lea rax, qword ptr [rdi + 8] ; ret
0x000000000043afee : lea rax, qword ptr [rdi + 9] ; ret
0x00000000004256e8 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000004256f8 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00000000004255e2 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000042c4b6 : lea rax, qword ptr [rdi + rax] ; ret
0x0000000000464f28 : lea rax, qword ptr [rdi + rsi] ; ret
0x000000000043af42 : lea rax, qword ptr [rdi] ; ret
0x000000000043a52c : lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000043a54c : lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000043a56e : lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000043a58e : lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000043a5ae : lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000043a43e : lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000043a466 : lea rax, qword ptr [rdx + 1] ; ret
0x000000000043a47c : lea rax, qword ptr [rdx + 2] ; ret
0x000000000043a494 : lea rax, qword ptr [rdx + 3] ; ret
0x000000000043a4aa : lea rax, qword ptr [rdx + 4] ; ret
0x000000000043a4bc : lea rax, qword ptr [rdx + 5] ; ret
0x000000000043a4da : lea rax, qword ptr [rdx + 6] ; ret
0x000000000043a3e6 : lea rax, qword ptr [rdx + 7] ; ret
0x000000000043a4ec : lea rax, qword ptr [rdx + 8] ; ret
0x000000000043a50c : lea rax, qword ptr [rdx + 9] ; ret
0x000000000043a454 : lea rax, qword ptr [rdx] ; ret
0x00000000004262d6 : lea rax, qword ptr [rip + 0x12ad3] ; ret
0x0000000000422da6 : lea rax, qword ptr [rip + 0x14853] ; ret
0x0000000000425748 : lea rax, qword ptr [rip + 0x15e71] ; ret
0x0000000000425d22 : lea rax, qword ptr [rip + 0x17647] ; ret
0x0000000000420933 : lea rax, qword ptr [rip + 0x1a966] ; ret
0x000000000042572c : lea rax, qword ptr [rip + 0x1d] ; ret
0x00000000004263f2 : lea rax, qword ptr [rip + 0x67] ; ret
0x0000000000425740 : lea rax, qword ptr [rip + 0x8449] ; ret
0x0000000000420b86 : lea rax, qword ptr [rip + 3] ; ret
0x0000000000426445 : lea rax, qword ptr [rip + 4] ; ret
0x000000000049c014 : lea rbx, qword ptr [r12 + rcx*8] ; mov rsi, qword ptr [rbx] ; call r14
0x000000000043a7dd : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000465f2f : lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000468f91 : lea rcx, qword ptr [rax + r12] ; mov rdx, rax ; jmp 0x468fa4
0x000000000046a516 : lea rcx, qword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000046ef75 : lea rdi, qword ptr [rax + 0x6ca1e0] ; call rdx
0x00000000004021ab : lea rdi, qword ptr [rbx + 0x80] ; call rax
0x0000000000425ec5 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x425eb9 ; mov rax, rdi ; ret
0x000000000042b925 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x42b917 ; ret
0x000000000047ae7b : lea rdi, qword ptr [rsp + 0x78] ; call r12
0x000000000047b221 : lea rdi, qword ptr [rsp + 0x80] ; call r12
0x000000000047b02e : lea rdi, qword ptr [rsp + 0x88] ; call r14
0x000000000042f333 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000042f727 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x000000000046674f : lea rdx, qword ptr [rsp + 0x48] ; mov rdi, r12 ; call rbx
0x000000000044bd35 : lea rdx, qword ptr [rsp + 0x80] ; call r12
0x0000000000466262 : lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000465f2a : lea rsi, qword ptr [rsp + 0x30] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000466049 : lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x000000000046a8bc : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000487786 : leave ; cmove rax, rdx ; ret
0x000000000043ce20 : leave ; jne 0x43ce13 ; ret
0x000000000043ced0 : leave ; jne 0x43cec3 ; ret
0x000000000043d190 : leave ; jne 0x43d187 ; sub rax, 1 ; ret
0x000000000046649a : leave ; jne 0x466457 ; mov rax, rdx ; ret
0x000000000046a772 : leave ; jne 0x46a726 ; xor eax, eax ; ret
0x0000000000499588 : leave ; movsxd rax, dword ptr [r8 + rcx*4] ; add r8, rax ; jmp r8
0x0000000000444040 : leave ; not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x0000000000400a0e : leave ; ret
0x000000000049a092 : leave ; sbb ah, byte ptr [rbx] ; add byte ptr [rax], cl ; ret
0x00000000004c3319 : leave ; std ; call qword ptr [rbx]
0x00000000004141a1 : les r9d, ptr [r8 + 0x29] ; ret 0x8948
0x00000000004bd3c7 : ljmp ptr [rax] ; ret 0xfffd
0x00000000004bd85f : ljmp ptr [rcx - 0x2a] ; std ; jmp qword ptr [rax]
0x000000000040f930 : lock add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000479d25 : lock add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000042df6e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047f3bf : lock inc dword ptr [rdx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000422a70 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043c7a0 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000048ac9e : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a2a85 : lodsb al, byte ptr [rsi] ; clc ; jmp qword ptr [rax]
0x000000000047797f : lodsb al, byte ptr [rsi] ; mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x477999 ; ret
0x00000000004ba69d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004bd379 : lodsb al, byte ptr [rsi] ; std ; call rax
0x000000000046a774 : lodsb al, byte ptr [rsi] ; xor eax, eax ; ret
0x00000000004c5b59 : lodsd eax, dword ptr [rsi] ; cli ; call rdx
0x0000000000494900 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000478602 : lodsd eax, dword ptr [rsi] ; ret
0x000000000043f3e4 : lodsd eax, dword ptr [rsi] ; sub byte ptr [rax], al ; test rax, rax ; je 0x43f3f7 ; ret
0x0000000000417765 : loop 0x417728 ; pop rsp ; ret 0x4b
0x00000000004192ec : loop 0x4192af ; pop rsp ; ret 0x4b
0x000000000041b990 : loop 0x41b953 ; pop rsp ; ret 0x4b
0x000000000042db7d : loop 0x42dbb5 ; shr byte ptr [rcx], 0xc8 ; ret
0x0000000000433faa : loop 0x433fa5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000433fa9 : loop 0x433fa6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000045be9b : loop 0x45be28 ; ret
0x000000000047571e : loop 0x4756e1 ; ret
0x0000000000475902 : loop 0x47590d ; add rdx, rax ; jmp 0x47591d
0x0000000000475e11 : loop 0x475e7e ; and eax, 0x38754000 ; ret
0x00000000004a2bd5 : loop 0x4a2bd5 ; inc dword ptr [rax - 0x1c] ; clc ; jmp qword ptr [rax]
0x00000000004a2bf5 : loop 0x4a2bf5 ; push qword ptr [rax] ; in al, -8 ; call qword ptr [rax]
0x00000000004a2c15 : loop 0x4a2c11 ; call qword ptr [rax]
0x00000000004a2c35 : loop 0x4a2c35 ; push rax ; jrcxz 0x4a2c39 ; call rax
0x00000000004baa3a : loop 0x4baa8f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000041dda2 : loope 0x41dda8 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000041dda1 : loope 0x41dda9 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000042bec2 : loope 0x42bf19 ; or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x0000000000433f1a : loope 0x433f15 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000433f19 : loope 0x433f16 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043b4cb : loope 0x43b4d5 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043dbbe : loope 0x43dbb5 ; ret
0x000000000044388f : loope 0x44389a ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x0000000000465cae : loope 0x465cc3 ; je 0x465cd4 ; ret
0x000000000046a0dc : loope 0x46a069 ; ret 0xf631
0x000000000046e00f : loope 0x46e03b ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000478497 : loope 0x4784e9 ; mov dword ptr [rdi], ecx ; ret
0x00000000004784c8 : loope 0x47851b ; mov dword ptr [rdi - 8], ecx ; ret
0x000000000047853d : loope 0x478590 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000049e286 : loope 0x49e2e5 ; ret
0x00000000004a2cb5 : loope 0x4a2cb1 ; call qword ptr [rax]
0x0000000000400a0b : loopne 0x400a11 ; add cl, cl ; ret
0x0000000000400d10 : loopne 0x400d27 ; mov dword ptr [r8], eax ; pop rbx ; ret
0x000000000040f620 : loopne 0x40f62b ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x000000000040f9a6 : loopne 0x40f9c3 ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000040fa86 : loopne 0x40faa3 ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000412bb9 : loopne 0x412c20 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000412c67 : loopne 0x412cce ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004147b6 : loopne 0x41481a ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000416e85 : loopne 0x416ee9 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041ffab : loopne 0x42000d ; pop rbp ; pop r12 ; ret
0x0000000000425bfd : loopne 0x425c61 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000425ce0 : loopne 0x425cda ; add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x0000000000425c92 : loopne 0x425cf6 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042c17d : loopne 0x42c1d5 ; mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042f781 : loopne 0x42f798 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f780 : loopne 0x42f799 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f8d1 : loopne 0x42f8e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f8d0 : loopne 0x42f8e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042fa21 : loopne 0x42fa38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042fa20 : loopne 0x42fa39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042fb71 : loopne 0x42fb88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042fb70 : loopne 0x42fb89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042fcc1 : loopne 0x42fcd8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042fcc0 : loopne 0x42fcd9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042fe11 : loopne 0x42fe28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042fe10 : loopne 0x42fe29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ff61 : loopne 0x42ff78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ff60 : loopne 0x42ff79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004300af : loopne 0x4300c6 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004300ae : loopne 0x4300c7 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430201 : loopne 0x430218 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430200 : loopne 0x430219 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430351 : loopne 0x430368 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430350 : loopne 0x430369 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004304a1 : loopne 0x4304b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004304a0 : loopne 0x4304b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004305f1 : loopne 0x430608 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004305f0 : loopne 0x430609 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430741 : loopne 0x430758 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430740 : loopne 0x430759 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430891 : loopne 0x4308a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430890 : loopne 0x4308a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004309e1 : loopne 0x4309f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004309e0 : loopne 0x4309f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431e22 : loopne 0x431def ; jp 0x431eab ; jp 0x431e1e ; ret
0x000000000043d345 : loopne 0x43d396 ; sub eax, edx ; vzeroupper ; ret
0x000000000043d344 : loopne 0x43d397 ; sub eax, edx ; vzeroupper ; ret
0x000000000043eabc : loopne 0x43eb10 ; add byte ptr [rax], al ; ret
0x0000000000441c1a : loopne 0x441c6d ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000441ef8 : loopne 0x441f0d ; cmp eax, 4 ; je 0x441f07 ; ret
0x0000000000443892 : loopne 0x4438f2 ; pop rbp ; ret
0x0000000000459e0d : loopne 0x459d9a ; ret 0xe680
0x00000000004613db : loopne 0x46143f ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000461793 : loopne 0x4617f5 ; pop rbp ; pop r12 ; ret
0x00000000004617bd : loopne 0x46181f ; pop rbp ; pop r12 ; ret
0x0000000000461e7b : loopne 0x461edd ; pop rbp ; pop r12 ; ret
0x0000000000461eed : loopne 0x461f4f ; pop rbp ; pop r12 ; ret
0x00000000004634be : loopne 0x463457 ; mov eax, 0xffffffff ; ret
0x0000000000477fdd : loopne 0x477fe6 ; sub eax, 1 ; ret
0x000000000047a239 : loopne 0x47a1e6 ; add byte ptr [r15 + 0x6cb9c4], r15b ; call rdx
0x000000000047a3d0 : loopne 0x47a37d ; add byte ptr [r15 + 0x6cb9c4], r15b ; call rdx
0x000000000047a494 : loopne 0x47a454 ; insb byte ptr [rdi], dx ; add cl, ch ; ret
0x00000000004a2a80 : loopne 0x4a2a33 ; clc ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; clc ; jmp qword ptr [rax]
0x00000000004a2b98 : loopne 0x4a2b5a ; clc ; jmp rax
0x00000000004a2b98 : loopne 0x4a2b5e ; clc ; jmp rax
0x00000000004a2b9c : loopne 0x4a2b5f ; clc ; jmp rax
0x00000000004a2c04 : loopne 0x4a2bf2 ; clc ; jmp rax
0x00000000004a2c08 : loopne 0x4a2bf8 ; clc ; jmp rax
0x00000000004a2c11 : loopne 0x4a2c11 ; push qword ptr [rax] ; loop 0x4a2c15 ; call qword ptr [rax]
0x00000000004a2c31 : loopne 0x4a2c2d ; call qword ptr [rax]
0x00000000004a2c51 : loopne 0x4a2c4d ; jmp rax
0x00000000004a2ca4 : loopne 0x4a2c91 ; clc ; jmp rax
0x00000000004a2ca4 : loopne 0x4a2c95 ; clc ; jmp rax
0x00000000004a2ca8 : loopne 0x4a2c97 ; clc ; jmp rax
0x00000000004a2fd0 : loopne 0x4a2fe7 ; stc ; jmp qword ptr [rax + 0x20fff916]
0x00000000004a3328 : loopne 0x4a33a8 ; stc ; inc dword ptr [rax] ; js 0x4a332f ; jmp qword ptr [rax]
0x00000000004b8014 : loopne 0x4b7ff4 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004bd35c : loopne 0x4bd39e ; std ; call qword ptr [rax]
0x00000000004bd358 : loopne 0x4bd3bc ; std ; jmp rax
0x00000000004bd358 : loopne 0x4bd3c0 ; std ; jmp rax
0x00000000004c54f0 : loopne 0x4c5546 ; cli ; jmp rsp
0x00000000004c63a0 : loopne 0x4c63af ; sti ; jmp rsi
0x00000000004c7400 : loopne 0x4c7405 ; cld ; jmp qword ptr [rax]
0x00000000004c76c0 : loopne 0x4c76cd ; cld ; call qword ptr [rdx]
0x00000000004c76f0 : loopne 0x4c76fd ; cld ; call qword ptr [rdx]
0x00000000004c7720 : loopne 0x4c772d ; cld ; call qword ptr [rdx]
0x00000000004b7a2a : mov ah, 0x13 ; ret
0x00000000004a2f24 : mov ah, 0x1d ; stc ; inc dword ptr [rbp + rbx - 7] ; call rsp
0x00000000004c0674 : mov ah, 0x2c ; add byte ptr [rax], al ; mov cl, dl ; cmc ; call rdx
0x00000000004c1e74 : mov ah, 0x44 ; add byte ptr [rax], al ; test al, 1 ; clc ; call rsp
0x00000000004b7ed0 : mov ah, 0xa5 ; ret
0x000000000046b4e8 : mov ah, 0xe8 ; ret 0xfd34
0x00000000004b7824 : mov ah, bl ; push rsi ; ret
0x00000000004996da : mov al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000049b9d3 : mov al, 0 ; add byte ptr [rax], al ; ret
0x0000000000457c58 : mov al, 0 ; add cl, ch ; ret
0x00000000004a31c0 : mov al, 0x10 ; stc ; jmp qword ptr [rax]
0x00000000004a31d8 : mov al, 0x15 ; stc ; jmp qword ptr [rax]
0x00000000004c20f0 : mov al, 0x18 ; clc ; call qword ptr [rax]
0x00000000004a2fc8 : mov al, 0x19 ; stc ; inc dword ptr [rax + 0x19] ; stc ; jmp rax
0x00000000004a2db0 : mov al, 0x1c ; stc ; inc dword ptr [rax + 0x1c] ; stc ; call rax
0x00000000004a29a4 : mov al, 0x47 ; clc ; inc eax ; clc ; call rax
0x000000000049b7f1 : mov al, 0x48 ; add esp, 0x18 ; ret
0x00000000004a32e8 : mov al, 0x76 ; stc ; inc eax ; jbe 0x4a32ef ; call rax
0x00000000004a3378 : mov al, 0x7c ; stc ; call rax
0x00000000004a339c : mov al, 0x7d ; stc ; call rax
0x00000000004a33bc : mov al, 0x7e ; stc ; call rax
0x00000000004bd414 : mov al, 0xc8 ; std ; jmp qword ptr [rax]
0x00000000004b9cd6 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x00000000004bf045 : mov al, 1 ; add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000004c511d : mov al, 1 ; add bl, byte ptr [rax + 0x41180e0a] ; ret
0x0000000000438cc6 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000438ce4 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000043a450 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000438ca0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000040f92f : mov al, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000438cb0 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000434ce1 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000044c5db : mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x000000000044c15e : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x3a76
0x000000000043b368 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x0000000000467a30 : mov bh, 0x84 ; adc bl, byte ptr [rsi - 0x43] ; add byte ptr [r8 - 0x77], cl ; ret
0x00000000004b8d04 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000004bd38d : mov bh, 0xfd ; call qword ptr [rax]
0x00000000004c1f68 : mov bh, 1 ; ret
0x00000000004ba413 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004a2981 : mov bh, al ; call qword ptr [rax]
0x0000000000446108 : mov bh, dl ; add byte ptr [rax - 0x7f], cl ; ret 0x4fe0
0x000000000043cc5e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000046649c : mov bl, 0x48 ; mov eax, edx ; ret
0x000000000047d819 : mov bl, 0x66 ; nop dword ptr [rax + rax] ; call rbx
0x00000000004b9de3 : mov bl, 0x8e ; ret 0xdcd9
0x00000000004c32d9 : mov bl, 0xf8 ; call qword ptr [rdi]
0x00000000004bd385 : mov bl, 0xfd ; call qword ptr [rax - 0x2f00024b]
0x000000000041c220 : mov byte ptr [r8 + rbx], r9b ; mov rax, r8 ; pop rbx ; ret
0x0000000000411abc : mov byte ptr [r8 - 0x75], r9b ; or cl, byte ptr [rax - 0x7d] ; ret
0x000000000041c221 : mov byte ptr [rax + rbx], cl ; mov rax, r8 ; pop rbx ; ret
0x0000000000446828 : mov byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000411abd : mov byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x000000000047b032 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call r14
0x000000000044be13 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call r15
0x00000000004474b4 : mov byte ptr [rcx + 0x4a], dl ; add al, ch ; ret
0x00000000004c0fc8 : mov byte ptr [rcx], al ; ret
0x000000000043b0b8 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000043aa28 : mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043b12e : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000043aa7e : mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043b1b0 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000043ab00 : mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043af66 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043a946 : mov byte ptr [rdi + 2], dh ; ret
0x000000000043af82 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043a962 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000043a9a3 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000430dab : mov byte ptr [rdi - 1], dl ; ret
0x0000000000431f2c : mov byte ptr [rdi], cl ; ret
0x000000000043af40 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000043a920 : mov byte ptr [rdi], dh ; ret
0x0000000000434d53 : mov byte ptr [rdi], dl ; ret
0x000000000043a479 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x0000000000438cc9 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000043a4a7 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x0000000000438ce7 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000043a452 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000438ca2 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000440344 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x000000000049a090 : mov byte ptr [rip + 0x231ac9], 8 ; ret
0x0000000000400964 : mov byte ptr [rip + 0x2ca1f5], 1 ; ret
0x00000000004517c3 : mov byte ptr [rsi], al ; jne 0x4517a7 ; mov rax, rsi ; ret
0x000000000045173f : mov byte ptr [rsi], dl ; jne 0x45172f ; mov rax, rsi ; ret
0x0000000000479f27 : mov ch, 0 ; add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x00000000004b7822 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000004b8b63 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004b9eff : mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004ba8aa : mov ch, 0xab ; ret
0x00000000004bd389 : mov ch, 0xfd ; call rax
0x000000000042eae6 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042564b : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000417967 : mov cl, 0x35 ; ret
0x000000000041d464 : mov cl, 0x35 ; xchg eax, esi ; ret
0x00000000004a2aec : mov cl, 0xc1 ; clc ; push qword ptr [rcx] ; ret 0xfff8
0x00000000004a2af4 : mov cl, 0xc2 ; clc ; inc dword ptr [rcx - 0x3d] ; clc ; call rcx
0x000000000044ea5b : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000428665 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x0000000000420c14 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000004b9cd2 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x0000000000431f2a : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000465cab : mov cl, dl ; and cl, 0xf ; je 0x465cd7 ; ret
0x00000000004c0678 : mov cl, dl ; cmc ; call rdx
0x00000000004b9f8c : mov cs, edi ; ret 0x8b36
0x000000000042aa9e : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x000000000043a940 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000411f9e : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004152a0 : mov dh, 0 ; pop rbx ; ret
0x000000000041321b : mov dh, 0 ; ret
0x0000000000434d51 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000425824 : mov dh, 0x16 ; sub eax, edx ; ret
0x000000000040dba0 : mov dh, 0x17 ; test dl, dl ; jne 0x40db86 ; ret
0x00000000004a2df8 : mov dh, 0x1b ; stc ; inc dword ptr [rsi + 0x1b] ; stc ; call rsi
0x000000000046152e : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000040dad5 : mov dh, 0x40 ; or dword ptr [rax + rax*8 - 0x38b7938c], eax ; ret 0xfff0
0x0000000000461b63 : mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000043c831 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000043c821 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000043c7f1 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000043c811 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000043c801 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00000000004481b0 : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000004997b4 : mov dh, 0x4c ; add ecx, esi ; jmp rcx
0x00000000004b8cc2 : mov dh, 0x4e ; ret 0x474c
0x000000000046cf25 : mov dh, 0x53 ; add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x0000000000462109 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000043c835 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x000000000043c825 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x000000000043c7f5 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x000000000043c805 : mov dh, 0x56 ; sub eax, edx ; ret
0x000000000045c967 : mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045c8ea : mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x000000000046da47 : mov dh, 0x87 ; adc eax, 0x89000003 ; ret 0xe8c0
0x000000000044e36f : mov dh, 0xb2 ; fcom dword ptr [rdi + 0x4a] ; add byte ptr [rax - 0x77], cl ; ret 0x8840
0x000000000047fcd9 : mov dh, 0xc0 ; jmp qword ptr [rax*8 + 0x4bc2f0]
0x000000000044ecfd : mov dh, 0xc0 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000047a5fd : mov dh, 0xc0 ; neg eax ; ret
0x000000000047a3a7 : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046a2d6 : mov dh, 0xc0 ; ret
0x000000000043da38 : mov dh, 0xc1 ; pop rbx ; ret
0x000000000043da60 : mov dh, 0xc2 ; pop rbx ; ret
0x00000000004a2b3c : mov dh, 0xc3 ; clc ; inc dword ptr [rsi - 0x3c] ; clc ; call rsi
0x00000000004140de : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b9f04 : mov dh, 0xc7 ; ret 0xe71f
0x000000000042584a : mov dh, 0xd2 ; sub eax, edx ; ret
0x000000000049aaaf : mov dh, 0xdb ; movsxd rax, dword ptr [r8 + r11*4] ; add rax, r8 ; jmp rax
0x0000000000421fc1 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042dbc4 : mov dh, 0xe ; sub eax, ecx ; ret
0x0000000000465e82 : mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000042088c : mov dh, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x000000000049c53a : mov dh, 1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000414f3e : mov dh, 2 ; pop rbx ; ret
0x0000000000411fb1 : mov dh, 2 ; ret
0x000000000042dbc1 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000425821 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000421fc4 : mov dh, 7 ; sub eax, ecx ; ret
0x000000000040f8f4 : mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000043dbbc : mov dh, byte ptr [rcx - 0xd] ; ret
0x00000000004c5e38 : mov dh, dl ; cli ; jmp rsi
0x00000000004bd85c : mov dh, dl ; std ; ljmp ptr [rcx - 0x2a] ; std ; jmp qword ptr [rax]
0x00000000004a2e5c : mov dl, 0x1e ; stc ; inc dword ptr [rdx + 0x1e] ; stc ; call rdx
0x000000000044e370 : mov dl, 0xd8 ; push rdi ; add byte ptr [rax - 0x77], cl ; ret 0x8840
0x000000000049d79a : mov dl, 0xe5 ; and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x000000000047a081 : mov dl, 0xf9 ; dec dword ptr [rax + 0x39] ; ret
0x0000000000430e30 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004c7d08 : mov dl, dh ; cld ; call qword ptr [rax]
0x000000000047bf14 : mov dword ptr [0x2d0], eax ; ret
0x000000000047abbc : mov dword ptr [r10 + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000418b03 : mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x0000000000469603 : mov dword ptr [r12], 1 ; jmp 0x4695d8
0x0000000000400d12 : mov dword ptr [r8], eax ; pop rbx ; ret
0x0000000000465df7 : mov dword ptr [r9 + 8], esi ; ret
0x0000000000434ed6 : mov dword ptr [r9 - 2], ecx ; ret
0x0000000000434ec1 : mov dword ptr [r9 - 4], ecx ; ret
0x0000000000463089 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004630c9 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464029 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000046308d : mov dword ptr [rax + 0x40], ecx ; ret
0x00000000004640c7 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000446118 : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x000000000044611b : mov dword ptr [rax + 0x54], edx ; ret
0x000000000041588a : mov dword ptr [rax + 8], 0 ; ret
0x00000000004423c6 : mov dword ptr [rax + 8], edx ; ret
0x0000000000425e2e : mov dword ptr [rax + rdx - 2], ecx ; ret
0x000000000049c503 : mov dword ptr [rax - 0x7d], ecx ; ret
0x000000000047fb62 : mov dword ptr [rax - 0x7d], ecx ; ret 0x8d01
0x000000000044d198 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000041b8fe : mov dword ptr [rax], 0xc ; mov rax, rcx ; ret
0x000000000041c0a8 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x0000000000469b18 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x00000000004c639d : mov dword ptr [rax], eax ; add al, ah ; or bh, bl ; jmp rsi
0x0000000000400d13 : mov dword ptr [rax], eax ; pop rbx ; ret
0x00000000004635b5 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000486738 : mov dword ptr [rax], edi ; jmp 0x486701
0x000000000047a555 : mov dword ptr [rax], edi ; pop rbx ; ret
0x0000000000482f33 : mov dword ptr [rax], edx ; jmp 0x482efc
0x00000000004634f5 : mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000047a549 : mov dword ptr [rax], edx ; pop rbx ; ret
0x0000000000464341 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x000000000046107a : mov dword ptr [rbp - 0x10d0], edx ; call 0x41d2a8
0x0000000000455bcc : mov dword ptr [rbp - 0x4d8], edx ; call 0x441de8
0x0000000000454598 : mov dword ptr [rbp - 0x4e8], esi ; jmp rax
0x0000000000471b51 : mov dword ptr [rbp - 0xa8], edx ; call rax
0x0000000000471d3a : mov dword ptr [rbp - 0xa8], esi ; call rax
0x0000000000458fff : mov dword ptr [rbp - 0xb8], ecx ; mov rdi, rbx ; call rax
0x0000000000471300 : mov dword ptr [rbp - 0xc8], edx ; call rax
0x0000000000490cf1 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000411ce2 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411ce1 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044ca91 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000477bd5 : mov dword ptr [rbx + 0x10], eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000411db7 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x0000000000469ef8 : mov dword ptr [rbx + 0x10], eax ; mov rsi, rbp ; xor edx, edx ; jmp 0x469ece
0x0000000000477c0e : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000473c0f : mov dword ptr [rbx + 0x10], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004125b9 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000477b73 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000487515 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x0000000000414dd3 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000047bf53 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x000000000044ecff : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000414e4e : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x00000000004165d1 : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000413432 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000463114 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000463f28 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411d47 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x0000000000415105 : mov dword ptr [rbx + 8], eax ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000044caa7 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000041529c : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000047d5f6 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004151ac : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000487c39 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000046402c : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000414dd6 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x0000000000465df8 : mov dword ptr [rcx + 8], esi ; ret
0x0000000000434ed7 : mov dword ptr [rcx - 2], ecx ; ret
0x0000000000434ec2 : mov dword ptr [rcx - 4], ecx ; ret
0x0000000000434eb1 : mov dword ptr [rcx - 8], ecx ; ret
0x000000000046a7fc : mov dword ptr [rcx], 0x8348c889 ; ret 0x8401
0x0000000000484a59 : mov dword ptr [rcx], eax ; jmp 0x484a22
0x00000000004c722a : mov dword ptr [rcx], eax ; ret
0x000000000049b91a : mov dword ptr [rcx], edx ; add rsp, 8 ; ret
0x0000000000417662 : mov dword ptr [rcx], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000043b0cd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000043b10b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000043b18d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000043aa7b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043aafd : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043aa3d : mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043ab40 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043ab60 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043ab21 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000043b1f3 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000043ab43 : mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000414d63 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000043b1d5 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000043b213 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000043ab25 : mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000466a7d : mov dword ptr [rdi + 0x20], ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004702e5 : mov dword ptr [rdi + 0x300], eax ; ret
0x00000000004702b7 : mov dword ptr [rdi + 0x308], eax ; ret
0x000000000042c0f1 : mov dword ptr [rdi + 0x38], ecx ; ret
0x0000000000414d93 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004186e0 : mov dword ptr [rdi + 0x58], ecx ; mov dword ptr [rdi + 4], eax ; ret
0x000000000049b971 : mov dword ptr [rdi + 0x98], esi ; ret
0x000000000043b14d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000043aa9d : mov dword ptr [rdi + 0xe], ecx ; ret
0x000000000043b0eb : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000043b16d : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000043aa5b : mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000434b95 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004349d8 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000434c78 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x0000000000434b25 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000434968 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043afb7 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000434ab5 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004348f8 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043a987 : mov dword ptr [rdi + 3], edx ; ret
0x00000000004186e3 : mov dword ptr [rdi + 4], eax ; ret
0x000000000043af99 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000434888 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043a979 : mov dword ptr [rdi + 4], edx ; ret
0x000000000043b04b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000434818 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043a9eb : mov dword ptr [rdi + 5], edx ; ret
0x000000000043b06b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000004347a8 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043a9fb : mov dword ptr [rdi + 6], edx ; ret
0x000000000043b009 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043b08b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000434738 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043a9c9 : mov dword ptr [rdi + 7], edx ; ret
0x0000000000414d67 : mov dword ptr [rdi + 8], eax ; ret
0x00000000004785d4 : mov dword ptr [rdi + 8], ecx ; ret
0x000000000043b029 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043afeb : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000479994 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000043a9bb : mov dword ptr [rdi + 8], edx ; ret
0x0000000000431f23 : mov dword ptr [rdi + rdx - 2], ecx ; ret
0x0000000000425e35 : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000425e3e : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x000000000049b929 : mov dword ptr [rdi + rsi*8], edx ; add rsp, 8 ; ret
0x0000000000430af5 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000430b33 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000047853f : mov dword ptr [rdi - 0x10], ecx ; ret
0x0000000000430e7c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004341e8 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043105c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434168 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043124c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004340e8 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043141d : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434059 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000043161d : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000433fc9 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000043181d : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000433f39 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004311fd : mov dword ptr [rdi - 2], ecx ; ret
0x0000000000431015 : mov dword ptr [rdi - 2], edx ; ret
0x00000000004311f9 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x00000000004315d9 : mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430caf : mov dword ptr [rdi - 4], edx ; ret
0x00000000004315d6 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004317d6 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004319d6 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430af9 : mov dword ptr [rdi - 8], ecx ; ret
0x0000000000430b37 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000430cac : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430da8 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000430cf4 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434268 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004784c4 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00000000004785ce : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000045bad6 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000043af85 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043afd7 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043af64 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043a944 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000043afb5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000043a985 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000043b007 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043a9c7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043b027 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043a9d7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000425e33 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000043d2c9 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043a9e8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000043a9f8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000043aa08 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000425e3b : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000043a976 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000043a9b8 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x000000000043d2d6 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x000000000042bec7 : mov dword ptr [rdi], ecx ; pop rbx ; ret
0x0000000000400598 : mov dword ptr [rdi], ecx ; ret
0x000000000043af54 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043af72 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043afc4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000434a44 : mov dword ptr [rdi], edx ; ret
0x0000000000434ebf : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000431f0b : mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000479b3d : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000434eae : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000431eee : mov dword ptr [rdi], esi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000434ed3 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x0000000000431f20 : mov dword ptr [rdi], esi ; mov word ptr [rdi + rdx - 2], cx ; ret
0x0000000000479b63 : mov dword ptr [rdi], esi ; ret
0x000000000040f8f3 : mov dword ptr [rdx + 0x130], ecx ; ret
0x000000000042c17f : mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047abbd : mov dword ptr [rdx + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000043a4d7 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x0000000000438d07 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000043a4b9 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000438cf9 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000043a56b : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000043a4e9 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x0000000000438d19 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000043a58b : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000043a509 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x0000000000438d29 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000043a529 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000043a5ab : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000438d39 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000043a549 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000043a43b : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000438c8b : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000416726 : mov dword ptr [rdx + 8], eax ; xor eax, eax ; ret
0x0000000000479f64 : mov dword ptr [rdx], 5 ; pop rbx ; ret
0x000000000046a37f : mov dword ptr [rdx], eax ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x00000000004995bc : mov dword ptr [rdx], eax ; add rsp, 8 ; ret
0x000000000041a6b6 : mov dword ptr [rdx], eax ; jmp 0x41a52d
0x000000000043a464 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000043a492 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000043a3e4 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000412561 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dc2a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000479b3f : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000412dc0 : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x0000000000438c34 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000047a535 : mov dword ptr [rdx], eax ; pop rbx ; ret
0x0000000000416692 : mov dword ptr [rdx], eax ; ret
0x00000000004633d6 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000049e27f : mov dword ptr [rip + 0x22d2fb], ebx ; jne 0x49e271 ; pop rbx ; ret
0x000000000044eb45 : mov dword ptr [rip + 0x27beed], edx ; je 0x44eb59 ; ret
0x00000000004437c6 : mov dword ptr [rip + 0x2857cc], edx ; pop rbx ; ret
0x000000000040154a : mov dword ptr [rip + 0x2c7b40], eax ; xor eax, eax ; ret
0x0000000000400705 : mov dword ptr [rip + 0x2c99a5], eax ; pop rbp ; pop r12 ; ret
0x000000000049d647 : mov dword ptr [rsi + 0x28], eax ; ret
0x000000000043d2d9 : mov dword ptr [rsi - 2], ecx ; ret
0x000000000043d2cb : mov dword ptr [rsi - 4], ecx ; ret
0x000000000046d631 : mov dword ptr [rsi], 0xffffffff ; xor eax, eax ; ret
0x000000000049b95b : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x0000000000473622 : mov dword ptr [rsi], eax ; ret
0x000000000049c063 : mov dword ptr [rsp + 0x10], ecx ; mov rsi, qword ptr [r15] ; call r14
0x000000000041ae9b : mov dword ptr [rsp + 0x10], edx ; call rax
0x0000000000418b04 : mov dword ptr [rsp + 0x14], eax ; pop r12 ; ret
0x000000000041ae96 : mov dword ptr [rsp + 0x18], eax ; mov qword ptr [rsp + 0x10], r10 ; call rax
0x000000000047b310 : mov dword ptr [rsp + 0x78], ebp ; call r12
0x000000000047b513 : mov dword ptr [rsp + 0x78], ebx ; call r12
0x000000000047b462 : mov dword ptr [rsp + 0x88], ebx ; call r14
0x000000000043fa86 : mov dword ptr [rsp + 8], eax ; call rbx
0x000000000041af52 : mov dword ptr [rsp + 8], eax ; mov qword ptr [rsp], rcx ; call rdx
0x000000000047781e : mov dword ptr [rsp + 8], esi ; mov edi, 0x6ca140 ; call rax
0x0000000000490f26 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000044ec75 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x0000000000469604 : mov dword ptr [rsp], 1 ; jmp 0x4695d7
0x0000000000409959 : mov dword ptr [rsp], eax ; call 0x405c55
0x000000000041af57 : mov dword ptr [rsp], ecx ; call rdx
0x000000000047bf13 : mov dword ptr fs:[0x2d0], eax ; ret
0x000000000044d197 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x000000000041c0a7 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x0000000000469b17 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000486737 : mov dword ptr fs:[rax], edi ; jmp 0x486702
0x0000000000482f32 : mov dword ptr fs:[rax], edx ; jmp 0x482efd
0x000000000046a3cc : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x0000000000484a58 : mov dword ptr fs:[rcx], eax ; jmp 0x484a23
0x0000000000479f63 : mov dword ptr fs:[rdx], 5 ; pop rbx ; ret
0x0000000000412560 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dc29 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000431f0a : mov dword ptr ss:[rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000431010 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000043a930 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000043db09 : mov eax, 0x10 ; pop rbx ; ret
0x0000000000420654 : mov eax, 0x16 ; je 0x420667 ; ret
0x00000000004207f0 : mov eax, 0x16 ; ret
0x000000000043db02 : mov eax, 0x20 ; pop rbx ; ret
0x000000000043dafb : mov eax, 0x30 ; pop rbx ; ret
0x000000000043daf4 : mov eax, 0x40 ; pop rbx ; ret
0x0000000000425ce9 : mov eax, 0x434d70 ; ret
0x00000000004253bc : mov eax, 0x43cd30 ; cmove rax, rdx ; ret
0x00000000004b7e1b : mov eax, 0x45155e93 ; ret 0x591c
0x0000000000499703 : mov eax, 0x48000000 ; add esp, 8 ; ret
0x000000000042629a : mov eax, 0x48fffffb ; mov eax, edi ; ret
0x000000000043daed : mov eax, 0x60 ; pop rbx ; ret
0x000000000046a150 : mov eax, 0x66 ; syscall ; ret
0x000000000046a170 : mov eax, 0x68 ; syscall ; ret
0x000000000046a160 : mov eax, 0x6b ; syscall ; ret
0x000000000046a180 : mov eax, 0x6c ; syscall ; ret
0x0000000000417e53 : mov eax, 0x6c9800 ; ret
0x000000000046ef77 : mov eax, 0x6ca1e0 ; call rdx
0x000000000043dae6 : mov eax, 0x80 ; pop rbx ; ret
0x000000000047458e : mov eax, 0x83004bbc ; ret
0x00000000004110f1 : mov eax, 0x8c48348 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000041865f : mov eax, 0xbe004a18 ; pop rsp ; ret 0x4b
0x0000000000466810 : mov eax, 0xc9 ; syscall ; ret
0x0000000000441e62 : mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x000000000041f676 : mov eax, 0xfffffffe ; pop rbx ; ret
0x000000000041128f : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000450fee : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004110d9 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000411d51 : mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dc2c : mov eax, 0xffffffff ; ret
0x0000000000479b5d : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000415702 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e03b : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x0000000000443786 : mov eax, 1 ; ret
0x000000000049c1a0 : mov eax, 2 ; add rsp, 8 ; ret
0x0000000000465d11 : mov eax, 2 ; ret
0x000000000049dd13 : mov eax, 3 ; je 0x49dd28 ; ret
0x0000000000465d21 : mov eax, 3 ; ret
0x000000000049c190 : mov eax, 4 ; add rsp, 8 ; ret
0x0000000000465d31 : mov eax, 4 ; ret
0x0000000000465d41 : mov eax, 5 ; ret
0x0000000000465d51 : mov eax, 6 ; ret
0x0000000000465d61 : mov eax, 7 ; ret
0x000000000049c171 : mov eax, 8 ; add rsp, 8 ; ret
0x000000000043dadf : mov eax, 8 ; pop rbx ; ret
0x000000000049dd25 : mov eax, 8 ; ret
0x000000000046340c : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000414e8c : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x0000000000410e03 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000415068 : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000415388 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x0000000000487193 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004156ac : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000464474 : mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000047e08d : mov eax, dword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x00000000004779f1 : mov eax, dword ptr [rax + 8] ; ret
0x00000000004735fa : mov eax, dword ptr [rax + 8] ; test r8, r8 ; jne 0x4735d9 ; ret
0x000000000044eb8f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000454972 : mov eax, dword ptr [rax*8 + 0x4b2380] ; jmp rax
0x00000000004549c3 : mov eax, dword ptr [rax*8 + 0x4b2480] ; jmp rax
0x0000000000456ab3 : mov eax, dword ptr [rax*8 + 0x4b2580] ; jmp rax
0x00000000004555e6 : mov eax, dword ptr [rax*8 + 0x4b2880] ; jmp rax
0x000000000045f7c1 : mov eax, dword ptr [rax*8 + 0x4b2d00] ; jmp rax
0x0000000000460ae5 : mov eax, dword ptr [rax*8 + 0x4b2e00] ; jmp rax
0x0000000000460fc9 : mov eax, dword ptr [rax*8 + 0x4b2f00] ; jmp rax
0x000000000045f857 : mov eax, dword ptr [rax*8 + 0x4b3200] ; jmp rax
0x000000000049b8b6 : mov eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000004995b9 : mov eax, dword ptr [rax] ; mov qword ptr [r10], r8 ; add rsp, 8 ; ret
0x0000000000473f39 : mov eax, dword ptr [rax] ; ret
0x000000000043ff1c : mov eax, dword ptr [rbp - 0x48] ; call rax
0x0000000000444987 : mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000475445 : mov eax, dword ptr [rbp] ; add rax, qword ptr [rdx + 8] ; call rax
0x00000000004710f1 : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x000000000047a551 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000467501 : mov eax, dword ptr [rbx + 0x26] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000438d04 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000438d16 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000438d26 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000438d36 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000438d46 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000042890a : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000042a1e2 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043a490 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x0000000000438cd0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000043a3e1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000438c31 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000043a461 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000438cb1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000004642bf : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x00000000004166a0 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000004166c8 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000049fce8 : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x49fcff ; call rax
0x0000000000464471 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000004169d1 : mov eax, dword ptr [rdi + 0x68] ; ret
0x0000000000479d38 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x479d50 ; ret
0x000000000049b8c1 : mov eax, dword ptr [rdi + 0x90] ; ret
0x000000000049b941 : mov eax, dword ptr [rdi + 0x98] ; ret
0x000000000049b981 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x000000000049b9e1 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x000000000049b9d1 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x000000000049b991 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x000000000044d1ac : mov eax, dword ptr [rdi*8 + 0x6caa40] ; ret
0x0000000000477981 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x477997 ; ret
0x000000000041668f : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000049d6e5 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49d6f7 ; ret
0x000000000049d700 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49d717 ; ret
0x000000000049d920 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49d937 ; ret
0x000000000043dbb7 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x43dba9 ; ret
0x0000000000428666 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000410d80 : mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004635b7 : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000004102c0 : mov eax, dword ptr [rdx] ; ret
0x0000000000416681 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x416680 ; ret
0x0000000000487c00 : mov eax, dword ptr [rip + 0x24465a] ; ret
0x000000000047361b : mov eax, dword ptr [rip + 0x258747] ; mov qword ptr [rsi], rax ; ret
0x00000000004735ba : mov eax, dword ptr [rip + 0x2587b0] ; ret
0x000000000044c061 : mov eax, dword ptr [rip + 0x27f691] ; ret
0x0000000000444cf1 : mov eax, dword ptr [rip + 0x2875d1] ; ret
0x00000000004169b1 : mov eax, dword ptr [rip + 0x2b2709] ; ret
0x000000000049c1dc : mov eax, dword ptr [rsi + 0x10] ; add rsp, 8 ; ret
0x00000000004734ac : mov eax, dword ptr [rsi + 4] ; ret
0x000000000049c211 : mov eax, dword ptr [rsi + 8] ; add rsp, 8 ; ret
0x00000000004634f7 : mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000049b9b6 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x0000000000400c50 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000044698a : mov eax, dword ptr [rsp + 0x20] ; call rax
0x00000000004472ed : mov eax, dword ptr [rsp + 0x28] ; call rax
0x000000000040e097 : mov eax, dword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x0000000000477e0c : mov eax, dword ptr [rsp + 0x38] ; add rsp, 0x68 ; ret
0x0000000000477c8d : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x000000000043dc74 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000473f38 : mov eax, dword ptr fs:[rax] ; ret
0x000000000041c395 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000459af0 : mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000041c225 : mov eax, eax ; pop rbx ; ret
0x0000000000432005 : mov eax, eax ; ret
0x0000000000476f22 : mov eax, eax ; sub eax, ecx ; ret
0x0000000000412d2a : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004626cb : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000462d19 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000462cec : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040f623 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004110f6 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000479ad3 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000041349d : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000474208 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000465549 : mov eax, ebx ; jmp 0x4653a3
0x000000000040f989 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040fa6e : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043f38e : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000411dbb : mov eax, ebx ; pop rbx ; ret
0x0000000000479997 : mov eax, ecx ; adc eax, eax ; ret
0x000000000046a725 : mov eax, ecx ; jne 0x46a77d ; ret
0x000000000046cda3 : mov eax, ecx ; mov rcx, r15 ; mov r15, rax ; jmp 0x46cd79
0x000000000041b905 : mov eax, ecx ; ret
0x00000000004a297d : mov eax, edi ; inc eax ; mov bh, al ; call qword ptr [rax]
0x00000000004169e1 : mov eax, edi ; ret
0x00000000004874be : mov eax, edx ; add rsp, 0x28 ; ret
0x000000000047a6c3 : mov eax, edx ; add rsp, 0x38 ; ret
0x000000000041d358 : mov eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000417665 : mov eax, edx ; add rsp, 8 ; ret
0x0000000000471c3f : mov eax, edx ; call rax
0x000000000047beeb : mov eax, edx ; jle 0x47befd ; ret
0x000000000046248b : mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045b8da : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041dce2 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000417a4c : mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000040f810 : mov eax, edx ; pop rbx ; ret
0x00000000004263b9 : mov eax, edx ; ret
0x0000000000477f97 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x0000000000469f43 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004872e8 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040eb84 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000451744 : mov eax, esi ; ret
0x000000000043d35b : mov eax, esi ; sub rax, rdx ; vzeroupper ; ret
0x00000000004147b5 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041ffaa : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004147b4 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000459aef : mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000459a29 : mov eax, r8d ; ret
0x0000000000476f21 : mov eax, r8d ; sub eax, ecx ; ret
0x0000000000467127 : mov ebp, 0x83000001 ; call 0xffffffffc40db96a
0x0000000000467a34 : mov ebp, 0x8948004b ; ret
0x00000000004a2b95 : mov ebp, 0xbde0fff8 ; clc ; jmp rax
0x00000000004a2b15 : mov ebp, 0xbe16fff8 ; clc ; call qword ptr [rsi]
0x00000000004a2b99 : mov ebp, 0xbee0fff8 ; clc ; jmp rax
0x00000000004ada84 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000004b72dd : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x0000000000464e98 : mov ebp, 0xf80148c0 ; ret
0x000000000046511c : mov ebp, 0xf80148c6 ; ret
0x00000000004b8a46 : mov ebp, 0xfb67d10d ; ret
0x0000000000454b2c : mov ebp, 0xfffffb08 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004550b1 : mov ebp, 0xfffffb10 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000045c5ff : mov ebp, 0xfffffb60 ; call rax
0x00000000004758df : mov ebp, 0xffffff78 ; call rax
0x000000000049bc5a : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000043f577 : mov ebp, eax ; call rax
0x000000000043ff19 : mov ebp, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000477f9d : mov ebp, ecx ; nop ; jmp rdx
0x000000000047cb97 : mov ebp, edi ; mov r15, rax ; jmp 0x47cbb3
0x000000000044031f : mov ebp, edi ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x00000000004021ad : mov ebx, 0x80 ; call rax
0x0000000000441e94 : mov ebx, 0xafb8341 ; je 0x441ea3 ; ret
0x00000000004b72db : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x00000000004452c6 : mov ebx, dword ptr [rbx + 0x28] ; test rbx, rbx ; jne 0x4452a9 ; jmp 0x44529b
0x00000000004760c9 : mov ebx, dword ptr [rsp] ; add rsp, 0x18 ; jmp r11
0x0000000000476438 : mov ebx, dword ptr [rsp] ; add rsp, 0x30 ; jmp r11
0x000000000047654a : mov ebx, dword ptr [rsp] ; add rsp, 0x30 ; ret
0x0000000000440326 : mov ebx, eax ; call rax
0x000000000044f08f : mov ebx, eax ; mov rdi, r12 ; call r15
0x000000000044e586 : mov ebx, edi ; test rax, rax ; je 0x44e596 ; call rax
0x000000000049ff17 : mov ecx, 0x22 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004be87c : mov ecx, 0x41380e0a ; ret
0x00000000004b72d9 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x0000000000434ebc : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000042f265 : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x000000000046444b : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000428663 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004315d3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004317d3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004319d3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043a960 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000043a9a1 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000434b93 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000434b23 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000434ab3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004349d5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000434965 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004348f5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000434885 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000434815 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004347a5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000434735 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000434c75 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000043a941 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000472b0d : mov ecx, dword ptr [rsp + 0x30] ; call r9
0x0000000000477ae7 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000477a75 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x50 ; jmp qword ptr [rax]
0x00000000004665d8 : mov ecx, edi ; call rbx
0x000000000046cda6 : mov ecx, edi ; mov r15, rax ; jmp 0x46cd76
0x0000000000432021 : mov ecx, edx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000432024 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004156a7 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000443fbb : mov ecx, esi ; call rbx
0x0000000000473493 : mov ecx, esi ; cmp rcx, rdx ; jne 0x473478 ; ret
0x0000000000441672 : mov edi, 0x1f0ffffd ; add bl, dh ; ret
0x0000000000441bf0 : mov edi, 0x24448b48 ; or byte ptr [rax + 0x39], cl ; ret
0x000000000044122d : mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x000000000041afab : mov edi, 0x4a1955 ; call 0x417207
0x000000000041af92 : mov edi, 0x4a1f30 ; call 0x417207
0x00000000004754aa : mov edi, 0x4b58b0 ; call 0x401787
0x000000000040095c : mov edi, 0x4bd9c0 ; call rax
0x0000000000470326 : mov edi, 0x6ca100 ; call rax
0x0000000000470392 : mov edi, 0x6ca100 ; pop rbx ; pop rbp ; jmp rax
0x00000000004779af : mov edi, 0x6ca140 ; add rsp, 8 ; jmp rax
0x0000000000443495 : mov edi, 0x6ca140 ; call rax
0x0000000000475ecf : mov edi, 0x6ca140 ; jmp rax
0x00000000004008e0 : mov edi, 0x6cab50 ; jmp rax
0x0000000000402f25 : mov edi, 0x6cafe0 ; call rax
0x0000000000402c2f : mov edi, 0x6cafe0 ; call rbx
0x0000000000402cd6 : mov edi, 0x6cb060 ; call rax
0x000000000040357c : mov edi, 0x6cb0a0 ; call r15
0x0000000000403534 : mov edi, 0x6cb0a0 ; call rax
0x0000000000444d91 : mov edi, 0x6cb6d0 ; call rax
0x000000000043dcaa : mov edi, 0x6cb720 ; call rax
0x0000000000402c28 : mov edi, 0x6cb720 ; call rbx
0x000000000047a112 : mov edi, 0x6cb9c0 ; call rax
0x000000000047a23d : mov edi, 0x6cb9c4 ; call rdx
0x0000000000441656 : mov edi, 0x8b48fffd ; jge 0x441664 ; call rbx
0x0000000000441648 : mov edi, 0x8b49fffd ; cmp al, 0x24 ; call rbx
0x00000000004a2ba1 : mov edi, 0xc060fff8 ; clc ; jmp rax
0x000000000049b60a : mov edi, 1 ; call r14
0x0000000000401667 : mov edi, 1 ; call rax
0x000000000049befc : mov edi, 1 ; jmp rax
0x0000000000409955 : mov edi, dword ptr [rax + 0x10] ; mov qword ptr [rsp], rax ; call 0x405c59
0x000000000040997c : mov edi, dword ptr [rax + 0x18] ; mov qword ptr [rsp], rax ; call 0x405c59
0x0000000000409966 : mov edi, dword ptr [rax + 8] ; mov qword ptr [rsp], rax ; call 0x405c59
0x000000000043fa83 : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000045c5fe : mov edi, dword ptr [rbp - 0x4a0] ; call rax
0x00000000004758de : mov edi, dword ptr [rbp - 0x88] ; call rax
0x000000000049bbbe : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x0000000000465e85 : mov edi, dword ptr [rbp] ; call r12
0x000000000040e01d : mov edi, dword ptr [rbp] ; call r14
0x000000000043f6da : mov edi, dword ptr [rbp] ; call rbx
0x0000000000476468 : mov edi, dword ptr [rdi + 0x28] ; call r11
0x000000000043f688 : mov edi, dword ptr [rdi] ; call rbx
0x0000000000444144 : mov edi, dword ptr [rdi] ; jmp 0x400364
0x0000000000464438 : mov edi, dword ptr [rdx + 0x40] ; jmp 0x464404
0x00000000004b8d06 : mov edi, dword ptr [rdx] ; ret
0x000000000047a458 : mov edi, dword ptr [rip + 0x251566] ; call rax
0x000000000047a31b : mov edi, dword ptr [rip + 0x2516a3] ; jmp rax
0x000000000043f647 : mov edi, dword ptr [rsi] ; call rbx
0x0000000000446691 : mov edi, dword ptr [rsp + 0x10] ; call r12
0x000000000043fb6f : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000446985 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000004472e8 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000044aeda : mov edi, dword ptr [rsp + 0x18] ; call r14
0x00000000004476ce : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000446e05 : mov edi, dword ptr [rsp + 0x28] ; call r12
0x0000000000447b30 : mov edi, dword ptr [rsp + 0x28] ; call r14
0x0000000000446492 : mov edi, dword ptr [rsp + 0x28] ; call r15
0x0000000000446eb9 : mov edi, dword ptr [rsp + 0x28] ; call rbx
0x000000000044a71a : mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000448d38 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x0000000000449178 : mov edi, dword ptr [rsp + 0x30] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000004480b8 : mov edi, dword ptr [rsp + 0x40] ; call r15
0x000000000044845f : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000400bf7 : mov edi, dword ptr [rsp + 0xc] ; call r12
0x0000000000400c4b : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000043fad0 : mov edi, dword ptr [rsp] ; call rbx
0x000000000049d4ea : mov edi, dword ptr [rsp] ; mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x0000000000408632 : mov edi, eax ; call 0x41d648
0x00000000004207fa : mov edi, eax ; call rcx
0x000000000046cda9 : mov edi, eax ; jmp 0x46cd73
0x000000000047cb9a : mov edi, eax ; jmp 0x47cbb0
0x000000000045173d : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x451731 ; mov rax, rsi ; ret
0x000000000041fb98 : mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000049e2ec : mov edi, ebp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x0000000000468d73 : mov edi, ebp ; call 0x415014
0x0000000000441400 : mov edi, ebp ; call 0x41d644
0x000000000047d976 : mov edi, ebp ; call qword ptr [rbx]
0x000000000040e25c : mov edi, ebp ; call r14
0x000000000044f0d7 : mov edi, ebp ; call r15
0x000000000041e116 : mov edi, ebp ; call rax
0x0000000000440370 : mov edi, ebp ; call rbx
0x000000000044f654 : mov edi, ebp ; mov rdx, rbp ; call r15
0x000000000041ea77 : mov edi, ebp ; pop rbx ; pop rbp ; jmp rax
0x000000000044c017 : mov edi, ebx ; call r12
0x000000000044428d : mov edi, ebx ; call r14
0x0000000000461e39 : mov edi, ebx ; call r8
0x0000000000412377 : mov edi, ebx ; call rax
0x0000000000444e51 : mov edi, ebx ; jmp 0x444e1b
0x000000000049e113 : mov edi, ebx ; jne 0x49e105 ; pop rbx ; ret
0x0000000000414ef4 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000415064 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000044135f : mov edi, edi ; call 0x41d644
0x0000000000410765 : mov edi, edi ; call rax
0x00000000004403b4 : mov edi, edi ; call rbx
0x0000000000464794 : mov edi, edi ; xor r8d, r8d ; call rbx
0x00000000004c58e1 : mov edi, edx ; call rsi
0x00000000004517c1 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x4517a9 ; mov rax, rsi ; ret
0x000000000044136c : mov edi, esi ; call 0x41d644
0x000000000045bee6 : mov edi, esi ; call 0x425e59
0x00000000004448de : mov edi, esi ; call r15
0x0000000000440394 : mov edi, esi ; call rbx
0x000000000044140e : mov edi, esp ; call 0x41d644
0x000000000044f092 : mov edi, esp ; call r15
0x000000000044034b : mov edi, esp ; call rbx
0x00000000004665d5 : mov edi, esp ; mov r9, r15 ; call rbx
0x0000000000444984 : mov edi, esp ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000472a59 : mov edi, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000472a58 : mov edi, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000425cdf : mov edx, 0x42f1e0 ; cmove rax, rdx ; ret
0x0000000000441d16 : mov edx, 0x64 ; test eax, eax ; cmove eax, edx ; ret
0x00000000004b81be : mov edx, 0xcac982a4 ; call 0xffffffffaf0e203e
0x00000000004461d7 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000041314a : mov edx, 1 ; call 0x43f447
0x0000000000444000 : mov edx, 8 ; mov eax, edx ; ret
0x00000000004633d8 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000047a531 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000412370 : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x000000000042a1df : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000042890d : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000047a545 : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000041075e : mov edx, dword ptr [rdi + 0x40] ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x000000000049d2e9 : mov edx, dword ptr [rdi] ; mov rdi, rbp ; call rbx
0x0000000000471c38 : mov edx, dword ptr [rdx + 8] ; add rdx, qword ptr [rax] ; mov rax, rdx ; call rax
0x000000000043a982 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000043a973 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000043a9c3 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043a9d3 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000431011 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000004313d0 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430c61 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043af70 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000434c00 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000043afc1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000434a41 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000043af51 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043a931 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000041da29 : mov edx, dword ptr [rsp + 0x68] ; call rax
0x000000000049b549 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x00000000004178e4 : mov edx, eax ; jmp 0x417901
0x0000000000420890 : mov edx, eax ; jmp 0x42085b
0x0000000000468f96 : mov edx, eax ; jmp 0x468f9f
0x000000000046a965 : mov edx, eax ; jmp 0x46a95a
0x000000000044f657 : mov edx, ebp ; call r15
0x000000000047d971 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047d931 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044f0d1 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x000000000044f0ec : mov edx, ebp ; mov rsi, rbx ; mov rdi, r12 ; call r15
0x00000000004731bc : mov edx, ebp ; xor edi, edi ; call 0x43f446
0x00000000004127f5 : mov edx, ebx ; mov rsi, rbp ; call 0x43ea77
0x0000000000457c54 : mov edx, esp ; call 0x462d38
0x00000000004731bb : mov edx, r13d ; xor edi, edi ; call 0x43f447
0x000000000046a519 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x0000000000440896 : mov es, word ptr [rip - 0x9cf0000] ; mov rdi, r13 ; call rbx
0x000000000044eb48 : mov esi, 0x3740027 ; ret
0x0000000000446115 : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000446107 : mov esi, 0x4a4ffa8a ; add byte ptr [rax - 0x7f], cl ; ret 0x4fe0
0x0000000000475bef : mov esi, 0x89fffffe ; ret 0x758b
0x000000000048990f : mov esi, 0xbe0f2414 ; ret 0x8349
0x00000000004a2b19 : mov esi, 0xbf16fff8 ; clc ; call qword ptr [rsi]
0x00000000004a2ab9 : mov esi, 0xbf42fff8 ; clc ; jmp rax
0x00000000004b72de : mov esi, 0xc2c1c0bf ; ret
0x0000000000414a0b : mov esi, 0xc48348ff ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000043d9e4 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x00000000004403d6 : mov esi, 1 ; call rbx
0x00000000004405c3 : mov esi, 1 ; mov rdi, r12 ; call rbx
0x000000000044048f : mov esi, 1 ; mov rdi, r13 ; call rbx
0x0000000000440407 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x000000000044084d : mov esi, 1 ; mov rdi, rbp ; call rbx
0x0000000000461e33 : mov esi, 1 ; mov rdi, rbx ; call r8
0x0000000000461748 : mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000043f5c1 : mov esi, 2 ; jmp rax
0x0000000000440841 : mov esi, 2 ; mov rdi, r12 ; call rbx
0x00000000004405b4 : mov esi, 2 ; mov rdi, r13 ; call rbx
0x0000000000440480 : mov esi, 2 ; mov rdi, r14 ; call rbx
0x00000000004403f8 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x000000000043f5db : mov esi, 3 ; jmp rax
0x0000000000440dbc : mov esi, 3 ; mov rdi, r12 ; call rbx
0x0000000000440e13 : mov esi, 3 ; mov rdi, r13 ; call rbx
0x0000000000440e93 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000440f93 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x000000000049bbba : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000413259 : mov esi, dword ptr [rbx + 0x40] ; sub rsi, rdi ; call 0x43f508
0x000000000049c019 : mov esi, dword ptr [rbx] ; call r14
0x0000000000476464 : mov esi, dword ptr [rdi + 0x20] ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x000000000049d4ee : mov esi, dword ptr [rdi + rbp*8 + 0x10] ; call rbx
0x000000000049c068 : mov esi, dword ptr [rdi] ; call r14
0x000000000040e01a : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [r13] ; call r14
0x000000000049d2e5 : mov esi, dword ptr [rsi + 8] ; mov rdx, qword ptr [r15] ; mov rdi, rbp ; call rbx
0x0000000000431f09 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000444141 : mov esi, dword ptr [rsi] ; mov rdi, qword ptr [rdi] ; jmp 0x400367
0x0000000000400bf3 : mov esi, dword ptr [rsp + 0x10] ; mov edi, dword ptr [rsp + 0xc] ; call r12
0x0000000000443fb6 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x0000000000450121 : mov esi, dword ptr [rsp + 0x20] ; mov rdi, r12 ; call r15
0x000000000041e111 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000446eb4 : mov esi, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x0000000000448d33 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000041d721 : mov esi, dword ptr [rsp + 0x48] ; call rax
0x00000000004005d7 : mov esi, eax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e4 ; ret
0x00000000004127f8 : mov esi, ebp ; call 0x43ea74
0x000000000041ed0e : mov esi, ebp ; mov rdi, rbx ; call rax
0x0000000000469efc : mov esi, ebp ; xor edx, edx ; jmp 0x469eca
0x000000000047a456 : mov esi, ebx ; mov edi, dword ptr [rip + 0x251566] ; call rax
0x000000000044f0ef : mov esi, ebx ; mov rdi, r12 ; call r15
0x00000000004207f7 : mov esi, ebx ; mov rdi, rax ; call rcx
0x0000000000414f39 : mov esi, ecx ; jbe 0x414edd ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000049befa : mov esi, edi ; mov edi, 1 ; jmp rax
0x000000000045c5fb : mov esi, edi ; mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x000000000040e259 : mov esi, edi ; mov rdi, r13 ; call r14
0x000000000045237b : mov esi, edi ; mov rdi, rbx ; call rax
0x000000000049bf51 : mov esi, esi ; mov rdi, r12 ; call r15
0x00000000004665d2 : mov esi, esi ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x000000000044f651 : mov esi, esi ; mov rdi, r13 ; mov rdx, rbp ; call r15
0x000000000047d974 : mov esi, esp ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047d934 : mov esi, esp ; mov edi, ebp ; call rax
0x000000000044f0a3 : mov esi, esp ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x000000000041fb95 : mov esi, esp ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000044f0d4 : mov esi, esp ; mov rdi, rbp ; call r15
0x000000000041f8ba : mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x000000000041f0f5 : mov esi, esp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000004be47c : mov esp, 0x1000000a ; or ch, dh ; call qword ptr [rdx]
0x00000000004bd48c : mov esp, 0x40fffdc4 ; retf ; std ; call rsp
0x0000000000425691 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x00000000004256c1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000004256b1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000423073 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000042c2bb : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x00000000004256a1 : mov esp, 0xf80148c0 ; ret
0x000000000040071f : mov esp, eax ; call 0x43d9d8
0x0000000000477f9a : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x000000000049bc5e : mov esp, ecx ; ret
0x000000000043f574 : mov esp, edx ; mov rbp, rax ; call rax
0x000000000042c17e : mov qword ptr [r10 + 0x18], r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004995bb : mov qword ptr [r10], r8 ; add rsp, 8 ; ret
0x0000000000434eb0 : mov qword ptr [r9 - 8], rcx ; ret
0x0000000000463088 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004630c8 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464028 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000046308c : mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004640c6 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000415889 : mov qword ptr [rax + 8], 0 ; ret
0x00000000004423c5 : mov qword ptr [rax + 8], rdx ; ret
0x00000000004635b4 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000047a554 : mov qword ptr [rax], rdi ; pop rbx ; ret
0x00000000004634f4 : mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000047a548 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000464340 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000461079 : mov qword ptr [rbp - 0x10d0], rdx ; call 0x41d2a9
0x0000000000455bcb : mov qword ptr [rbp - 0x4d8], rdx ; call 0x441de9
0x0000000000454597 : mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x0000000000471b50 : mov qword ptr [rbp - 0xa8], r10 ; call rax
0x0000000000471d39 : mov qword ptr [rbp - 0xa8], rsi ; call rax
0x00000000004712ff : mov qword ptr [rbp - 0xc8], r10 ; call rax
0x000000000044ca90 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000477bd4 : mov qword ptr [rbx + 0x10], rax ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000411db6 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000477c0d : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000473c0e : mov qword ptr [rbx + 0x10], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004125b8 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000477b72 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000487514 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000414dd2 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000047bf52 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x0000000000414e4d : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000411d46 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x0000000000415104 : mov qword ptr [rbx + 8], rax ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000041529b : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000047d5f5 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000487c38 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000049b919 : mov qword ptr [rcx], rdx ; add rsp, 8 ; ret
0x000000000047864e : mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000043b18c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000043aafc : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043aadc : mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043ab3f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043ab5f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043ab20 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000414d62 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004702e4 : mov qword ptr [rdi + 0x300], rax ; ret
0x00000000004702b6 : mov qword ptr [rdi + 0x308], rax ; ret
0x000000000042c0f0 : mov qword ptr [rdi + 0x38], r9 ; ret
0x0000000000414d92 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004186df : mov qword ptr [rdi + 0x58], rcx ; mov dword ptr [rdi + 4], eax ; ret
0x000000000049b970 : mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000043b14c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000043aa9c : mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043b16c : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000043aabc : mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004349d7 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000434967 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004348f7 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000434887 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b04a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000434817 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043a9ea : mov qword ptr [rdi + 5], rdx ; ret
0x000000000043b06a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000004347a7 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043a9fa : mov qword ptr [rdi + 6], rdx ; ret
0x000000000043b08a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000434737 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043aa0a : mov qword ptr [rdi + 7], rdx ; ret
0x0000000000479993 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x00000000004785d3 : mov qword ptr [rdi + 8], r9 ; ret
0x0000000000414d66 : mov qword ptr [rdi + 8], rax ; ret
0x0000000000425e3d : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000049b928 : mov qword ptr [rdi + rsi*8], rdx ; add rsp, 8 ; ret
0x0000000000430af4 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000430b32 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000047853e : mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000430e7b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004341e7 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043105b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434167 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043124b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004340e7 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043141c : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434058 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000043161c : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000433fc8 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000043181c : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000433f38 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004784c9 : mov qword ptr [rdi - 8], r9 ; ret
0x0000000000430af8 : mov qword ptr [rdi - 8], rcx ; ret
0x0000000000430b36 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000430cab : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430da7 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000430cf3 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434267 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000045bad5 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042bec6 : mov qword ptr [rdi], r9 ; pop rbx ; ret
0x0000000000478498 : mov qword ptr [rdi], r9 ; ret
0x000000000043afd6 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043a9c6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043a9d6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000043a9e7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000043a9f7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000043aa07 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000425e3a : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000043a9b7 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000400597 : mov qword ptr [rdi], rcx ; ret
0x000000000043afc3 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000434a43 : mov qword ptr [rdi], rdx ; ret
0x0000000000434ead : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000431eed : mov qword ptr [rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000479b62 : mov qword ptr [rdi], rsi ; ret
0x000000000040f8f2 : mov qword ptr [rdx + 0x130], rcx ; ret
0x000000000043a56a : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000438d5a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000043a58a : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000438d7a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000043a5aa : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000438d9a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000043a43a : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000438c8a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000416725 : mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x000000000043a3e3 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000438c33 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000047a534 : mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000416691 : mov qword ptr [rdx], rax ; ret
0x00000000004633d5 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000401549 : mov qword ptr [rip + 0x2c7b40], rax ; xor eax, eax ; ret
0x000000000049d646 : mov qword ptr [rsi + 0x28], rax ; ret
0x000000000046d630 : mov qword ptr [rsi], -1 ; xor eax, eax ; ret
0x0000000000473621 : mov qword ptr [rsi], rax ; ret
0x000000000041ae9a : mov qword ptr [rsp + 0x10], r10 ; call rax
0x000000000049c062 : mov qword ptr [rsp + 0x10], r9 ; mov rsi, qword ptr [r15] ; call r14
0x000000000047b30f : mov qword ptr [rsp + 0x78], rbp ; call r12
0x000000000047b512 : mov qword ptr [rsp + 0x78], rbx ; call r12
0x000000000047b461 : mov qword ptr [rsp + 0x88], rbx ; call r14
0x000000000041af51 : mov qword ptr [rsp + 8], r8 ; mov qword ptr [rsp], rcx ; call rdx
0x000000000043fa85 : mov qword ptr [rsp + 8], rax ; call rbx
0x0000000000409958 : mov qword ptr [rsp], rax ; call 0x405c56
0x000000000041af56 : mov qword ptr [rsp], rcx ; call rdx
0x000000000044eb6d : mov qword ptr fs:[rdx], rax ; ret
0x0000000000431eec : mov qword ptr ss:[rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00000000004b81bd : mov r10d, 0xcac982a4 ; call 0xffffffffaf0e203f
0x000000000040071e : mov r12, rax ; call 0x43d9d9
0x000000000046b4e7 : mov r12b, 0xe8 ; ret 0xfd34
0x000000000043f573 : mov r12d, edx ; mov rbp, rax ; call rax
0x000000000047cb96 : mov r13, r15 ; mov r15, rax ; jmp 0x47cbb4
0x000000000043ff18 : mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000049bbb9 : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049bbbd : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000046cda8 : mov r15, rax ; jmp 0x46cd74
0x000000000047cb99 : mov r15, rax ; jmp 0x47cbb1
0x0000000000472b0c : mov r9, qword ptr [rsp + 0x30] ; call r9
0x0000000000443fba : mov r9, r14 ; call rbx
0x00000000004665d7 : mov r9, r15 ; call rbx
0x0000000000411d50 : mov rax, -1 ; pop rbx ; ret
0x0000000000412dc2 : mov rax, -1 ; ret
0x0000000000465d00 : mov rax, 1 ; ret
0x0000000000465d10 : mov rax, 2 ; ret
0x0000000000465d20 : mov rax, 3 ; ret
0x0000000000465d30 : mov rax, 4 ; ret
0x0000000000465d40 : mov rax, 5 ; ret
0x0000000000465d50 : mov rax, 6 ; ret
0x0000000000465d60 : mov rax, 7 ; ret
0x0000000000475444 : mov rax, qword ptr [r13] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000414e8b : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000410e02 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000415067 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000415387 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000487192 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004156ab : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000464473 : mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000047e08c : mov rax, qword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x00000000004779f0 : mov rax, qword ptr [rax + 8] ; ret
0x000000000044eb8e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000454971 : mov rax, qword ptr [rax*8 + 0x4b2380] ; jmp rax
0x00000000004549c2 : mov rax, qword ptr [rax*8 + 0x4b2480] ; jmp rax
0x0000000000456ab2 : mov rax, qword ptr [rax*8 + 0x4b2580] ; jmp rax
0x00000000004555e5 : mov rax, qword ptr [rax*8 + 0x4b2880] ; jmp rax
0x000000000045f7c0 : mov rax, qword ptr [rax*8 + 0x4b2d00] ; jmp rax
0x0000000000460ae4 : mov rax, qword ptr [rax*8 + 0x4b2e00] ; jmp rax
0x0000000000460fc8 : mov rax, qword ptr [rax*8 + 0x4b2f00] ; jmp rax
0x000000000045f856 : mov rax, qword ptr [rax*8 + 0x4b3200] ; jmp rax
0x000000000049b8b5 : mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x000000000043ff1b : mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000444986 : mov rax, qword ptr [rbp - 0x58] ; call rax
0x00000000004710f0 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x000000000047a550 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000438c30 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000049fce7 : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x49fd00 ; call rax
0x0000000000464470 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000004169d0 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000049b8c0 : mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000049b940 : mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000049b980 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000049b9e0 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000049b9d0 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000049b990 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000044d1ab : mov rax, qword ptr [rdi*8 + 0x6caa40] ; ret
0x0000000000477980 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x477998 ; ret
0x000000000041668e : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000416680 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x416681 ; ret
0x00000000004735b9 : mov rax, qword ptr [rip + 0x2587b0] ; ret
0x000000000044c060 : mov rax, qword ptr [rip + 0x27f691] ; ret
0x0000000000444cf0 : mov rax, qword ptr [rip + 0x2875d1] ; ret
0x00000000004169b0 : mov rax, qword ptr [rip + 0x2b2709] ; ret
0x000000000049c1db : mov rax, qword ptr [rsi + 0x10] ; add rsp, 8 ; ret
0x000000000049c210 : mov rax, qword ptr [rsi + 8] ; add rsp, 8 ; ret
0x000000000049b9b5 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x0000000000400c4f : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000446989 : mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000004472ec : mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000040e096 : mov rax, qword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x0000000000477e0b : mov rax, qword ptr [rsp + 0x38] ; add rsp, 0x68 ; ret
0x0000000000416e83 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041ffa9 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041c394 : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041c224 : mov rax, r8 ; pop rbx ; ret
0x0000000000432004 : mov rax, r8 ; ret
0x000000000046a724 : mov rax, r9 ; jne 0x46a77e ; ret
0x000000000046a7a5 : mov rax, r9 ; ret
0x0000000000412d29 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000462d18 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000462ceb : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040fbc7 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049bae9 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000041349c : mov rax, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000474207 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040f988 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040fa6d : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043f38d : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000411dba : mov rax, rbx ; pop rbx ; ret
0x000000000041b904 : mov rax, rcx ; ret
0x00000000004169e0 : mov rax, rdi ; ret
0x00000000004874bd : mov rax, rdx ; add rsp, 0x28 ; ret
0x000000000047a6c2 : mov rax, rdx ; add rsp, 0x38 ; ret
0x000000000041d357 : mov rax, rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000417664 : mov rax, rdx ; add rsp, 8 ; ret
0x0000000000471c3e : mov rax, rdx ; call rax
0x000000000041dce1 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000417a4b : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000043db27 : mov rax, rdx ; pop rbx ; ret
0x00000000004263b8 : mov rax, rdx ; ret
0x0000000000469f42 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004872e7 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040eb83 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000451743 : mov rax, rsi ; ret
0x000000000043d35a : mov rax, rsi ; sub rax, rdx ; vzeroupper ; ret
0x000000000049bc59 : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000477f9c : mov rbp, r9 ; nop ; jmp rdx
0x000000000043f576 : mov rbp, rax ; call rax
0x0000000000476549 : mov rbx, qword ptr [rsp] ; add rsp, 0x30 ; ret
0x0000000000440325 : mov rbx, rax ; call rax
0x000000000044f08e : mov rbx, rax ; mov rdi, r12 ; call r15
0x000000000044e585 : mov rbx, rdi ; test rax, rax ; je 0x44e597 ; call rax
0x000000000043a9a0 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000477ae6 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000477a74 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x50 ; jmp qword ptr [rax]
0x000000000046cda5 : mov rcx, r15 ; mov r15, rax ; jmp 0x46cd77
0x0000000000432020 : mov rcx, rdx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000432023 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000473492 : mov rcx, rsi ; cmp rcx, rdx ; jne 0x473479 ; ret
0x000000000043facf : mov rdi, qword ptr [r12] ; call rbx
0x000000000040e01c : mov rdi, qword ptr [r13] ; call r14
0x000000000043f6d9 : mov rdi, qword ptr [r13] ; call rbx
0x000000000043f646 : mov rdi, qword ptr [r14] ; call rbx
0x000000000043f687 : mov rdi, qword ptr [r15] ; call rbx
0x000000000043fa82 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000045c5fd : mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x00000000004758dd : mov rdi, qword ptr [rbp - 0x88] ; call rax
0x0000000000465e84 : mov rdi, qword ptr [rbp] ; call r12
0x000000000043f80e : mov rdi, qword ptr [rbp] ; call rbx
0x0000000000476467 : mov rdi, qword ptr [rdi + 0x28] ; call r11
0x0000000000444143 : mov rdi, qword ptr [rdi] ; jmp 0x400365
0x0000000000464437 : mov rdi, qword ptr [rdx + 0x40] ; jmp 0x464405
0x0000000000446690 : mov rdi, qword ptr [rsp + 0x10] ; call r12
0x000000000044aed9 : mov rdi, qword ptr [rsp + 0x18] ; call r14
0x0000000000446e04 : mov rdi, qword ptr [rsp + 0x28] ; call r12
0x0000000000447b2f : mov rdi, qword ptr [rsp + 0x28] ; call r14
0x0000000000446491 : mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000446eb8 : mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x000000000044a719 : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000448d37 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000004480b7 : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000049d4e9 : mov rdi, qword ptr [rsp] ; mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x0000000000444142 : mov rdi, qword ptr ss:[rdi] ; jmp 0x400366
0x000000000044140d : mov rdi, r12 ; call 0x41d645
0x000000000044f091 : mov rdi, r12 ; call r15
0x000000000044034a : mov rdi, r12 ; call rbx
0x00000000004665d4 : mov rdi, r12 ; mov r9, r15 ; call rbx
0x0000000000444983 : mov rdi, r12 ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x00000000004413ff : mov rdi, r13 ; call 0x41d645
0x000000000040e25b : mov rdi, r13 ; call r14
0x000000000044036f : mov rdi, r13 ; call rbx
0x000000000044f653 : mov rdi, r13 ; mov rdx, rbp ; call r15
0x000000000044136b : mov rdi, r14 ; call 0x41d645
0x00000000004448dd : mov rdi, r14 ; call r15
0x0000000000440393 : mov rdi, r14 ; call rbx
0x000000000044135e : mov rdi, r15 ; call 0x41d645
0x0000000000410764 : mov rdi, r15 ; call rax
0x00000000004403b3 : mov rdi, r15 ; call rbx
0x0000000000464793 : mov rdi, r15 ; xor r8d, r8d ; call rbx
0x0000000000408631 : mov rdi, rax ; call 0x41d649
0x00000000004207f9 : mov rdi, rax ; call rcx
0x000000000041fb97 : mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000049e2eb : mov rdi, rbp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x0000000000468d72 : mov rdi, rbp ; call 0x415015
0x000000000044f0d6 : mov rdi, rbp ; call r15
0x000000000041e115 : mov rdi, rbp ; call rax
0x0000000000440852 : mov rdi, rbp ; call rbx
0x000000000041ea76 : mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000044c016 : mov rdi, rbx ; call r12
0x000000000044428c : mov rdi, rbx ; call r14
0x0000000000461e38 : mov rdi, rbx ; call r8
0x0000000000412376 : mov rdi, rbx ; call rax
0x0000000000444e50 : mov rdi, rbx ; jmp 0x444e1c
0x000000000049e112 : mov rdi, rbx ; jne 0x49e106 ; pop rbx ; ret
0x0000000000414ef3 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000415063 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000049b548 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x000000000049d2e8 : mov rdx, qword ptr [r15] ; mov rdi, rbp ; call rbx
0x000000000047a530 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000047a544 : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000430c60 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434a40 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000041da28 : mov rdx, qword ptr [rsp + 0x68] ; call rax
0x0000000000457c53 : mov rdx, r12 ; call 0x462d39
0x000000000047d970 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047d930 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004178e3 : mov rdx, rax ; jmp 0x417902
0x000000000042088f : mov rdx, rax ; jmp 0x42085c
0x0000000000468f95 : mov rdx, rax ; jmp 0x468fa0
0x000000000046a964 : mov rdx, rax ; jmp 0x46a95b
0x000000000044f656 : mov rdx, rbp ; call r15
0x00000000004127f4 : mov rdx, rbx ; mov rsi, rbp ; call 0x43ea78
0x000000000049d4ed : mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x000000000049c067 : mov rsi, qword ptr [r15] ; call r14
0x000000000040e019 : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r13] ; call r14
0x0000000000413258 : mov rsi, qword ptr [rbx + 0x40] ; sub rsi, rdi ; call 0x43f509
0x000000000049c018 : mov rsi, qword ptr [rbx] ; call r14
0x0000000000444140 : mov rsi, qword ptr [rsi] ; mov rdi, qword ptr [rdi] ; jmp 0x400368
0x0000000000443fb5 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x0000000000450120 : mov rsi, qword ptr [rsp + 0x20] ; mov rdi, r12 ; call r15
0x000000000041e110 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000041d720 : mov rsi, qword ptr [rsp + 0x48] ; call rax
0x000000000047d973 : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047d933 : mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044f0a2 : mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x000000000044f0d3 : mov rsi, r12 ; mov rdi, rbp ; call r15
0x000000000041f8b9 : mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x000000000041f0f4 : mov rsi, r12 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000041ed0d : mov rsi, r13 ; mov rdi, rbx ; call rax
0x000000000049bf50 : mov rsi, r14 ; mov rdi, r12 ; call r15
0x00000000004665d1 : mov rsi, r14 ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x000000000040e258 : mov rsi, r15 ; mov rdi, r13 ; call r14
0x000000000045237a : mov rsi, r15 ; mov rdi, rbx ; call rax
0x00000000004005d6 : mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e5 ; ret
0x00000000004127f7 : mov rsi, rbp ; call 0x43ea75
0x0000000000469efb : mov rsi, rbp ; xor edx, edx ; jmp 0x469ecb
0x000000000047a455 : mov rsi, rbx ; mov edi, dword ptr [rip + 0x251566] ; call rax
0x000000000044f0ee : mov rsi, rbx ; mov rdi, r12 ; call r15
0x00000000004207f6 : mov rsi, rbx ; mov rdi, rax ; call rcx
0x0000000000414f38 : mov rsi, rcx ; jbe 0x414ede ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000049bef9 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x0000000000477f99 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000049bc5d : mov rsp, rcx ; ret
0x0000000000434ed5 : mov word ptr [r9 - 2], cx ; ret
0x00000000004421e9 : mov word ptr [rax + rcx*4], gs ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000425e2d : mov word ptr [rax + rdx - 2], cx ; ret
0x00000000004c6625 : mov word ptr [rax], es ; add al, bh ; cwde ; std ; call rcx
0x00000000004bfb4c : mov word ptr [rcx], fs ; add byte ptr [rax], al ; push rax ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rax]
0x000000000043b0cc : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000043aa3c : mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b1d4 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000043ab24 : mov word ptr [rdi + 0x18], cx ; ret
0x0000000000434c77 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000043af98 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000043a978 : mov word ptr [rdi + 4], dx ; ret
0x000000000043afea : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000043a9ba : mov word ptr [rdi + 8], dx ; ret
0x0000000000431f22 : mov word ptr [rdi + rdx - 2], cx ; ret
0x00000000004c614c : mov word ptr [rdi - 0x1c800000], es ; cli ; jmp qword ptr [rdx]
0x00000000004311fc : mov word ptr [rdi - 2], cx ; ret
0x0000000000431014 : mov word ptr [rdi - 2], dx ; ret
0x00000000004311f8 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x000000000043a943 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000043d2d5 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000434c7b : mov word ptr [rdi], cx ; ret
0x000000000043af53 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000434ce3 : mov word ptr [rdi], dx ; ret
0x0000000000434ed2 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x0000000000431f1f : mov word ptr [rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000043a4b8 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000438cf8 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x000000000043a463 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000438cb3 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000004c10f2 : mov word ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x000000000043d2d8 : mov word ptr [rsi - 2], cx ; ret
0x00000000004c104c : mov word ptr [rsi], dr0 ; add byte ptr [rax], al ; jbe 0x4c1050 ; call qword ptr [rax]
0x00000000004c70a0 : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; test byte ptr [rcx], al ; ret
0x00000000004c7150 : mov word ptr [rsi], es ; add qword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x000000000044ec74 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x00000000004c6624 : mov word ptr fs:[rax], es ; add al, bh ; cwde ; std ; call rcx
0x0000000000431f1e : mov word ptr ss:[rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000048a10d : movabs al, byte ptr [0x293ff08348000000] ; ret 0xfa81
0x00000000004c8911 : movabs al, byte ptr [0x41380e0a01940301] ; ret
0x00000000004c00b9 : movabs al, byte ptr [0x41380e0a01af0301] ; ret
0x000000000047a10e : movabs al, byte ptr [0x6cb9c0bf0047a0] ; call rax
0x000000000048e505 : movabs al, byte ptr [0xc74900758b48fffe] ; ret 0xc001
0x0000000000464433 : movabs al, byte ptr [0xeb407a8b48000000] ; ret
0x000000000046eec5 : movabs byte ptr [0x394802e0c148006c], al ; ret 0x860f
0x0000000000417771 : movabs byte ptr [0xe8ffffff50e9ffff], al ; ret 0xff64
0x0000000000420849 : movabs dword ptr [0x8948c08548ffffb6], eax ; ret 0x575
0x000000000049df8e : movabs eax, dword ptr [0x262d8b4cd0ff006c] ; ret 0x22
0x000000000042f782 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042f77e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042f82c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043aa10 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000043b28d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000043abdd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043494f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004348df : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043486f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004347ff : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043b22d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000043ab7d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043478f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043b24d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000043ab9d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043471f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043b26d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000043abbd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000434d3f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434ccf : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434c5f : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434bef : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434b7f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434b0f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434a9f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434a2f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004349bf : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000425d8c : movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; ja 0x425da9 ; ret
0x0000000000425da5 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x0000000000433eab : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x0000000000433f1b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043b0a4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043aa24 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043aa67 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043aa57 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043aad8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043aa98 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043aab8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043aa38 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043abd9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043ab79 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043ab99 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043abb9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000004346ca : movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000434724 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043aa11 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000043b28e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000043abde : movq qword ptr [rdi + 0x10], mm2 ; ret
0x0000000000434950 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004348e0 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434870 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434800 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043b22e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000043ab7e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x0000000000434790 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043b24e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000043ab9e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x0000000000434720 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043b26e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000043abbe : movq qword ptr [rdi + 0xf], mm2 ; ret
0x0000000000434d40 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434cd0 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434c60 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434bf0 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434b80 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434b10 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434aa0 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434a30 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004349c0 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000425d8d : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x425da8 ; ret
0x0000000000425da6 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000433eac : movq qword ptr [rdi - 0x10], mm0 ; ret
0x0000000000433f1c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434657 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004345d7 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434547 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004344c7 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434447 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004343c7 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434347 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004342c7 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434247 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004341c7 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434147 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004340c7 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434037 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000433fa7 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000433f17 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043b0a5 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043aa25 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043aa78 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043aa68 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043aa58 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043aad9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043aa99 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043aab9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043aa39 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043abda : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043ab7a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043ab9a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043abba : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000004346cb : movq qword ptr [rdi], mm0 ; ret
0x0000000000434725 : movq qword ptr [rdi], mm1 ; ret
0x00000000004b8b82 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004b9ddd : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x4b9e36 ; jmp 0x4b9d77
0x0000000000415bfa : movsb byte ptr [rdi], byte ptr [rsi] ; mov esi, 0xc48348ff ; sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000004be464 : movsb byte ptr [rdi], byte ptr [rsi] ; or al, byte ptr [rax] ; add byte ptr [rax], bl ; or ch, dh ; call qword ptr [rax]
0x0000000000432027 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000473bbc : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0x00000000004176b7 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000004c89b1 : movsd dword ptr [rdi], dword ptr [rsi] ; add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x0000000000400707 : movsd dword ptr [rdi], dword ptr [rsi] ; cdq ; sub al, 0 ; pop rbp ; pop r12 ; ret
0x00000000004ba415 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004b9cd1 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x00000000004784f2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004bd36d : movsd dword ptr [rdi], dword ptr [rsi] ; std ; call qword ptr [rax]
0x0000000000490ee3 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000490e9d : movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000476f51 : movsx eax, dl ; neg eax ; ret
0x0000000000420c11 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004322e6 : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000042f262 : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000049b039 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000049aab1 : movsxd rax, dword ptr [r8 + r11*4] ; add rax, r8 ; jmp rax
0x0000000000499589 : movsxd rax, dword ptr [r8 + rcx*4] ; add r8, rax ; jmp r8
0x000000000049a758 : movsxd rax, dword ptr [rbp + rax*4] ; add rax, rbp ; jmp rax
0x000000000042dbad : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000043a7d9 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000004997b1 : movsxd rcx, dword ptr [r14 + rsi*4] ; add rcx, r14 ; jmp rcx
0x000000000042f32f : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000043c7bc : movsxd rsi, esi ; ret 0x7520
0x0000000000490e9e : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x0000000000490ee4 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x000000000047fcd8 : movzx eax, al ; jmp qword ptr [rax*8 + 0x4bc2f0]
0x000000000044ecfc : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000047a5fc : movzx eax, al ; neg eax ; ret
0x000000000047a3a6 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046a2d5 : movzx eax, al ; ret
0x00000000004140dc : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415d76 : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000411f9d : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041529f : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000041321a : movzx eax, byte ptr [rax] ; ret
0x000000000049c539 : movzx eax, byte ptr [rcx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000421fa8 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000042dbc0 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000425820 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000421fc3 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000414f3d : movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000411fb0 : movzx eax, byte ptr [rdx] ; ret
0x00000000004140dd : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043da37 : movzx eax, cl ; pop rbx ; ret
0x000000000043da5f : movzx eax, dl ; pop rbx ; ret
0x000000000043ce1a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x43ce19 ; ret
0x000000000043ceca : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x43cec9 ; ret
0x000000000042ea64 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000421fc0 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042dbc3 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000040db9f : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x40db87 ; ret
0x000000000042da91 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004220ef : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000042d923 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000043c7e4 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x000000000043c844 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x000000000043c834 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000043c824 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000043c814 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000043c804 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000043c7f4 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000434670 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042e817 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000043c7cb : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x0000000000434d50 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000425823 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000425849 : movzx edx, dl ; sub eax, edx ; ret
0x00000000004345f0 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000434ce0 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000465e81 : movzx esi, bl ; mov rdi, qword ptr [rbp] ; call r12
0x000000000046a2d4 : movzx rax, al ; ret
0x0000000000464f67 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000462687 : neg byte ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000416b2f : neg eax ; ret
0x000000000043eb31 : neg edx ; cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x00000000004a2fe4 : nop ; adc al, 0xf9 ; call qword ptr [rax]
0x00000000004a2ff4 : nop ; adc bh, cl ; call qword ptr [rax]
0x00000000004a2ffc : nop ; adc ecx, edi ; call qword ptr [rax]
0x00000000004a2fec : nop ; adc edi, ecx ; call qword ptr [rax]
0x0000000000410628 : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000004135fc : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000433d9b : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000047b1be : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x3950245c], cl ; ret
0x000000000046237b : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000042decc : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041aa5a : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000467746 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x6c ; ret
0x00000000004be675 : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; je 0x4be68d ; ret
0x00000000004be683 : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000043dc7f : nop ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000044417f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042568f : nop ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x0000000000487d5f : nop ; call rax
0x00000000004a2c4c : nop ; in eax, dx ; clc ; jmp qword ptr [rax]
0x00000000004a2940 : nop ; jae 0x4a2942 ; push qword ptr [rax] ; jne 0x4a2946 ; call rax
0x0000000000411972 : nop ; jmp 0x41187c
0x0000000000477f9f : nop ; jmp rdx
0x00000000004bd378 : nop ; lodsb al, byte ptr [rsi] ; std ; call rax
0x00000000004bd388 : nop ; mov ch, 0xfd ; call rax
0x0000000000430e2f : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000043100f : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000046a14f : nop ; mov eax, 0x66 ; syscall ; ret
0x0000000000416fdf : nop ; mov eax, 0xffffffff ; ret
0x00000000004102bf : nop ; mov eax, dword ptr [rdx] ; ret
0x000000000046a51f : nop ; mov eax, edi ; ret
0x00000000004313cf : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043af6f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000411d4f : nop ; mov rax, -1 ; pop rbx ; ret
0x0000000000415cff : nop ; mov rax, -1 ; ret
0x00000000004172f4 : nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000444e4f : nop ; mov rdi, rbx ; jmp 0x444e1d
0x000000000041e10f : nop ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000043aa0f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000461c9f : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x461c6e
0x0000000000461c9e : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x461c6f
0x00000000004bd354 : nop ; pop rbp ; std ; jmp rax
0x000000000043d1af : nop ; ret
0x00000000004bd3c4 : nop ; ret 0xfffd
0x00000000004099bc : nop ; ret 0xffff
0x00000000004a2d28 : nop ; sar al, 1 ; jmp rax
0x00000000004a2fc0 : nop ; sbb bh, cl ; jmp qword ptr [rax]
0x00000000004166cf : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004a2d7c : nop ; xlatb ; clc ; jmp rax
0x000000000042584f : nop ; xor eax, eax ; ret
0x000000000042570f : nop ; xor rax, rax ; ret
0x00000000004779bb : nop dword ptr [rax + rax] ; add rsp, 8 ; ret
0x000000000047d81b : nop dword ptr [rax + rax] ; call rbx
0x000000000043a94b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004008e8 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x000000000047a323 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000412dcb : nop dword ptr [rax + rax] ; ret
0x000000000041358b : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000465ccc : nop dword ptr [rax] ; add rax, 1 ; ret
0x0000000000400b15 : nop dword ptr [rax] ; call qword ptr [rbx + 0x10]
0x000000000047d679 : nop dword ptr [rax] ; call rax
0x0000000000416b0c : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000410d4d : nop dword ptr [rax] ; mov eax, dword ptr [rdx] ; ret
0x000000000042be44 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; ret
0x000000000041da24 : nop dword ptr [rax] ; mov rdx, qword ptr [rsp + 0x68] ; call rax
0x0000000000400935 : nop dword ptr [rax] ; pop rbp ; ret
0x000000000041dde4 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000043dc1c : nop dword ptr [rax] ; pop rbx ; ret
0x0000000000406305 : nop dword ptr [rax] ; ret
0x000000000049db7d : nop dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000411594 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000047d81a : nop word ptr [rax + rax] ; call rbx
0x0000000000412dca : nop word ptr [rax + rax] ; ret
0x000000000041358a : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000444041 : not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x000000000049d642 : or ah, bh ; and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x00000000004c76a9 : or ah, bh ; call qword ptr [rax]
0x00000000004c76c1 : or ah, bh ; call qword ptr [rdx]
0x00000000004c5fb8 : or ah, bl ; cli ; call rsi
0x0000000000429577 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042abef : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046a3e2 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000041b900 : or al, 0 ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000041c0aa : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000046a35f : or al, 0 ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000451fd0 : or al, 0x13 ; add rdx, r13 ; call qword ptr [r10 + rax*8]
0x0000000000421fa6 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000041c222 : or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x0000000000468f93 : or al, 0x20 ; mov rdx, rax ; jmp 0x468fa2
0x000000000041af58 : or al, 0x24 ; call rdx
0x0000000000443491 : or al, 0x24 ; je 0x4434a5 ; mov edi, 0x6ca140 ; call rax
0x0000000000461ca2 : or al, 0x40 ; jmp 0x461c6b
0x0000000000461ca1 : or al, 0x40 ; jmp 0x461c6c
0x0000000000400bfa : or al, 0x41 ; call rsp
0x0000000000444daf : or al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000477c90 : or al, 0x48 ; add esp, 0x38 ; ret
0x0000000000400c4e : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000473b0b : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047a6e3 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000047abbf : or al, 0x5d ; pop r12 ; pop r14 ; ret
0x00000000004c48cc : or al, 0x6f ; add byte ptr [rax], al ; jo 0x4c48de ; cli ; jmp rdx
0x00000000004619ea : or al, 0x7e ; ret
0x000000000045c969 : or al, 0x83 ; ret
0x000000000045826c : or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000420c13 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000428664 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004322e8 : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000042f264 : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x00000000004896cb : or al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000046a518 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000042dbaf : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000043a7db : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000004c89b0 : or al, 0xa5 ; add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x000000000042f268 : or al, 0xb ; jmp r9
0x000000000043a7df : or al, 0xb ; jmp rcx
0x00000000004997b3 : or al, 0xb6 ; add rcx, r14 ; jmp rcx
0x0000000000434873 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000425d93 : or al, 0xf3 ; ret
0x000000000046210b : or al, 0xf6 ; ret 0xf04
0x000000000045c8ec : or al, 0xf6 ; ret 0xf08
0x00000000004c7164 : or al, 7 ; or byte ptr [rcx + 0xb], al ; add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x000000000044f101 : or al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x000000000042223d : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429781 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422261 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049b62e : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x00000000004be465 : or al, byte ptr [rax] ; add byte ptr [rax], bl ; or ch, dh ; call qword ptr [rax]
0x00000000004be47d : or al, byte ptr [rax] ; add byte ptr [rax], dl ; or ch, dh ; call qword ptr [rdx]
0x00000000004083c6 : or al, byte ptr [rbx - 0x7bf0fd07] ; ret
0x000000000047cc80 : or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8008
0x00000000004891f7 : or al, byte ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8348
0x00000000004c62cb : or al, byte ptr [rcx] ; ret
0x0000000000496537 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000476bd9 : or al, ch ; add dword ptr [rcx], ebp ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000408e87 : or al, ch ; ret
0x000000000040c288 : or al, ch ; ret 0xff99
0x0000000000464a58 : or al, ch ; ret 1
0x00000000004c63a1 : or bh, bl ; jmp rsi
0x00000000004423c8 : or bl, al ; nop word ptr [rax + rax] ; ret
0x000000000043f932 : or bl, ch ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000434a33 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000044efa7 : or bl, dh ; ret
0x000000000040a435 : or byte ptr [eax], al ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x0000000000415106 : or byte ptr [r15], cl ; mov dh, 2 ; pop rbx ; ret
0x0000000000471ad1 : or byte ptr [r8 + 0x29], cl ; ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x00000000004107d7 : or byte ptr [r8 + 0x29], r9b ; ret
0x00000000004736af : or byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000438c88 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047dac6 : or byte ptr [r8 - 0x77], cl ; ret
0x000000000040e932 : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x000000000043ff47 : or byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000496712 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004696f3 : or byte ptr [r9 + 0x39], cl ; ret 0x8e0f
0x000000000049b037 : or byte ptr [r9 + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x0000000000438d47 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x000000000046395f : or byte ptr [r9 - 0x77], r9b ; ret
0x00000000004107d8 : or byte ptr [rax + 0x29], cl ; ret
0x0000000000416f5b : or byte ptr [rax + 0x29], cl ; ret 0x149
0x0000000000471ad2 : or byte ptr [rax + 0x29], cl ; ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x0000000000416ae7 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x0000000000441bf5 : or byte ptr [rax + 0x39], cl ; ret
0x000000000041b7c9 : or byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000004788d5 : or byte ptr [rax + 0x39], cl ; ret 0x8949
0x00000000004c51e2 : or byte ptr [rax + 0xb], cl ; push rdx ; ret
0x00000000004c1acc : or byte ptr [rax + 0xb], cl ; ret
0x000000000047504b : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000403f0c : or byte ptr [rax + 1], cl ; ret
0x000000000041aaf7 : or byte ptr [rax + 1], cl ; ret 0x8948
0x000000000046731c : or byte ptr [rax - 0x39], cl ; ret
0x000000000042572b : or byte ptr [rax - 0x73], cl ; add eax, 0x1d ; ret
0x000000000042573f : or byte ptr [rax - 0x73], cl ; add eax, 0x8449 ; ret
0x0000000000418a43 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x00000000004735b8 : or byte ptr [rax - 0x75], cl ; add eax, 0x2587b0 ; ret
0x000000000049e083 : or byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax - 0x7f] ; jmp rax
0x000000000043fa81 : or byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x0000000000409968 : or byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x405c57
0x000000000040dffa : or byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000438c8d : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000004736b0 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000043f38c : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000041af55 : or byte ptr [rax - 0x77], cl ; or al, 0x24 ; call rdx
0x0000000000438c89 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000041ea75 : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x0000000000417a4a : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000047d527 : or byte ptr [rax - 0x77], cl ; ret
0x0000000000472400 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000040e933 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004723a9 : or byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000004723ff : or byte ptr [rax - 0x77], r9b ; ret 0x8948
0x000000000044d9e4 : or byte ptr [rax - 0x77c0005], al ; inc dword ptr [rcx - 0x77] ; ret
0x000000000041b7c5 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc27affdc
0x000000000041b7c4 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc27affdd
0x000000000041c258 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000044f124 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000043fe77 : or byte ptr [rax - 0x7d], cl ; ret
0x000000000042bed6 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042bf5e : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000046256e : or byte ptr [rax - 0x7d], cl ; ret 0x4803
0x0000000000472668 : or byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045ba92 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x00000000004110d8 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00000000004c2bd8 : or byte ptr [rax - 8], bh ; call qword ptr [rcx]
0x000000000041088d : or byte ptr [rax - 9], cl ; fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x000000000042249c : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004178f4 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000004178b5 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x8948
0x000000000042249d : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429921 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004224c1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041588c : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041d206 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000049c172 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000444001 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000043dae0 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000049dd26 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040a436 : or byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x000000000042afde : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049cf10 : or byte ptr [rbp + 0x39], cl ; ret 0x4776
0x000000000047827c : or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x000000000047d759 : or byte ptr [rbp + 0x440f4cf6], al ; ret
0x0000000000489553 : or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004735fc : or byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp - 0x32], 0xf3 ; ret
0x000000000041d400 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x00000000004059a3 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000401825 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000412d5a : or byte ptr [rbx + 0x5d], bl ; sub rax, rdx ; ret
0x000000000049c0f6 : or byte ptr [rbx + 0x634801eb], al ; ret
0x0000000000461ca0 : or byte ptr [rbx + 0xc], 0x40 ; jmp 0x461c6d
0x0000000000456f77 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x000000000040f691 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x00000000004702b9 : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x0000000000479acb : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000004696f4 : or byte ptr [rcx + 0x39], cl ; ret 0x8e0f
0x000000000045b8d9 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x000000000047ea6a : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000049b038 : or byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x00000000004c7166 : or byte ptr [rcx + 0xb], al ; add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x00000000004bffdf : or byte ptr [rcx + 0xb], al ; ret
0x000000000046152b : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000047f5db : or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000478b70 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x000000000040e257 : or byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, r13 ; call r14
0x0000000000479ad2 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000049c013 : or byte ptr [rcx - 0x73], cl ; sbb al, 0xcc ; mov rsi, qword ptr [rbx] ; call r14
0x0000000000411aba : or byte ptr [rcx - 0x74b777bb], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x0000000000438d48 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x0000000000463960 : or byte ptr [rcx - 0x77], cl ; ret
0x00000000004890b2 : or byte ptr [rcx - 0x77], cl ; ret 0x44c6
0x000000000041cc99 : or byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x000000000040e14a : or byte ptr [rcx - 0x7d], cl ; ret
0x000000000044f3a3 : or byte ptr [rcx - 0x7d], cl ; ret 0xf301
0x0000000000448009 : or byte ptr [rcx - 0xa], al ; ret
0x000000000045a7b1 : or byte ptr [rcx], al ; ret 0xd529
0x00000000004bee58 : or byte ptr [rcx], bh ; cmc ; call qword ptr [rax]
0x000000000049cc16 : or byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x1c ; and al, 0xf ; ret 0x8348
0x000000000049c43f : or byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x34 ; and al, 0xf ; ret 0x8348
0x0000000000441f8e : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x00000000004510f0 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000417a8b : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004ba69e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000470777 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x0000000000470391 : or byte ptr [rdi + 0x6ca100], bh ; pop rbx ; pop rbp ; jmp rax
0x0000000000477821 : or byte ptr [rdi + 0x6ca140], bh ; call rax
0x000000000040357b : or byte ptr [rdi + 0x6cb0a0], bh ; call r15
0x00000000004bf053 : or byte ptr [rdi + 0xb], al ; add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x00000000004c439c : or byte ptr [rdi + 0xb], al ; jae 0x4c43b0 ; ret
0x0000000000481778 : or byte ptr [rdi + rcx - 0x4a], al ; sub byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000449393 : or byte ptr [rdi], 0x94 ; ret 0x8348
0x000000000044c5d9 : or byte ptr [rdi], cl ; mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x000000000041529e : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000461b61 : or byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x00000000004874f9 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000415107 : or byte ptr [rdi], cl ; mov dh, 2 ; pop rbx ; ret
0x000000000049bfc6 : or byte ptr [rdi], cl ; ret 0xfc3
0x000000000042f82b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000044d264 : or byte ptr [rdi], cl ; test dl, dh ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004550b6 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000049bfc5 : or byte ptr [rdi], r9b ; ret 0xfc3
0x00000000004004cc : or byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000475ee6 : or byte ptr [rsp + 0x5b], dh ; ret
0x00000000004be469 : or ch, dh ; call qword ptr [rax]
0x00000000004be481 : or ch, dh ; call qword ptr [rdx]
0x000000000047a847 : or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x000000000044c160 : or cl, byte ptr [rax + 0x39] ; ret 0x3a76
0x0000000000411f8e : or cl, byte ptr [rax + 1] ; ret 0x8948
0x00000000004127d7 : or cl, byte ptr [rax + 1] ; ret 0x8949
0x00000000004643ff : or cl, byte ptr [rax - 0x77] ; ret
0x000000000040fd6c : or cl, byte ptr [rax - 0x7d] ; ret
0x00000000004249ea : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000451c37 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000489693 : or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004633d7 : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x00000000004437a2 : or cl, byte ptr [rbx - 0x3f7affd8] ; je 0x4437b8 ; ret
0x0000000000400538 : or cl, byte ptr [rcx + 0x1c829f0] ; sar dword ptr [rcx], 1 ; ret 0xffb8
0x0000000000489559 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004080c8 : or cl, ch ; ret
0x0000000000461f72 : or cl, ch ; ret 0xfffc
0x0000000000487785 : or cl, cl ; cmove rax, rdx ; ret
0x0000000000434953 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000049d705 : or dh, bl ; ret
0x000000000047d817 : or dh, byte ptr [rbp - 0x4d] ; nop word ptr [rax + rax] ; call rbx
0x000000000041b3a3 : or dh, dh ; ret 0x7404
0x000000000041b31e : or dh, dh ; ret 0xf04
0x00000000004027fe : or dh, dh ; ret 0xfdf
0x000000000040dad7 : or dword ptr [rax + rax*8 - 0x38b7938c], eax ; ret 0xfff0
0x00000000004021aa : or dword ptr [rax - 0x73], ecx ; mov ebx, 0x80 ; call rax
0x00000000004758dc : or dword ptr [rax - 0x75], ecx ; mov ebp, 0xffffff78 ; call rax
0x0000000000422e7e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x00000000004223cd : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ae8f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422327 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004103ef : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000489673 : or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000042efe6 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x00000000004125d0 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004783cc : or dword ptr [rcx + 0x39], ecx ; ret 0x870f
0x000000000041f3c6 : or dword ptr [rcx - 0x7d], ecx ; cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000041f5ac : or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x0000000000401664 : or dword ptr [rcx], esi ; idiv byte ptr [rdi + 1] ; call rax
0x0000000000477d06 : or dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00000000004169b3 : or dword ptr [rdi], esp ; sub eax, dword ptr [rax] ; ret
0x0000000000473f19 : or dword ptr [rip + 0x256250], 1 ; pop rbx ; ret
0x00000000004c62c8 : or eax, 0x10a0303 ; ret
0x00000000004c6378 : or eax, 0x1370303 ; ret
0x000000000043b231 : or eax, 0x1c478d48 ; ret
0x0000000000415a42 : or eax, 0x28c48348 ; pop rbx ; pop rbp ; ret
0x00000000004c62b8 : or eax, 0x34b0303 ; ret
0x00000000004c6318 : or eax, 0x35b0303 ; ret
0x000000000046155a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000461c62 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000042c4b2 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x00000000004896e7 : or eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004293d7 : or eax, 0x83480000 ; ret 0x4910
0x0000000000429441 : or eax, 0x83480000 ; ret 0xe910
0x00000000004a04fd : or eax, 0x834825eb ; ret 0x4810
0x00000000004ad7d9 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x00000000004b9cd3 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x00000000004403ae : or eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x0000000000434803 : or eax, 0xf7f0ff3 ; ret
0x00000000004439ac : or eax, 0xffffffff ; ret
0x00000000004c7167 : or eax, dword ptr [r11] ; add dword ptr es:[rdx], ecx ; ret
0x000000000045d58f : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042216d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004295e1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422191 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044ca54 : or eax, dword ptr [rbx + 0x67403fe] ; pop rbx ; ret
0x00000000004c7168 : or eax, dword ptr [rbx] ; add dword ptr es:[rdx], ecx ; ret
0x00000000004c8631 : or eax, dword ptr [rsi + rcx + 0x38] ; ret
0x000000000045d58e : or eax, dword ptr fs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000441dce : or ebp, 0x1b ; add byte ptr [rax], al ; ret
0x000000000043e8ce : or ebp, 0x50 ; add byte ptr [rax], al ; ret
0x0000000000418cf2 : or ebp, dword ptr [rbx] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004166c4 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000417963 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret
0x000000000041d460 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; xchg eax, esi ; ret
0x00000000004c89f8 : or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000004349c3 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000479d3e : or ebx, esi ; ret
0x000000000041ca9a : or ecx, dword ptr [rax - 0x3f] ; out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x0000000000418b94 : or ecx, dword ptr [rax - 0x3f] ; out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x000000000040fa6c : or ecx, dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004471a5 : or ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x00000000004896af : or ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004c4366 : or ecx, dword ptr [rdx + 0xa] ; ret
0x000000000042bec4 : or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000004c439e : or esi, dword ptr [rbx + 0xa] ; ret
0x00000000004be680 : or esi, dword ptr [rbx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000004348e3 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004125d1 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000434a32 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004349c2 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000434952 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004c439d : or r14d, dword ptr [r11 + 0xa] ; ret
0x00000000004348e2 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004c8630 : or r8d, dword ptr [r14 + rcx + 0x38] ; ret
0x000000000042bec3 : or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x000000000044c15f : or r9b, byte ptr [r8 + 0x39] ; ret 0x3a76
0x0000000000461f71 : or r9b, r13b ; ret 0xfffc
0x00000000004c4365 : or r9d, dword ptr [r10 + 0xa] ; ret
0x00000000004c6377 : or rax, 0x1370303 ; ret
0x00000000004c62b7 : or rax, 0x34b0303 ; ret
0x00000000004c6317 : or rax, 0x35b0303 ; ret
0x0000000000461559 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000461c61 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000004439ab : or rax, 0xffffffffffffffff ; ret
0x0000000000496412 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000417180 : out -0x18, eax ; ficom dword ptr [rax + 1] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000049d9f8 : out -0x18, eax ; ret 0xffe7
0x00000000004b8b80 : out -0x31, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000441655 : out -0x41, eax ; std ; dec dword ptr [rax - 0x75] ; jge 0x441665 ; call rbx
0x00000000004195ba : out -0x46, eax ; mov eax, 0xbe004a18 ; pop rsp ; ret 0x4b
0x000000000040328b : out -0x77, eax ; ret 0x8948
0x00000000004ba8a8 : out -0xb, eax ; mov ch, 0xab ; ret
0x000000000043424a : out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004a2c81 : out -8, eax ; jmp qword ptr [rax]
0x00000000004a2c01 : out -8, eax ; jmp rax
0x000000000049d6cb : out 0x22, al ; add byte ptr [rax - 0x77], cl ; sub bl, r14b ; ret
0x000000000042ba34 : out 0x29, al ; add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000044f093 : out 0x41, eax ; call rdi
0x0000000000474ff9 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000044f0a4 : out 0x48, al ; mov edi, dword ptr [rsp + 0x28] ; call r15
0x000000000041fb96 : out 0x48, al ; mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000044f0d5 : out 0x48, al ; mov edi, ebp ; call r15
0x0000000000444985 : out 0x48, eax ; mov eax, dword ptr [rbp - 0x58] ; call rax
0x00000000004665d6 : out 0x4d, eax ; mov ecx, edi ; call rbx
0x000000000041f0f6 : out 0x5b, al ; pop rbp ; pop r12 ; jmp rax
0x0000000000415d93 : out 0x5b, al ; ret
0x0000000000472a5a : out 0x5b, eax ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000041f8bb : out 0x5d, al ; pop r12 ; jmp rax
0x000000000047d975 : out 0x89, al ; out dx, eax ; call qword ptr [rbx]
0x000000000047d935 : out 0x89, al ; out dx, eax ; call rax
0x000000000041c490 : out 0xf, al ; xchg byte ptr [rcx], dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004341ca : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004a2d01 : out 0xf8, al ; call qword ptr [rax]
0x00000000004a2bfd : out 0xf8, al ; push rax ; out -8, eax ; jmp rax
0x000000000040fd44 : out 0xff, al ; push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000049dd21 : out 2, al ; jne 0x49dd34 ; mov eax, 8 ; ret
0x000000000042bd39 : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x0000000000457f3a : out dx, al ; add dword ptr [rcx - 0x7f], ecx ; jmp qword ptr [rax]
0x000000000041ca9d : out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x00000000004127f9 : out dx, al ; call 0x43ea73
0x00000000004009a9 : out dx, al ; call rax
0x00000000004c61f9 : out dx, al ; cli ; jmp qword ptr [rdx]
0x00000000004b9cd7 : out dx, al ; fcmovb st(0), st(3) ; ret
0x0000000000430e7a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000049b8b4 : out dx, al ; mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x000000000041ed0f : out dx, al ; mov rdi, rbx ; call rax
0x00000000004345da : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042ad3e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000469efd : out dx, al ; xor edx, edx ; jmp 0x469ec9
0x000000000041dbf5 : out dx, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000418b97 : out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x000000000049e2ed : out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x0000000000468d74 : out dx, eax ; call 0x415013
0x0000000000441401 : out dx, eax ; call 0x41d643
0x000000000047d977 : out dx, eax ; call qword ptr [rbx]
0x000000000040e25d : out dx, eax ; call r14
0x000000000044f0d8 : out dx, eax ; call r15
0x000000000041e117 : out dx, eax ; call rax
0x0000000000440371 : out dx, eax ; call rbx
0x000000000045b855 : out dx, eax ; jmp qword ptr [rsi]
0x0000000000430caa : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430da6 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000430cf2 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044f655 : out dx, eax ; mov rdx, rbp ; call r15
0x000000000043465a : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042ae3d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041ea78 : out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x0000000000415d3e : out dx, eax ; pop rbx ; ret
0x000000000042dc33 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042dc48 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042dc5d : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043cf63 : out dx, eax ; ret 0xf66
0x000000000040995d : out dx, eax ; ret 0xffff
0x000000000042f14c : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042f135 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042f11e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042dbda : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000428d4e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043b38e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x000000000041d3de : outsb dx, byte ptr [rsi] ; fdiv st(7), st(0) ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000004bde89 : outsb dx, byte ptr [rsi] ; hlt ; call qword ptr [rax]
0x00000000004ba483 : outsb dx, byte ptr [rsi] ; ja 0x4ba40c ; ret 0x48f
0x000000000041d52e : outsb dx, byte ptr [rsi] ; ret 0x2a
0x00000000004099de : outsb dx, byte ptr [rsi] ; ret 0xffff
0x00000000004b81c4 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x00000000004261fa : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x00000000004c48cd : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; jo 0x4c48dd ; cli ; jmp rdx
0x00000000004bfb51 : outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rax]
0x0000000000420d68 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000042681e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000042ef4d : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042efed : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000464f6a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042ef52 : outsd dx, dword ptr [rsi] ; ret
0x00000000004b8b86 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x00000000004315e7 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x000000000042eff2 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x0000000000464fba : outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000004415cd : outsd dx, dword ptr [rsi] ; sar ch, 0xff ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004b8b85 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000422062 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000465cc4 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x0000000000465caf : pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000422061 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004b9f85 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004b9f86 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000422f0f : pmovmskb edx, mm4 ; test edx, edx ; je 0x422f23 ; bsf eax, edx ; ret
0x0000000000441e45 : pop r10 ; ret
0x00000000004ba40f : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000041ddea : pop r12 ; jmp rax
0x000000000041fb9c : pop r12 ; jmp rcx
0x000000000043f5bf : pop r12 ; mov esi, 2 ; jmp rax
0x000000000043f5d9 : pop r12 ; mov esi, 3 ; jmp rax
0x0000000000472a5d : pop r12 ; pop r13 ; jmp rax
0x000000000048e4ac : pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048e42a : pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x0000000000440d8b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004020f3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004014cf : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004015f2 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040f4d5 : pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004059a6 : pop r12 ; pop r13 ; ret
0x000000000047aaec : pop r12 ; pop r14 ; ret
0x000000000046a8c1 : pop r12 ; pop rbp ; ret
0x000000000040060a : pop r12 ; ret
0x0000000000472a5f : pop r13 ; jmp rax
0x000000000048e4ae : pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048e42c : pop r13 ; pop r14 ; fmulp st(1) ; ret
0x0000000000440d8d : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004020f5 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004014d1 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004015f4 : pop r13 ; pop r14 ; ret
0x000000000040f4d7 : pop r13 ; pop rbp ; ret
0x00000000004059a8 : pop r13 ; ret
0x000000000048e4b0 : pop r14 ; fmul st(0) ; ret
0x000000000048e42e : pop r14 ; fmulp st(1) ; ret
0x0000000000440d8f : pop r14 ; pop r15 ; jmp rax
0x00000000004020f7 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004014d3 : pop r14 ; pop r15 ; ret
0x00000000004015f6 : pop r14 ; ret
0x0000000000440d91 : pop r15 ; jmp rax
0x00000000004020f9 : pop r15 ; pop rbp ; ret
0x00000000004014d5 : pop r15 ; ret
0x00000000004186e1 : pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x00000000004c4b38 : pop rax ; adc al, 0xfa ; jmp rdx
0x00000000004a29c5 : pop rax ; clc ; inc dword ptr [rax + 0x5a] ; clc ; jmp rax
0x00000000004bfd88 : pop rax ; je 0x4bfd83 ; call qword ptr [rdx]
0x00000000004186e2 : pop rax ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000477b76 : pop rax ; pop rdx ; pop rbx ; ret
0x00000000004c3b28 : pop rax ; ret
0x00000000004099f4 : pop rax ; ret 0xffff
0x00000000004c36e5 : pop rbp ; add byte ptr [rax], al ; cmp bl, bl ; clc ; call qword ptr [rdx]
0x000000000047886a : pop rbp ; enter -0x74b8, 0x14 ; ret
0x000000000041d402 : pop rbp ; jmp rax
0x0000000000400963 : pop rbp ; mov byte ptr [rip + 0x2ca1f5], 1 ; ret
0x0000000000418b02 : pop rbp ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x00000000004008df : pop rbp ; mov edi, 0x6cab50 ; jmp rax
0x000000000041dde9 : pop rbp ; pop r12 ; jmp rax
0x000000000041fb9b : pop rbp ; pop r12 ; jmp rcx
0x000000000043f5be : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000043f5d8 : pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x0000000000472a5c : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000048e4ab : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048e429 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x0000000000440d8a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004014ce : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004015f1 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004059a5 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047aaeb : pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000400609 : pop rbp ; pop r12 ; ret
0x000000000048e4af : pop rbp ; pop r14 ; fmul st(0) ; ret
0x000000000048e42d : pop rbp ; pop r14 ; fmulp st(1) ; ret
0x0000000000440d8e : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x00000000004020f6 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004014d2 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004015f5 : pop rbp ; pop r14 ; ret
0x000000000040f4d8 : pop rbp ; pop rbp ; ret
0x0000000000479ad8 : pop rbp ; pop rbx ; ret
0x00000000004004d1 : pop rbp ; ret
0x0000000000478872 : pop rbp ; ror byte ptr [rax - 0x77], 0x14 ; ret
0x00000000004bd355 : pop rbp ; std ; jmp rax
0x0000000000412d5c : pop rbp ; sub rax, rdx ; ret
0x00000000004c7156 : pop rbx ; add cl, byte ptr [rdx] ; ret
0x00000000004b7758 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000043da8c : pop rbx ; and eax, 0x3fc00 ; ret
0x000000000043dabf : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004b7756 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000048719a : pop rbx ; jmp rax
0x000000000041128e : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000473f37 : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x000000000043db23 : pop rbx ; mov eax, eax ; ret
0x000000000046248a : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000459aee : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000475ece : pop rbx ; mov edi, 0x6ca140 ; jmp rax
0x0000000000414ef6 : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000415066 : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000462d17 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041f8b8 : pop rbx ; mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x000000000040f4d4 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000046a8c0 : pop rbx ; pop r12 ; pop rbp ; ret
0x000000000041d401 : pop rbx ; pop rbp ; jmp rax
0x000000000041dde8 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000041fb9a : pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000043f5bd : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000043f5d7 : pop rbx ; pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x0000000000472a5b : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000004015f0 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004059a4 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047aaea : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000400608 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004004d0 : pop rbx ; pop rbp ; ret
0x0000000000412d5b : pop rbx ; pop rbp ; sub rax, rdx ; ret
0x0000000000400d15 : pop rbx ; ret
0x00000000004baa40 : pop rbx ; ret 0x6f9
0x00000000004bd351 : pop rbx ; std ; call qword ptr [rax - 0x1f0002a3]
0x0000000000466129 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000043fe8a : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000047a318 : pop rbx ; xor esi, esi ; mov edi, dword ptr [rip + 0x2516a3] ; jmp rax
0x00000000004c3315 : pop rcx ; add byte ptr [rax], al ; js 0x4c32e9 ; std ; call qword ptr [rbx]
0x00000000004bf4b1 : pop rcx ; cmc ; jmp qword ptr [rcx]
0x0000000000473cf9 : pop rcx ; dec dword ptr [rax + 0x63] ; ret
0x00000000004883ef : pop rcx ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000490db3 : pop rcx ; ret
0x000000000042f828 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000442780 : pop rdi ; add byte ptr [r8 - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x000000000042b4cd : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000431249 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431059 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004b9cfe : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000440d92 : pop rdi ; jmp rax
0x00000000004b8cc1 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x000000000049d89e : pop rdi ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000430e79 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430ca9 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430da5 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000430cf1 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004020fa : pop rdi ; pop rbp ; ret
0x00000000004014d6 : pop rdi ; ret
0x00000000004bd359 : pop rdi ; std ; jmp rax
0x0000000000444d8e : pop rdx ; add byte ptr [rdi + 0x6cb6d0], r15b ; call rax
0x0000000000487c02 : pop rdx ; and al, 0 ; ret
0x00000000004a29c9 : pop rdx ; clc ; jmp rax
0x00000000004b98e1 : pop rdx ; je 0x4b98ab ; ret 0xacfc
0x00000000004ba8a7 : pop rdx ; out -0xb, eax ; mov ch, 0xab ; ret
0x0000000000441e44 : pop rdx ; pop r10 ; ret
0x0000000000477b77 : pop rdx ; pop rbx ; ret
0x0000000000441e69 : pop rdx ; pop rsi ; ret
0x0000000000441e46 : pop rdx ; ret
0x00000000004ba410 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000042b3ce : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000472f33 : pop rsi ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000042574c : pop rsi ; add dword ptr [rax], eax ; ret
0x000000000048e4b1 : pop rsi ; fmul st(0) ; ret
0x000000000048e42f : pop rsi ; fmulp st(1) ; ret
0x0000000000467a33 : pop rsi ; mov ebp, 0x8948004b ; ret
0x000000000042bed5 : pop rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000440d90 : pop rsi ; pop r15 ; jmp rax
0x00000000004020f8 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004014d4 : pop rsi ; pop r15 ; ret
0x00000000004015f7 : pop rsi ; ret
0x0000000000428f60 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004c36b5 : pop rsp ; add byte ptr [rax], al ; cmp bl, bl ; clc ; call qword ptr [rbx]
0x0000000000429c60 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x000000000047b514 : pop rsp ; and al, 0x78 ; call r12
0x000000000041ddeb : pop rsp ; jmp rax
0x000000000041fb9d : pop rsp ; jmp rcx
0x000000000043f5c0 : pop rsp ; mov esi, 2 ; jmp rax
0x000000000043f5da : pop rsp ; mov esi, 3 ; jmp rax
0x00000000004224c0 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000472a5e : pop rsp ; pop r13 ; jmp rax
0x000000000048e4ad : pop rsp ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048e42b : pop rsp ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x0000000000440d8c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004020f4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004014d0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004015f3 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040f4d6 : pop rsp ; pop r13 ; pop rbp ; ret
0x00000000004059a7 : pop rsp ; pop r13 ; ret
0x000000000047aaed : pop rsp ; pop r14 ; ret
0x000000000046a8c2 : pop rsp ; pop rbp ; ret
0x00000000004c771c : pop rsp ; popfq ; add byte ptr [rax], al ; loopne 0x4c7731 ; cld ; call qword ptr [rdx]
0x0000000000474504 : pop rsp ; push rsi ; add r8b, bpl ; ret
0x000000000040060b : pop rsp ; ret
0x0000000000417767 : pop rsp ; ret 0x4b
0x0000000000417f80 : pop rsp ; sub eax, dword ptr ss:[rax] ; test rax, rax ; je 0x417f94 ; call rax
0x00000000004c76d5 : popfq ; add byte ptr [rax], al ; call 0x114c72eb
0x00000000004c7705 : popfq ; add byte ptr [rax], al ; call 0x114c731b
0x00000000004c7704 : popfq ; add byte ptr [rax], al ; call 0x114c731c
0x00000000004c76ed : popfq ; add byte ptr [rax], al ; loopne 0x4c7700 ; cld ; call qword ptr [rdx]
0x00000000004c771d : popfq ; add byte ptr [rax], al ; loopne 0x4c7730 ; cld ; call qword ptr [rdx]
0x000000000049ae59 : popfq ; ret 0xf45
0x0000000000493a10 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045ee99 : popfq ; sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x0000000000434722 : psllq mm1, qword ptr [r15] ; jg 0x43473d ; ret
0x0000000000434723 : psllq mm1, qword ptr [rdi] ; jg 0x43473c ; ret
0x000000000043aa56 : psllq mm1, qword ptr [rdi] ; jg 0x43aa6a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043aa55 : psllq mm1, qword ptr [rdi] ; jg 0x43aa6b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043aab7 : psllq mm1, qword ptr [rdi] ; jg 0x43aacc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004a308d : psubw mm7, mm7 ; ret 0xf90e
0x000000000045213f : push -0x76000005 ; ret 0x8941
0x000000000047b3ce : push -0x7a000006 ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000486fa6 : push -0x7ab70007 ; ror byte ptr [rdi], 0x84 ; ret
0x00000000004805ff : push -0x7c000006 ; ret 0x8908
0x000000000048511a : push -0x9000007 ; ret 0xf02
0x000000000043b374 : push -0x9ffffff ; ret 0x7501
0x000000000049b7a8 : push 0x48 ; add esp, 0x18 ; ret
0x000000000041ed0c : push 0x48ee894c ; mov edi, ebx ; call rax
0x00000000004bd2a5 : push 0x6a10fffd ; std ; jmp rax
0x00000000004ba482 : push 0x6e ; ja 0x4ba40d ; ret 0x48f
0x00000000004bd2a9 : push 0xfd ; jmp rax
0x0000000000484fac : push 0xffffff9 ; xchg eax, esp ; ret
0x0000000000459a31 : push qword ptr [r9] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x00000000004a2fc7 : push qword ptr [rax + 0x40fff919] ; sbb ecx, edi ; jmp rax
0x00000000004a2daf : push qword ptr [rax + 0x40fff91c] ; sbb al, 0xf9 ; call rax
0x00000000004bd32b : push qword ptr [rax + 0x46] ; std ; inc eax ; std ; call qword ptr [rax]
0x00000000004a292b : push qword ptr [rax + 0x6b] ; clc ; call qword ptr [rax]
0x00000000004a2c0f : push qword ptr [rax - 0x20] ; clc ; push qword ptr [rax] ; loop 0x4a2c17 ; call qword ptr [rax]
0x00000000004a2caf : push qword ptr [rax - 0x21] ; clc ; push qword ptr [rax] ; loope 0x4a2cb7 ; call qword ptr [rax]
0x00000000004a2d3f : push qword ptr [rax - 0x28] ; clc ; inc eax ; fprem ; call qword ptr [rax]
0x00000000004a2d53 : push qword ptr [rax - 0x36] ; clc ; inc eax ; retf ; clc ; call qword ptr [rax]
0x00000000004a32e7 : push qword ptr [rax - 0x3f00068a] ; jbe 0x4a32f0 ; call rax
0x00000000004a29a3 : push qword ptr [rax - 0x3f0007b9] ; clc ; call rax
0x00000000004bd317 : push qword ptr [rax - 0x66] ; std ; jmp qword ptr [rax]
0x00000000004a297b : push qword ptr [rax - 0x77] ; clc ; inc eax ; mov bh, al ; call qword ptr [rax]
0x00000000004a2833 : push qword ptr [rax] ; add al, bh ; inc dword ptr [rax] ; add eax, edi ; call rax
0x00000000004a2bf7 : push qword ptr [rax] ; in al, -8 ; call qword ptr [rax]
0x00000000004a2c9b : push qword ptr [rax] ; in eax, -8 ; call qword ptr [rax]
0x00000000004a2943 : push qword ptr [rax] ; jne 0x4a2943 ; call rax
0x00000000004a2c13 : push qword ptr [rax] ; loop 0x4a2c13 ; call qword ptr [rax]
0x00000000004a2cb3 : push qword ptr [rax] ; loope 0x4a2cb3 ; call qword ptr [rax]
0x00000000004a29c3 : push qword ptr [rax] ; pop rax ; clc ; inc dword ptr [rax + 0x5a] ; clc ; jmp rax
0x00000000004bd2a3 : push qword ptr [rax] ; push 0x6a10fffd ; std ; jmp rax
0x000000000043ccf8 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x0000000000410deb : push qword ptr [rbp + 2] ; pop rbx ; ret
0x00000000004156ed : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000463fb5 : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000004a2f23 : push qword ptr [rbp + rbx + 0x1d44fff9] ; stc ; call rsp
0x0000000000463f5d : push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000415d91 : push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x0000000000442012 : push qword ptr [rbp - 0xd] ; xor eax, eax ; leave ; ret
0x0000000000415d39 : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x000000000046627a : push qword ptr [rbx + rdx*2 - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret 0xe883
0x00000000004bd4bb : push qword ptr [rbx + rdx*8] ; std ; call rsp
0x00000000004a2aeb : push qword ptr [rcx + 0x31fff8c1] ; ret 0xfff8
0x00000000004a2af3 : push qword ptr [rcx + 0x41fff8c2] ; ret
0x00000000004112c1 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004a2aef : push qword ptr [rcx] ; ret 0xfff8
0x0000000000473e29 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000459a32 : push qword ptr [rcx] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x000000000040dbfd : push qword ptr [rdi + 0x20] ; ret
0x000000000043eb08 : push qword ptr [rdi + 0x35] ; ret
0x000000000043ebac : push qword ptr [rdi + 0x41] ; add rsp, 0x60 ; pop rbx ; ret
0x000000000043e92a : push qword ptr [rdi + 3] ; ret
0x000000000043e979 : push qword ptr [rdi + 4] ; ret
0x000000000046a1ff : push qword ptr [rdi + 6] ; ret
0x000000000044efa5 : push qword ptr [rdi + 8] ; ret
0x0000000000469e1c : push qword ptr [rdi + 9] ; pop rbx ; ret
0x0000000000415216 : push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x000000000049ebc1 : push qword ptr [rdx + rcx - 0x42] ; salc ; add r8b, bpl ; ret 0xfa25
0x00000000004a308b : push qword ptr [rdx] ; psubw mm7, mm7 ; ret 0xf90e
0x00000000004bd87f : push qword ptr [rdx] ; salc ; std ; jmp qword ptr [rdi]
0x00000000004a2df7 : push qword ptr [rsi + 0x46fff91b] ; sbb edi, ecx ; call rsi
0x000000000046a0cd : push qword ptr [rsi + rsi - 0x77] ; ret 0xe283
0x00000000004a2b47 : push qword ptr [rsi - 0x3b] ; clc ; call qword ptr [rsi]
0x0000000000414e4f : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000046308a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000004166d1 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000041aa60 : push rax ; adc dh, dh ; ret 0xf0f
0x0000000000414e50 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000043e8d0 : push rax ; add byte ptr [rax], al ; ret
0x0000000000425365 : push rax ; add eax, ebp ; add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000473f02 : push rax ; and eax, 0x89485300 ; ret
0x0000000000444048 : push rax ; call rbx
0x00000000004a29b3 : push rax ; clc ; inc dword ptr [rax] ; push rdx ; clc ; call qword ptr [rax]
0x000000000040fd46 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004bd313 : push rax ; cwde ; std ; push qword ptr [rax - 0x66] ; std ; jmp qword ptr [rax]
0x00000000004a2cbb : push rax ; in al, -8 ; call rax
0x00000000004a2cfc : push rax ; in al, -8 ; inc dword ptr [rax - 0x1a] ; clc ; call qword ptr [rax]
0x00000000004a2c1b : push rax ; in eax, -8 ; call rax
0x00000000004a32f7 : push rax ; jbe 0x4a32fc ; inc dword ptr [rax] ; ja 0x4a3300 ; call qword ptr [rax]
0x00000000004a33a3 : push rax ; jge 0x4a33a4 ; call qword ptr [rax]
0x00000000004a337f : push rax ; jl 0x4a3380 ; call qword ptr [rax]
0x00000000004a33c3 : push rax ; jle 0x4a33c4 ; call qword ptr [rax]
0x0000000000477a7c : push rax ; jmp qword ptr [rax]
0x000000000049c203 : push rax ; jne 0x49c1fc ; xor eax, eax ; add rsp, 8 ; ret
0x000000000049c263 : push rax ; jne 0x49c25c ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004a334f : push rax ; jnp 0x4a3354 ; inc dword ptr [rax] ; jl 0x4a3358 ; call qword ptr [rax]
0x00000000004a2c37 : push rax ; jrcxz 0x4a2c37 ; call rax
0x00000000004a2c98 : push rax ; jrcxz 0x4a2c9a ; push qword ptr [rax] ; in eax, -8 ; call qword ptr [rax]
0x00000000004a2bf4 : push rax ; loop 0x4a2bf6 ; push qword ptr [rax] ; in al, -8 ; call qword ptr [rax]
0x00000000004a2c30 : push rax ; loopne 0x4a2c2e ; call qword ptr [rax]
0x00000000004bd384 : push rax ; mov bl, 0xfd ; call qword ptr [rax - 0x2f00024b]
0x000000000044611a : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000487616 : push rax ; mov rax, rbx ; pop rbx ; ret
0x000000000044aed8 : push rax ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x0000000000418a42 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x000000000041b3a2 : push rax ; or dh, dh ; ret 0x7404
0x000000000041b31d : push rax ; or dh, dh ; ret 0xf04
0x00000000004223cc : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a2c80 : push rax ; out -8, eax ; jmp qword ptr [rax]
0x00000000004a2bff : push rax ; out -8, eax ; jmp rax
0x00000000004bfb50 : push rax ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rax]
0x0000000000465e8e : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044611c : push rax ; push rsp ; ret
0x000000000041d27c : push rax ; ret 0x41
0x00000000004a2bb7 : push rax ; ret 0xfff8
0x00000000004a2fb0 : push rax ; sbb al, 0xf9 ; jmp rax
0x00000000004166c6 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000046402a : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004c87e1 : push rax ; std ; jmp qword ptr [rbx]
0x00000000004bd374 : push rax ; stosb byte ptr [rdi], al ; std ; call qword ptr [rax - 0x2f000254]
0x0000000000415d8d : push rax ; xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x000000000049e2f7 : push rbp ; adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000478fcf : push rbp ; add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x000000000043fcd1 : push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00000000004001be : push rbp ; add byte ptr [rcx], ch ; ret 0x3a09
0x0000000000473d68 : push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000046b4e3 : push rbp ; enter -0x76bc, 0x45 ; mov ah, 0xe8 ; ret 0xfd34
0x0000000000494b58 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004c5b46 : push rbp ; ret
0x0000000000464791 : push rbp ; ror byte ptr [rcx + rcx*4 - 1], 0x45 ; xor eax, eax ; call rbx
0x000000000041afac : push rbp ; sbb dword ptr [rdx], ecx ; call 0x417206
0x000000000042568a : push rbp ; xor rax, rax ; ret
0x0000000000400b19 : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047a3a4 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046cf26 : push rbx ; add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x0000000000422da9 : push rbx ; add qword ptr [rax], rax ; ret
0x000000000044ca52 : push rbx ; je 0x44ca69 ; cmp esi, 3 ; je 0x44ca69 ; pop rbx ; ret
0x0000000000463f29 : push rbx ; je 0x463f8d ; pop rbp ; pop r12 ; ret
0x0000000000463fce : push rbx ; je 0x464032 ; pop rbp ; pop r12 ; ret
0x000000000046210a : push rbx ; or al, 0xf6 ; ret 0xf04
0x0000000000416f5a : push rbx ; or byte ptr [rax + 0x29], cl ; ret 0x149
0x000000000041529d : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x000000000040d749 : push rbx ; ret
0x00000000004bd870 : push rbx ; salc ; std ; jmp qword ptr [rax]
0x000000000041a622 : push rbx ; sub byte ptr [rax - 0x77], cl ; and cl, bpl ; ret
0x00000000004141f4 : push rbx ; sub cl, ch ; ret 0xfffe
0x0000000000412371 : push rbx ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000004b98dc : push rbx ; xchg eax, edx ; jae 0x4b98bb ; push rsi ; pop rdx ; je 0x4b98b0 ; ret 0xacfc
0x00000000004474b5 : push rcx ; add al, bpl ; ret
0x00000000004b8b65 : push rcx ; call qword ptr [rsi]
0x00000000004c54f1 : push rcx ; cli ; jmp rsp
0x000000000043503d : push rcx ; jl 0x43508e ; adc dword ptr [rcx - 1], edi ; ret
0x00000000004351a4 : push rcx ; jl 0x4351f5 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000049cf0f : push rcx ; or byte ptr [rbp + 0x39], cl ; ret 0x4776
0x0000000000468cbb : push rcx ; ret
0x0000000000489555 : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000043af9a : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x0000000000434889 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000044e372 : push rdi ; add byte ptr [rax - 0x77], cl ; ret 0x8840
0x000000000043b04c : push rdi ; add eax, 0xc478d48 ; ret
0x000000000049aa5d : push rdi ; add ecx, dword ptr [rax + 0x63] ; ret
0x0000000000474479 : push rdi ; add r8b, bpl ; call rdx
0x0000000000430b38 : push rdi ; clc ; ret
0x0000000000430cb0 : push rdi ; cld ; ret
0x00000000004317d7 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434169 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000467e71 : push rdi ; cmp ah, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xfb57
0x00000000004340e9 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000433f3a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000414d94 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000433fca : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000045c968 : push rdi ; or al, 0x83 ; ret
0x000000000045c8eb : push rdi ; or al, 0xf6 ; ret 0xf08
0x0000000000479aca : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000047f5da : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000479ad1 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000043b230 : push rdi ; or eax, 0x1c478d48 ; ret
0x0000000000486fa5 : push rdi ; push -0x7ab70007 ; ror byte ptr [rdi], 0x84 ; ret
0x000000000042ef4e : push rdi ; ret
0x0000000000401045 : push rdi ; ret 0
0x000000000042efee : push rdi ; ret 0xff3
0x00000000004319d7 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004311fa : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x00000000004315d7 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004437c9 : push rdi ; sub byte ptr [rax], al ; pop rbx ; ret
0x000000000041075f : push rdi ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x0000000000464f6b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000004a3057 : push rdx ; adc eax, 0x1562fff9 ; stc ; jmp rdx
0x00000000004c2bd5 : push rdx ; add byte ptr [rax], al ; or byte ptr [rax - 8], bh ; call qword ptr [rcx]
0x000000000046a55a : push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a29b9 : push rdx ; clc ; call qword ptr [rax]
0x00000000004c51e5 : push rdx ; ret
0x00000000004a2e84 : push rdx ; sbb bh, cl ; jmp rdx
0x0000000000446116 : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x000000000042dc34 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043d539 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x43d590 ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004634f2 : push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000004c3055 : push rsi ; add byte ptr [rax], al ; js 0x4c2ffa ; clc ; jmp rbx
0x0000000000434b21 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000434b91 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000043a9e5 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000434ab1 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000043a983 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x0000000000474505 : push rsi ; add r8b, bpl ; ret
0x000000000042dc49 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000430c62 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004313d1 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431005 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004311e5 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004313c5 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430e25 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004ba480 : push rsi ; cli ; push 0x6e ; ja 0x4ba40f ; ret 0x48f
0x000000000043c836 : push rsi ; cmc ; sub eax, edx ; ret
0x000000000043c826 : push rsi ; hlt ; sub eax, edx ; ret
0x000000000043c7f6 : push rsi ; int1 ; sub eax, edx ; ret
0x000000000042bf5d : push rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000004b98e0 : push rsi ; pop rdx ; je 0x4b98ac ; ret 0xacfc
0x000000000041e2f2 : push rsi ; ret
0x000000000041d556 : push rsi ; ret 0x2a
0x000000000048511d : push rsi ; ret 0xf02
0x000000000045e408 : push rsi ; ret 0xf10
0x000000000043c806 : push rsi ; sub eax, edx ; ret
0x000000000042dc5e : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041ae9c : push rsp ; and al, 0x10 ; call rax
0x00000000004644e3 : push rsp ; and al, 0x18 ; lea r9, qword ptr [rsp + 0x10] ; call rbx
0x00000000004660ee : push rsp ; and al, 0x28 ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000446e01 : push rsp ; and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r12
0x000000000044648e : push rsp ; and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000466751 : push rsp ; and al, 0x48 ; mov rdi, r12 ; call rbx
0x000000000044aed6 : push rsp ; and al, 0x50 ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x000000000041da2a : push rsp ; and al, 0x68 ; call rax
0x000000000041ed0a : push rsp ; and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x0000000000447b2c : push rsp ; and al, 0x78 ; mov rdi, qword ptr [rsp + 0x28] ; call r14
0x000000000044a716 : push rsp ; and al, 0x78 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000490ee0 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000490e9a : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000041a7a5 : push rsp ; and eax, 0x950f4100 ; ret
0x00000000004a29bd : push rsp ; clc ; jmp qword ptr [rax]
0x00000000004c6714 : push rsp ; lea eax, dword ptr [rax] ; add byte ptr [rax], ch ; sbb bl, bh ; call qword ptr [rax]
0x00000000004c3314 : push rsp ; pop rcx ; add byte ptr [rax], al ; js 0x4c32ea ; std ; call qword ptr [rbx]
0x000000000044611d : push rsp ; ret
0x00000000004413e8 : push rsp ; ret 0xfffd
0x0000000000428c20 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004c76a5 : pushfq ; add byte ptr [rax], al ; call 0x114c72bb
0x00000000004c76bd : pushfq ; add byte ptr [rax], al ; loopne 0x4c76d0 ; cld ; call qword ptr [rdx]
0x00000000004c89a3 : pushfq ; add ebp, esi ; add al, byte ptr [rax] ; ret 0x503
0x0000000000446610 : pushfq ; and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000045b8ac : pushfq ; jmp qword ptr [rsi]
0x000000000041432c : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000429920 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000467bb3 : pushfq ; ret 0xb60f
0x000000000049ae20 : pushfq ; ret 0xf45
0x0000000000413260 : pushfq ; ret 2
0x00000000004a2d38 : rcl ch, 1 ; clc ; jmp qword ptr [rax]
0x00000000004b98df : rcl dword ptr [rsi + 0x5a], cl ; je 0x4b98ad ; ret 0xacfc
0x00000000004b98db : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x4b98b1 ; ret 0xacfc
0x000000000041beac : rcr al, 0x2a ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000044162c : rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004626da : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000043fe8c : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000046248c : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000479ad7 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000441f90 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x00000000004177af : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000041e22e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047aae9 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000040ec1e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000049baf7 : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax + rax] ; ret
0x000000000045b8db : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x000000000041dce3 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000417a4d : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004a2fac : rcr byte ptr [rcx + rdi*8], 0xff ; push rax ; sbb al, 0xf9 ; jmp rax
0x00000000004b9cfd : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004a2d44 : rcr cl, 0xf8 ; call qword ptr [rax]
0x0000000000477fd9 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x000000000043f769 : rcr esi, cl ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000432026 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004005d9 : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e2 ; ret
0x00000000004002e1 : ret
0x0000000000400624 : ret 0
0x00000000004adbe0 : ret 0x10
0x000000000044ec1b : ret 0x100
0x00000000004620bf : ret 0x107
0x0000000000475906 : ret 0x10eb
0x000000000041b652 : ret 0x110
0x0000000000479aac : ret 0x114d
0x00000000004468c8 : ret 0x1189
0x000000000044565b : ret 0x11e9
0x0000000000482bda : ret 0x12
0x0000000000473d6c : ret 0x1272
0x000000000049ccc3 : ret 0x1374
0x000000000046d21f : ret 0x1376
0x000000000046a3a1 : ret 0x1477
0x000000000041ad41 : ret 0x148
0x0000000000415da2 : ret 0x149
0x00000000004199f5 : ret 0x14c
0x00000000004353fc : ret 0x14d
0x0000000000406f7a : ret 0x166
0x000000000040687a : ret 0x16d
0x00000000004230da : ret 0x17
0x0000000000435339 : ret 0x180f
0x000000000044e6b6 : ret 0x1874
0x00000000004256f5 : ret 0x1876
0x00000000004178e5 : ret 0x18eb
0x0000000000467745 : ret 0x190
0x0000000000488162 : ret 0x1a75
0x000000000040297a : ret 0x1ac
0x00000000004ba25a : ret 0x1ad4
0x00000000004b89ed : ret 0x1b49
0x000000000041d20f : ret 0x1be
0x00000000004af8b0 : ret 0x1d4
0x00000000004b0048 : ret 0x1d5
0x0000000000400cc5 : ret 0x1d89
0x0000000000447213 : ret 0x1e76
0x0000000000448da7 : ret 0x1f0f
0x000000000041de6e : ret 0x1f76
0x000000000044eb37 : ret 0x200
0x000000000044640c : ret 0x2176
0x000000000049df97 : ret 0x22
0x0000000000422e78 : ret 0x2288
0x000000000049f676 : ret 0x22b3
0x000000000042f152 : ret 0x2373
0x000000000043eaa7 : ret 0x23e8
0x00000000004ae8b8 : ret 0x24
0x000000000047d0fa : ret 0x24d0
0x000000000046df76 : ret 0x25
0x00000000004148c9 : ret 0x2501
0x000000000041d3bd : ret 0x2575
0x00000000004738aa : ret 0x2584
0x000000000046aeea : ret 0x25e0
0x00000000004675b6 : ret 0x2642
0x0000000000401316 : ret 0x2773
0x0000000000464d66 : ret 0x2774
0x000000000043f498 : ret 0x28
0x0000000000430906 : ret 0x280f
0x00000000004256e5 : ret 0x2876
0x000000000047eb78 : ret 0x28f5
0x000000000048549d : ret 0x2941
0x00000000004107cd : ret 0x2948
0x000000000049adaa : ret 0x2949
0x0000000000432071 : ret 0x294c
0x00000000004128db : ret 0x294d
0x000000000041d514 : ret 0x2a
0x000000000041dd7b : ret 0x2a75
0x000000000041e59a : ret 0x2ab1
0x000000000041d242 : ret 0x2ae3
0x00000000004177ca : ret 0x2b28
0x000000000043edca : ret 0x2b3
0x000000000041046f : ret 0x2b48
0x00000000004458fe : ret 0x2b49
0x00000000004160f5 : ret 0x2b60
0x000000000043d9f2 : ret 0x2b77
0x000000000041b0dc : ret 0x2c75
0x000000000043d697 : ret 0x2c76
0x0000000000482b64 : ret 0x2e
0x0000000000461ca5 : ret 0x2e66
0x000000000041bcab : ret 0x30be
0x00000000004457e5 : ret 0x3101
0x0000000000403726 : ret 0x3145
0x000000000046f322 : ret 0x314c
0x00000000004aeda8 : ret 0x33
0x000000000046a297 : ret 0x33e8
0x0000000000403ed1 : ret 0x348
0x000000000044b83b : ret 0x349
0x00000000004881b8 : ret 0x357e
0x00000000004b9b3a : ret 0x3827
0x000000000047b2c2 : ret 0x3840
0x000000000040fe8f : ret 0x3841
0x000000000043fbef : ret 0x3845
0x00000000004256d5 : ret 0x3876
0x0000000000442789 : ret 0x3880
0x00000000004151ab : ret 0x389
0x00000000004b81c6 : ret 0x38ae
0x0000000000479f06 : ret 0x38b
0x000000000044f111 : ret 0x3948
0x000000000041c7db : ret 0x3949
0x000000000044c656 : ret 0x394c
0x0000000000451fd8 : ret 0x394d
0x000000000043ce12 : ret 0x3a01
0x00000000004001c1 : ret 0x3a09
0x000000000042f13b : ret 0x3a73
0x000000000044c163 : ret 0x3a76
0x0000000000441f81 : ret 0x3b01
0x000000000046682a : ret 0x3bba
0x000000000040e5ee : ret 0x3ce8
0x0000000000445025 : ret 0x3d83
0x00000000004696e2 : ret 0x3e9
0x000000000049ab2f : ret 0x3ee9
0x0000000000418ff2 : ret 0x4007
0x0000000000465f36 : ret 0x408d
0x000000000047783f : ret 0x40bf
0x000000000041d27d : ret 0x41
0x0000000000445410 : ret 0x4101
0x00000000004545f0 : ret 0x4108
0x00000000004560b8 : ret 0x4110
0x000000000041befc : ret 0x4117
0x000000000046e4bc : ret 0x412f
0x000000000043eefd : ret 0x4164
0x00000000004461de : ret 0x41c3
0x000000000042daca : ret 0x4266
0x0000000000467842 : ret 0x428d
0x000000000044c15a : ret 0x4372
0x000000000044cbeb : ret 0x4389
0x00000000004452cf : ret 0x438b
0x00000000004a3a48 : ret 0x43e4
0x00000000004114c3 : ret 0x4401
0x0000000000454b77 : ret 0x440f
0x0000000000463ca7 : ret 0x4410
0x000000000047adb1 : ret 0x448d
0x00000000004890b5 : ret 0x44c6
0x0000000000461a22 : ret 0x4502
0x000000000046ceb8 : ret 0x4574
0x0000000000462568 : ret 0x45f6
0x00000000004b8cc4 : ret 0x474c
0x000000000049cf13 : ret 0x4776
0x00000000004599e3 : ret 0x47e9
0x0000000000447c95 : ret 0x4801
0x000000000042bd41 : ret 0x4802
0x000000000042be1d : ret 0x4803
0x00000000004042b0 : ret 0x4804
0x000000000042bded : ret 0x4805
0x000000000042bdd5 : ret 0x4806
0x0000000000422e03 : ret 0x4808
0x000000000044e6c4 : ret 0x4809
0x0000000000457ea4 : ret 0x480f
0x000000000041a8a9 : ret 0x4810
0x000000000044c030 : ret 0x4811
0x0000000000452622 : ret 0x481e
0x000000000041a7eb : ret 0x4820
0x000000000045b0ec : ret 0x482d
0x0000000000443bdf : ret 0x4830
0x0000000000401312 : ret 0x4838
0x000000000042d9d6 : ret 0x4840
0x000000000041be16 : ret 0x4874
0x0000000000422f18 : ret 0x48c3
0x00000000004669dd : ret 0x48d
0x00000000004730a4 : ret 0x48e9
0x00000000004ba486 : ret 0x48f
0x0000000000402fbe : ret 0x4901
0x000000000044b413 : ret 0x4904
0x000000000042c05e : ret 0x4906
0x0000000000456728 : ret 0x4908
0x0000000000469779 : ret 0x4909
0x0000000000422172 : ret 0x4910
0x00000000004203e6 : ret 0x4920
0x000000000041f360 : ret 0x4930
0x000000000047dcb4 : ret 0x4976
0x0000000000417768 : ret 0x4b
0x000000000046bfe2 : ret 0x4b30
0x0000000000473e03 : ret 0x4b55
0x00000000004bba18 : ret 0x4baf
0x0000000000405935 : ret 0x4c01
0x000000000042bfa1 : ret 0x4c02
0x000000000044bf1f : ret 0x4c04
0x00000000004851e5 : ret 0x4c08
0x0000000000451d16 : ret 0x4c40
0x0000000000447ee0 : ret 0x4c88
0x00000000004462f1 : ret 0x4d02
0x00000000004b9ee7 : ret 0x4e27
0x0000000000468f97 : ret 0x4eb
0x0000000000444098 : ret 0x4ee9
0x0000000000444eee : ret 0x4f74
0x000000000044610f : ret 0x4fe0
0x00000000004c89a8 : ret 0x503
0x000000000042f124 : ret 0x5173
0x000000000044e4c3 : ret 0x527e
0x000000000040fb9a : ret 0x530
0x00000000004622e8 : ret 0x5389
0x0000000000485237 : ret 0x53e8
0x000000000045a5db : ret 0x53e9
0x000000000047b04d : ret 0x5438
0x0000000000490f06 : ret 0x5488
0x000000000044c4da : ret 0x5489
0x000000000045a233 : ret 0x548b
0x00000000004b814c : ret 0x5508
0x000000000040553f : ret 0x5525
0x0000000000420852 : ret 0x575
0x000000000046d22d : ret 0x576
0x00000000004ba418 : ret 0x5803
0x000000000040e7ab : ret 0x589
0x00000000004b7e20 : ret 0x591c
0x00000000004b8b87 : ret 0x5ae4
0x00000000004491d1 : ret 0x5c77
0x0000000000458cdb : ret 0x5fe8
0x00000000004ba8b2 : ret 0x62c1
0x000000000045baa3 : ret 0x6348
0x0000000000411ae2 : ret 0x6349
0x000000000047e767 : ret 0x63e8
0x0000000000499d60 : ret 0x65e9
0x0000000000489487 : ret 0x6610
0x0000000000425662 : ret 0x6620
0x0000000000422f65 : ret 0x66c3
0x0000000000473d7e : ret 0x674
0x00000000004b7e3f : ret 0x67b2
0x000000000047cdcd : ret 0x6876
0x000000000049d112 : ret 0x68e8
0x000000000043e3bd : ret 0x6b8
0x000000000049ae07 : ret 0x6be9
0x0000000000444dcc : ret 0x6c
0x00000000004baa41 : ret 0x6f9
0x00000000004320be : ret 0x7280
0x0000000000475759 : ret 0x728d
0x000000000043d85b : ret 0x72e9
0x00000000004156f1 : ret 0x7401
0x000000000041df6f : ret 0x7402
0x000000000041b3a5 : ret 0x7404
0x0000000000410fe3 : ret 0x7408
0x0000000000400e9c : ret 0x7420
0x0000000000458272 : ret 0x7450
0x000000000043b379 : ret 0x7501
0x000000000043b386 : ret 0x7502
0x0000000000425e19 : ret 0x7504
0x000000000043c7b4 : ret 0x7508
0x000000000043b34b : ret 0x7510
0x0000000000425e14 : ret 0x7518
0x000000000043b358 : ret 0x7520
0x000000000043b365 : ret 0x7540
0x00000000004726f1 : ret 0x758b
0x000000000042e012 : ret 0x7677
0x00000000004458f2 : ret 0x774
0x000000000047829a : ret 0x777
0x000000000049abfb : ret 0x77e9
0x000000000046d1ba : ret 0x7874
0x000000000041acda : ret 0x7ae9
0x000000000044643a : ret 0x7b8
0x00000000004255f2 : ret 0x7e20
0x0000000000420d6c : ret 0x7f10
0x0000000000460f26 : ret 0x7f3c
0x00000000004323de : ret 0x80
0x0000000000421f49 : ret 0x8000
0x0000000000468f9c : ret 0x8001
0x0000000000471e5f : ret 0x8005
0x000000000047cc86 : ret 0x8008
0x0000000000469982 : ret 0x8010
0x0000000000472f9e : ret 0x8018
0x000000000046f868 : ret 0x804
0x000000000046bc20 : ret 0x8116
0x000000000048673b : ret 0x8148
0x000000000045a1f4 : ret 0x8166
0x0000000000419b3c : ret 0x820f
0x0000000000404090 : ret 0x8301
0x000000000047d1c1 : ret 0x8308
0x000000000042dbe0 : ret 0x830f
0x000000000043d720 : ret 0x8341
0x0000000000420915 : ret 0x8348
0x000000000041ada3 : ret 0x8349
0x000000000047f329 : ret 0x8364
0x000000000043ea47 : ret 0x83e8
0x0000000000411430 : ret 0x840
0x000000000046a802 : ret 0x8401
0x00000000004178f9 : ret 0x840f
0x000000000043d7c0 : ret 0x8444
0x000000000049ad77 : ret 0x8445
0x000000000045ba95 : ret 0x8504
0x0000000000462176 : ret 0x8508
0x0000000000412ff2 : ret 0x850f
0x0000000000467aa5 : ret 0x8545
0x00000000004190c2 : ret 0x8548
0x000000000041b10a : ret 0x854d
0x000000000045906c : ret 0x858b
0x000000000045690d : ret 0x85c6
0x000000000045495a : ret 0x85c7
0x0000000000499ff8 : ret 0x85e9
0x0000000000400c5e : ret 0x860f
0x000000000044ee25 : ret 0x870f
0x00000000004b775e : ret 0x871e
0x0000000000460f2d : ret 0x875
0x0000000000425705 : ret 0x876
0x00000000004890b0 : ret 0x87e
0x000000000044deba : ret 0x87e9
0x000000000047da74 : ret 0x87f6
0x0000000000447421 : ret 0x8804
0x000000000045d762 : ret 0x880f
0x000000000044e377 : ret 0x8840
0x0000000000446822 : ret 0x8901
0x000000000047022e : ret 0x8908
0x0000000000400d06 : ret 0x890f
0x000000000044c5df : ret 0x8941
0x0000000000400669 : ret 0x8944
0x00000000004114ab : ret 0x8945
0x0000000000449291 : ret 0x8948
0x000000000041025d : ret 0x8949
0x0000000000403af7 : ret 0x894c
0x00000000004453ef : ret 0x894d
0x0000000000478b6b : ret 0x894e
0x0000000000482d3c : ret 0x89e9
0x00000000004778ce : ret 0x8b
0x0000000000461c6a : ret 0x8b04
0x000000000046a4f3 : ret 0x8b05
0x00000000004b9f8e : ret 0x8b36
0x000000000044e74a : ret 0x8b41
0x0000000000401484 : ret 0x8b48
0x0000000000410c26 : ret 0x8b49
0x0000000000478aee : ret 0x8b4a
0x0000000000411780 : ret 0x8b4c
0x000000000047fb65 : ret 0x8d01
0x0000000000451c3a : ret 0x8d04
0x0000000000458da0 : ret 0x8d0f
0x000000000040d34f : ret 0x8d48
0x00000000004032a6 : ret 0x8d49
0x00000000004652e8 : ret 0x8d4a
0x0000000000411736 : ret 0x8d4c
0x000000000041bf5c : ret 0x8d4e
0x0000000000410771 : ret 0x8e0f
0x00000000004014ae : ret 0x900
0x0000000000420995 : ret 0x90c3
0x000000000041270b : ret 0x938b
0x00000000004850f0 : ret 0x940f
0x0000000000489d06 : ret 0x941
0x0000000000465008 : ret 0x94c
0x0000000000403316 : ret 0x94e8
0x000000000047a39f : ret 0x950f
0x00000000004550b9 : ret 0x9522
0x0000000000403938 : ret 0x953d
0x00000000004b8db3 : ret 0x9576
0x0000000000480ea0 : ret 0x9589
0x000000000041acf1 : ret 0x976
0x0000000000488239 : ret 0x9e74
0x0000000000410688 : ret 0x9e9
0x0000000000458dbc : ret 0x9ee8
0x00000000004734a9 : ret 0x9f75
0x00000000004ad3e0 : ret 0xa
0x0000000000490e70 : ret 0xa074
0x000000000046a427 : ret 0xa3e8
0x00000000004b8aa3 : ret 0xa514
0x00000000004684ce : ret 0xa9be
0x00000000004b8f27 : ret 0xac65
0x000000000049d3ce : ret 0xace8
0x00000000004b98e4 : ret 0xacfc
0x000000000043d846 : ret 0xaf0f
0x000000000041b68f : ret 0xb48b
0x0000000000402879 : ret 0xb60f
0x000000000046785b : ret 0xb70f
0x000000000043e2f0 : ret 0xb8
0x000000000045f3f9 : ret 0xb848
0x000000000044e515 : ret 0xb87f
0x0000000000425ce7 : ret 0xb8c3
0x0000000000466792 : ret 0xb8e9
0x0000000000483f82 : ret 0xb908
0x00000000004b8dee : ret 0xb9b9
0x00000000004558dd : ret 0xbb41
0x00000000004783c2 : ret 0xbc41
0x000000000049b195 : ret 0xbc80
0x000000000045feae : ret 0xbd83
0x0000000000484170 : ret 0xbe08
0x00000000004b8b44 : ret 0xbe57
0x000000000045a2c8 : ret 0xbf07
0x0000000000483551 : ret 0xbf08
0x0000000000421e09 : ret 0xc000
0x000000000048e50e : ret 0xc001
0x000000000048e4c2 : ret 0xc002
0x0000000000412f33 : ret 0xc031
0x000000000046ad60 : ret 0xc084
0x00000000004254b0 : ret 0xc085
0x000000000040e936 : ret 0xc148
0x00000000004668fd : ret 0xc269
0x000000000045a796 : ret 0xc283
0x000000000042eff4 : ret 0xc2b2
0x000000000043da61 : ret 0xc35b
0x00000000004b72e2 : ret 0xc4c3
0x00000000004b86f8 : ret 0xc4ff
0x0000000000432158 : ret 0xc580
0x000000000049adad : ret 0xc5e9
0x0000000000481d70 : ret 0xc6e9
0x0000000000420891 : ret 0xc6eb
0x0000000000437850 : ret 0xc748
0x000000000041b972 : ret 0xc789
0x000000000041519c : ret 0xc883
0x000000000047c8d3 : ret 0xc931
0x00000000004425c9 : ret 0xc985
0x0000000000422dd1 : ret 0xc9ff
0x00000000004808fd : ret 0xcb73
0x00000000004b818a : ret 0xcca7
0x00000000004ba26d : ret 0xcd11
0x000000000041caa1 : ret 0xce31
0x0000000000404d44 : ret 0xce80
0x00000000004801d5 : ret 0xce83
0x0000000000418b9b : ret 0xcf31
0x00000000004ad7e0 : ret 0xd
0x000000000047b1da : ret 0xd021
0x0000000000441a7f : ret 0xd029
0x0000000000431fcc : ret 0xd073
0x000000000040554e : ret 0xd089
0x00000000004638e5 : ret 0xd108
0x0000000000486109 : ret 0xd129
0x00000000004999c6 : ret 0xd284
0x0000000000485007 : ret 0xd309
0x000000000048861b : ret 0xd348
0x000000000045a7b3 : ret 0xd529
0x0000000000486180 : ret 0xd629
0x000000000046664d : ret 0xd721
0x0000000000486092 : ret 0xd729
0x000000000043d84b : ret 0xd889
0x00000000004b9d05 : ret 0xd8f
0x0000000000476f53 : ret 0xd8f7
0x0000000000400806 : ret 0xd975
0x000000000047afa0 : ret 0xda38
0x000000000040f805 : ret 0xdaf7
0x0000000000447951 : ret 0xdb85
0x00000000004b9de6 : ret 0xdcd9
0x0000000000469ee0 : ret 0xdd72
0x00000000004b8d62 : ret 0xde5d
0x0000000000410d65 : ret 0xde74
0x000000000049a972 : ret 0xde89
0x00000000004b7af1 : ret 0xde9e
0x0000000000486558 : ret 0xdee9
0x0000000000421cc9 : ret 0xe000
0x000000000043b309 : ret 0xe074
0x000000000044642d : ret 0xe077
0x0000000000443269 : ret 0xe083
0x000000000044a9b3 : ret 0xe183
0x00000000004437e2 : ret 0xe1eb
0x00000000004468bb : ret 0xe277
0x000000000040db8c : ret 0xe281
0x0000000000400e0d : ret 0xe283
0x000000000043e9e7 : ret 0xe3e8
0x00000000004659b0 : ret 0xe575
0x00000000004178d7 : ret 0xe675
0x00000000004572e3 : ret 0xe680
0x00000000004b9f06 : ret 0xe71f
0x0000000000401308 : ret 0xe72
0x0000000000452170 : ret 0xe783
0x000000000046d6a5 : ret 0xe874
0x0000000000458c55 : ret 0xe87f
0x00000000004544f2 : ret 0xe883
0x000000000046da4e : ret 0xe8c0
0x00000000004007be : ret 0xe8c1
0x0000000000424c03 : ret 0xe901
0x0000000000402b42 : ret 0xe902
0x0000000000449399 : ret 0xe904
0x000000000047abd1 : ret 0xe907
0x0000000000422e66 : ret 0xe908
0x0000000000428a86 : ret 0xe910
0x0000000000452719 : ret 0xe920
0x000000000041f403 : ret 0xe96e
0x00000000004b8267 : ret 0xe970
0x000000000048817c : ret 0xe974
0x000000000041f5af : ret 0xe977
0x000000000043d9ea : ret 0xea81
0x0000000000457267 : ret 0xeac0
0x0000000000400ce1 : ret 0xeac1
0x0000000000422196 : ret 0xeb10
0x000000000041f3cf : ret 0xeb5b
0x000000000040e5aa : ret 0xeb72
0x00000000004021d8 : ret 0xebe8
0x00000000004baa18 : ret 0xec2
0x000000000047eb09 : ret 0xec75
0x000000000046fd98 : ret 0xed75
0x000000000044a50e : ret 0xed85
0x000000000044536f : ret 0xee75
0x00000000004ba6ba : ret 0xef32
0x00000000004186c6 : ret 0xef75
0x00000000004430e1 : ret 0xefc1
0x0000000000421b89 : ret 0xf000
0x000000000040d518 : ret 0xf001
0x000000000040282a : ret 0xf01
0x000000000041ace7 : ret 0xf02
0x000000000041b320 : ret 0xf04
0x000000000045c8ee : ret 0xf08
0x0000000000459777 : ret 0xf0e9
0x000000000046a966 : ret 0xf0eb
0x000000000041aa63 : ret 0xf0f
0x0000000000420d22 : ret 0xf10
0x000000000040fbac : ret 0xf20
0x0000000000461695 : ret 0xf229
0x000000000044f3a6 : ret 0xf301
0x000000000045c92a : ret 0xf40
0x0000000000467a2d : ret 0xf43
0x000000000049ae21 : ret 0xf45
0x000000000046390a : ret 0xf48
0x0000000000459d34 : ret 0xf4c
0x0000000000402b4b : ret 0xf4e9
0x000000000044324c : ret 0xf631
0x0000000000420b39 : ret 0xf66
0x000000000043d60c : ret 0xf685
0x000000000041b673 : ret 0xf710
0x00000000004795d5 : ret 0xf74
0x000000000042618c : ret 0xf748
0x0000000000465450 : ret 0xf749
0x000000000043207e : ret 0xf80
0x0000000000421a49 : ret 0xf800
0x00000000004b79d0 : ret 0xf869
0x00000000004a3090 : ret 0xf90e
0x00000000004a3088 : ret 0xf90f
0x00000000004a2e80 : ret 0xf91a
0x00000000004044ca : ret 0xf929
0x000000000046d9ba : ret 0xf93d
0x000000000049ebca : ret 0xfa25
0x0000000000459179 : ret 0xfa80
0x000000000048a116 : ret 0xfa81
0x0000000000405562 : ret 0xfac1
0x0000000000467e7a : ret 0xfb57
0x0000000000421909 : ret 0xfc00
0x000000000048b656 : ret 0xfc01
0x000000000048b60a : ret 0xfc02
0x000000000043eb3a : ret 0xfc3
0x000000000046b4ea : ret 0xfd34
0x0000000000446500 : ret 0xfd83
0x000000000044e9ad : ret 0xfde8
0x0000000000402800 : ret 0xfdf
0x00000000004217c9 : ret 0xfe00
0x000000000043d743 : ret 0xfe83
0x0000000000431f9e : ret 0xfec5
0x0000000000421689 : ret 0xff00
0x0000000000490dae : ret 0xff2
0x000000000042d9fa : ret 0xff3
0x000000000041777a : ret 0xff64
0x0000000000421549 : ret 0xff80
0x0000000000488456 : ret 0xff81
0x000000000048840a : ret 0xff82
0x000000000040c28a : ret 0xff99
0x00000000004866f0 : ret 0xff9f
0x0000000000451d02 : ret 0xffb0
0x0000000000400540 : ret 0xffb8
0x000000000048e3f7 : ret 0xffbf
0x0000000000421409 : ret 0xffc0
0x00000000004003e6 : ret 0xffd0
0x00000000004206ce : ret 0xffdf
0x000000000044eb68 : ret 0xffe0
0x000000000040863a : ret 0xffe2
0x000000000049d9fa : ret 0xffe7
0x0000000000440c9a : ret 0xffe8
0x0000000000440b9a : ret 0xffe9
0x000000000045941c : ret 0xffee
0x000000000040ee2c : ret 0xffef
0x000000000040dade : ret 0xfff0
0x0000000000418f0a : ret 0xfff1
0x00000000004c13e1 : ret 0xfff7
0x00000000004a2bb9 : ret 0xfff8
0x0000000000468d77 : ret 0xfffa
0x000000000043e6f9 : ret 0xfffb
0x0000000000420f09 : ret 0xfffc
0x0000000000441363 : ret 0xfffd
0x00000000004052f8 : ret 0xfffe
0x00000000004108ca : ret 0xffff
0x0000000000425775 : ret 1
0x00000000004127fc : ret 2
0x000000000042edb2 : ret 3
0x00000000004257b9 : ret 4
0x000000000048e907 : ret 5
0x000000000045e250 : ret 6
0x00000000004b1884 : ret 7
0x000000000040a43e : ret 8
0x000000000043bdba : ret 9
0x0000000000461c9d : retf -0x6f9a ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x461c70
0x0000000000491e9f : retf -0x7af1 ; call qword ptr [rsi]
0x00000000004a2d55 : retf -8 ; ror bl, 0xf8 ; call qword ptr [rax]
0x00000000004a2d59 : retf ; clc ; call qword ptr [rax]
0x00000000004bd491 : retf ; std ; call rsp
0x000000000043ced5 : rol bl, 0x48 ; mov eax, edi ; ret
0x000000000043db25 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x00000000004664ab : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004166d7 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000476f5e : rol bl, 1 ; mov eax, 1 ; ret
0x000000000042584d : rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000042d9d2 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000464d62 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000004b1280 : rol byte ptr [rax + rax], 0 ; ret 4
0x00000000004471a8 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000489556 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000045fbb5 : rol byte ptr [rax], 0 ; add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000042df1d : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049b856 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000044ef0b : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x0000000000479f01 : rol byte ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000042c3e2 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000481751 : rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000046a731 : rol byte ptr [rbp - 0x7c], 0xdb ; je 0x46a728 ; ret
0x0000000000477fdb : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000442336 : rol byte ptr [rbx - 0x24e6fe08], 0x83 ; ret
0x0000000000416b28 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x0000000000465d22 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000043d9e1 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000044bb0b : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000043ff17 : rol byte ptr [rcx - 0x77], 0xdd ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000046d915 : rol byte ptr [rcx - 0x80], cl ; cld ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x00000000004bd324 : rol byte ptr [rcx - 3], 1 ; jmp qword ptr [rax]
0x0000000000465d02 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000043d7f6 : rol byte ptr [rcx], 0x5d ; pop r12 ; pop r13 ; ret
0x000000000044d622 : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000040fba7 : rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x000000000043d857 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0x72e9
0x000000000043d842 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x0000000000431fce : rol byte ptr [rcx], 1 ; ret 0x148
0x0000000000465d62 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x0000000000465d12 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x0000000000444046 : rol byte ptr [rdx], 0x50 ; call rbx
0x000000000047bf17 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x0000000000465d52 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000004b72e0 : rol cl, 0xc2 ; ret
0x000000000046782f : rol cl, cl ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000465cac : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x0000000000400593 : rol dword ptr [rbx + rbp*8], -0x34 ; mov qword ptr [rdi], rcx ; ret
0x000000000046a7a3 : rol ebx, 0x4c ; mov eax, ecx ; ret
0x000000000044388d : rol ecx, -0x1f ; add edx, ebx ; loopne 0x4438f7 ; pop rbp ; ret
0x00000000004c2500 : ror bh, 0xfd ; jmp qword ptr [rdx]
0x00000000004a2d58 : ror bl, 0xf8 ; call qword ptr [rax]
0x00000000004256d2 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x425719 ; add rax, rdi ; ret
0x0000000000423077 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x0000000000410b7a : ror byte ptr [rax + 0x29], 1 ; ret
0x0000000000472fe9 : ror byte ptr [rax + 0x29], cl ; ret 0x3949
0x00000000004463fa : ror byte ptr [rax + 0x29], cl ; ret 0x8348
0x000000000049cc18 : ror byte ptr [rax + 0x39], 0x1c ; and al, 0xf ; ret 0x8348
0x000000000049c441 : ror byte ptr [rax + 0x39], 0x34 ; and al, 0xf ; ret 0x8348
0x000000000049bfc2 : ror byte ptr [rax + 0x39], 0x4e ; or byte ptr [rdi], cl ; ret 0xfc3
0x000000000046a3ac : ror byte ptr [rax + 0x39], 0xd7 ; ja 0x46a3df ; ret
0x0000000000441e18 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000004789d6 : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000401305 : ror byte ptr [rax + 0x39], 1 ; ret 0xe72
0x000000000049a757 : ror byte ptr [rax + 0x63], 0x44 ; test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x0000000000442785 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x00000000004671b0 : ror byte ptr [rax + 0xf], 0xaf ; ret
0x000000000044ea6d : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000046d15c : ror byte ptr [rax + 0xf], 1 ; ret 0x8348
0x000000000044ea5e : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000047955e : ror byte ptr [rax + 0xf], 1 ; ret 0xf631
0x000000000042c2bc : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x00000000004256a2 : ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000488236 : ror byte ptr [rax + 1], cl ; ret 0x9e74
0x0000000000488179 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x0000000000423074 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000004ad688 : ror byte ptr [rax + rax], 0 ; ret
0x0000000000425845 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x00000000004879d6 : ror byte ptr [rax - 0x3f], 0xe9 ; adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x00000000004687fa : ror byte ptr [rax - 0x3f], 1 ; call 0xffffffffc37fd10d
0x000000000045d29a : ror byte ptr [rax - 0x3f], 1 ; clc ; add cl, byte ptr [rax + 0x29] ; ret
0x000000000047ab78 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x0000000000425692 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x00000000004256c2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x00000000004256b2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x00000000004156aa : ror byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000478873 : ror byte ptr [rax - 0x77], 0x14 ; ret
0x0000000000412b65 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x0000000000469615 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x0000000000458db9 : ror byte ptr [rax - 0x77], 1 ; ret 0x9ee8
0x000000000040db89 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000004202e2 : ror byte ptr [rax - 0x77], 1 ; xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000417a8d : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004135b1 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x4135c6 ; ret
0x000000000047a399 : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000040febf : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000046a2d0 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x000000000041c396 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000477d08 : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000000000049c48e : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000041bf55 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb0774
0x0000000000471622 : ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000004723ac : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000456422 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x0000000000479dda : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000047552d : ror byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000448993 : ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x000000000046926e : ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000447ed4 : ror byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000047a08a : ror byte ptr [rax - 9], cl ; cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000487784 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000046d1bf : ror byte ptr [rbp + rcx*4 + 0x4a], cl ; dec dword ptr [rcx + 0x29] ; ret 0x8d49
0x000000000049cf0c : ror byte ptr [rbp - 0x75], 0x51 ; or byte ptr [rbp + 0x39], cl ; ret 0x4776
0x000000000049df92 : ror byte ptr [rbx + rcx*4 + 0x2d], 1 ; ret 0x22
0x00000000004a29ac : ror byte ptr [rbx - 8], 1 ; jmp rax
0x0000000000447210 : ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000446409 : ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x0000000000446890 : ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000046a723 : ror byte ptr [rcx + rcx*4 - 0x38], 0x75 ; ret
0x0000000000464792 : ror byte ptr [rcx + rcx*4 - 1], 0x45 ; xor eax, eax ; call rbx
0x000000000044ecfe : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x0000000000471ad5 : ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x000000000043d694 : ror byte ptr [rcx - 0x77], 1 ; ret 0x2c76
0x000000000041177a : ror byte ptr [rcx - 0x77], 4 ; and al, 0x74 ; ret 0x8b4c
0x00000000004a29a8 : ror byte ptr [rcx - 8], 0xff ; ror byte ptr [rbx - 8], 1 ; jmp rax
0x0000000000425fc9 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x0000000000441d1c : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x0000000000467858 : ror byte ptr [rdi], 0x48 ; ret 0xb70f
0x000000000041d43d : ror byte ptr [rdi], 0x84 ; cmc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046a557 : ror byte ptr [rdi], 0x84 ; push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047e596 : ror byte ptr [rdi], 0x84 ; ret
0x0000000000445c5c : ror byte ptr [rdi], 0x84 ; test dword ptr [rdx], 0x83480000 ; ret
0x00000000004377da : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000437816 : ror byte ptr [rdi], 0x85 ; ret
0x0000000000459419 : ror byte ptr [rdi], 0x85 ; ret 0xffee
0x0000000000457427 : ror byte ptr [rdi], 0x8a ; ret 8
0x0000000000490158 : ror byte ptr [rdi], 0x8f ; ret
0x0000000000441a7c : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000047b90c : ror byte ptr [rdi], 0x94 ; ret 0x3840
0x000000000047b04a : ror byte ptr [rdi], 0x94 ; ret 0x5438
0x000000000041acd7 : ror byte ptr [rdi], 0x94 ; ret 0x7ae9
0x0000000000460f23 : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x000000000047a39c : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000485004 : ror byte ptr [rdi], 0x94 ; ret 0xd309
0x000000000047af9d : ror byte ptr [rdi], 0x94 ; ret 0xda38
0x000000000046678f : ror byte ptr [rdi], 0x95 ; ret 0xb8e9
0x000000000046664a : ror byte ptr [rdi], 0x95 ; ret 0xd721
0x000000000040f802 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x000000000046627e : ror byte ptr [rdi], 0x95 ; ret 0xe883
0x000000000040fe8c : ror byte ptr [rdi], 0x9f ; ret 0x3841
0x000000000040db9e : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x40db88 ; ret
0x00000000004190e9 : ror byte ptr [rdi], 1 ; test byte ptr [rax], dh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000041b101 : ror byte ptr [rdi], 1 ; test byte ptr [rsi], bh ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x854d
0x000000000046ce35 : ror byte ptr [rdi], cl ; test bl, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000047b2bf : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3840
0x000000000047b3d3 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000457426 : ror byte ptr cs:[rdi], 0x8a ; ret 8
0x0000000000410893 : ror dword ptr [rax + 0x29], cl ; ret
0x000000000047c6f6 : ror dword ptr [rax + 0xf], cl ; ret 0x8349
0x00000000004723fc : ror dword ptr [rax - 0x75], 0x46 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004738a6 : ror dword ptr [rax - 0x75], 5 ; ret 0x2584
0x0000000000479863 : ror dword ptr [rax - 0x77], 0x34 ; ret 0x8348
0x00000000004599e0 : ror dword ptr [rax - 0x77], 1 ; ret 0x47e9
0x0000000000432022 : ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000047d821 : ror dword ptr [rax - 0x77], cl ; ret
0x0000000000414d2d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x414d27 ; ret
0x000000000046304d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x463047 ; ret
0x000000000040eb28 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000405332 : ror dword ptr [rax - 0x7d], cl ; ret
0x000000000044e4d2 : ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x000000000042bec5 : ror dword ptr [rcx + rcx*4 + 0xf], 1 ; pop rbx ; ret
0x00000000004413fe : ror dword ptr [rcx + rcx*4 - 0x11], cl ; call 0x41d646
0x000000000044140c : ror dword ptr [rcx + rcx*4 - 0x19], cl ; call 0x41d646
0x000000000044135d : ror dword ptr [rcx + rcx*4 - 1], cl ; call 0x41d646
0x000000000044136a : ror dword ptr [rcx + rcx*4 - 9], cl ; call 0x41d646
0x000000000043b307 : ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000488618 : ror dword ptr [rdi], -0x6b ; ret 0xd348
0x000000000046774b : ror dword ptr [rdi], -0x6c ; ret
0x000000000042e788 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042ee94 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042ec66 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x000000000042ebe6 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000042ef24 : ror dword ptr [rdi], -0x7b ; je 0x42ef34 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042ea1b : ror dword ptr [rdi], -0x7b ; jno 0x42ea30 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042eae3 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042e760 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000418c6f : ror dword ptr [rdi], 1 ; xchg dword ptr [rdx], edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000414d2c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x414d28 ; ret
0x000000000046304c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x463048 ; ret
0x0000000000446404 : sahf ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x000000000042ae8e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000478eb1 : sahf ; ret 0x148
0x00000000004b81c5 : sahf ; ret 0x38ae
0x0000000000450620 : sahf ; ret 0x8348
0x000000000047b204 : sahf ; ret 0xe8c1
0x000000000049ae33 : sahf ; ret 0xf45
0x0000000000416b2e : sal bh, 0xd8 ; ret
0x000000000043db39 : sal bh, 0xf1 ; pop rbx ; mov eax, eax ; ret
0x0000000000421f47 : sal bh, 1 ; ret 0x8000
0x0000000000421e07 : sal bh, 1 ; ret 0xc000
0x0000000000421cc7 : sal bh, 1 ; ret 0xe000
0x0000000000421b87 : sal bh, 1 ; ret 0xf000
0x0000000000421a47 : sal bh, 1 ; ret 0xf800
0x0000000000421907 : sal bh, 1 ; ret 0xfc00
0x00000000004217c7 : sal bh, 1 ; ret 0xfe00
0x0000000000421687 : sal bh, 1 ; ret 0xff00
0x0000000000421547 : sal bh, 1 ; ret 0xff80
0x0000000000421407 : sal bh, 1 ; ret 0xffc0
0x00000000004212c7 : sal bh, 1 ; ret 0xffe0
0x0000000000421187 : sal bh, 1 ; ret 0xfff0
0x0000000000421047 : sal bh, 1 ; ret 0xfff8
0x0000000000420f07 : sal bh, 1 ; ret 0xfffc
0x0000000000420dc7 : sal bh, 1 ; ret 0xfffe
0x0000000000459a34 : sal bh, cl ; int1 ; add eax, r8d ; ret
0x000000000046649f : sal bl, 1 ; ret
0x0000000000472b02 : sal byte ptr [rbp + 0x4b], 0x89 ; ret
0x0000000000425688 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x000000000049d703 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x000000000049d6e8 : sal byte ptr [rbp + 5], 0xf3 ; ret
0x000000000045826e : sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x00000000004135b4 : sal byte ptr [rbp + 9], cl ; ret
0x0000000000441e41 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x0000000000416685 : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000043d040 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000414d30 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000042db7b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000040dba3 : sal byte ptr [rbp - 0x27], cl ; ret
0x00000000004735ff : sal byte ptr [rbp - 0x32], 0xf3 ; ret
0x00000000004664db : sal byte ptr [rbp - 0xe], cl ; ret
0x000000000047d95d : sal byte ptr [rbx - 0x7d], 0xe8 ; add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x0000000000460e4c : sal byte ptr [rbx], 0x4b ; add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000422fbc : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000441e16 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000440322 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xc3 ; call rax
0x0000000000464d2b : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x00000000004758fd : sal byte ptr [rdx + rax*2 + 0x48], cl ; shl edx, 5 ; add rdx, rax ; jmp 0x475922
0x0000000000422e73 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x00000000004a32ec : sal byte ptr [rsi - 7], 0xff ; sal byte ptr [rsi - 7], 1 ; jmp rax
0x00000000004a32f0 : sal byte ptr [rsi - 7], 1 ; jmp rax
0x000000000046cc31 : sal byte ptr [rsp + 0x48], 0x83 ; ret
0x000000000040dad9 : sal byte ptr [rsp + rbp*2 + 0x48], 0xc7 ; ret 0xfff0
0x000000000047a6e1 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x000000000047827f : sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x0000000000473497 : sal dword ptr [rbp - 0x2a], 1 ; ret
0x00000000004156a8 : sal dword ptr [rcx], 1 ; ror byte ptr [rax - 0x75], cl ; jmp rax
0x00000000004c0679 : sal ebp, 1 ; call rdx
0x0000000000432025 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000049c9d3 : sal ecx, 0x22 ; add cl, ch ; ret
0x000000000043b346 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000044d267 : salc ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000049ebc6 : salc ; add r8b, bpl ; ret 0xfa25
0x000000000042f209 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000049e161 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a2d79 : salc ; clc ; call qword ptr [rax - 0x1f000729]
0x000000000043d2bb : salc ; clc ; ret
0x00000000004c5e39 : salc ; cli ; jmp rsi
0x0000000000473499 : salc ; ret
0x00000000004bd861 : salc ; std ; jmp qword ptr [rax]
0x00000000004bd881 : salc ; std ; jmp qword ptr [rdi]
0x00000000004bd85d : salc ; std ; ljmp ptr [rcx - 0x2a] ; std ; jmp qword ptr [rax]
0x00000000004bd87d : salc ; std ; push qword ptr [rdx] ; salc ; std ; jmp qword ptr [rdi]
0x00000000004a2d29 : sar al, 1 ; jmp rax
0x00000000004850ea : sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x00000000004834ac : sar bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000483af3 : sar bl, 0xff ; dec dword ptr [rcx + 0x29] ; fmul dword ptr [rax - 0x77] ; ret 0x348
0x000000000044cbe3 : sar byte ptr [rax + 1], 0xf ; ret 0x4389
0x00000000004708f1 : sar byte ptr [rax + 3], 0x5b ; ret
0x0000000000479d3c : sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000449391 : sar byte ptr [rax + rax*4], 0xf ; xchg eax, esp ; ret 0x8348
0x00000000004a33a0 : sar byte ptr [rbp - 7], 1 ; push rax ; jge 0x4a33a7 ; call qword ptr [rax]
0x00000000004437dd : sar byte ptr [rcx], cl ; ret
0x0000000000474502 : sar byte ptr [rdi + 0x4b565c], 0xe8 ; ret
0x000000000047458c : sar byte ptr [rdi + 0x4bbcb8], 0x83 ; ret
0x000000000044084c : sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x000000000047beec : sar byte ptr [rsi + 9], 1 ; ret
0x00000000004b8b5f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004a33c0 : sar byte ptr [rsi - 7], 1 ; push rax ; jle 0x4a33c7 ; call qword ptr [rax]
0x000000000044163a : sar ch, 0xff ; mov rdi, qword ptr [r13] ; call rbx
0x00000000004415ce : sar ch, 0xff ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004bd865 : sar ch, 1 ; jmp qword ptr [rax]
0x00000000004bd4c1 : sar ch, cl ; call rsp
0x0000000000434e03 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x434e0e ; ret
0x000000000040053e : sar dword ptr [rcx], 1 ; ret 0xffb8
0x0000000000402c2e : sar dword ptr [rdi + 0x6cafe0], cl ; call rbx
0x00000000004a2b71 : sar eax, -1 ; jnp 0x4a2b40 ; clc ; dec dword ptr [rbx] ; ret
0x00000000004a2ae9 : sar eax, -1 ; mov cl, 0xc1 ; clc ; push qword ptr [rcx] ; ret 0xfff8
0x00000000004641bc : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000047c31b : sar eax, 3 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000441539 : sar ebp, -1 ; mov rdi, qword ptr [r13] ; call rbx
0x00000000004414a6 : sar ebp, -1 ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004bd4bd : sar ebp, cl ; call rsp
0x00000000004bd849 : sar ebp, cl ; jmp rsp
0x00000000004bd4b9 : sar ebp, cl ; push qword ptr [rbx + rdx*8] ; std ; call rsp
0x00000000004b88c3 : sar ecx, 1 ; jnp 0x4b8884 ; ret
0x0000000000425847 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000004641bb : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000425846 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x000000000049a093 : sbb ah, byte ptr [rbx] ; add byte ptr [rax], cl ; ret
0x00000000004760ca : sbb al, 0x24 ; add rsp, 0x18 ; jmp r11
0x0000000000476439 : sbb al, 0x24 ; add rsp, 0x30 ; jmp r11
0x000000000047654b : sbb al, 0x24 ; add rsp, 0x30 ; ret
0x0000000000418997 : sbb al, 0x4a ; add byte ptr [rbx + 0x5cbe02e7], al ; ret 0x4b
0x0000000000418ad3 : sbb al, 0x74 ; add eax, 0x5c415d5b ; ret
0x00000000004671ae : sbb al, 0x89 ; ror byte ptr [rax + 0xf], 0xaf ; ret
0x00000000004c87dc : sbb al, 0xae ; add byte ptr [rax], al ; add byte ptr [rax - 3], dl ; jmp qword ptr [rbx]
0x000000000049c016 : sbb al, 0xcc ; mov rsi, qword ptr [rbx] ; call r14
0x00000000004a2e71 : sbb al, 0xf9 ; call qword ptr [rdx]
0x00000000004a2db5 : sbb al, 0xf9 ; call rax
0x00000000004a2db1 : sbb al, 0xf9 ; inc dword ptr [rax + 0x1c] ; stc ; call rax
0x00000000004a2df1 : sbb al, 0xf9 ; jmp qword ptr [rsi]
0x00000000004a2fb1 : sbb al, 0xf9 ; jmp rax
0x000000000047b510 : sbb al, 2 ; mov qword ptr [rsp + 0x78], rbx ; call r12
0x00000000004c20f1 : sbb al, bh ; call qword ptr [rax]
0x00000000004bf4ad : sbb al, byte ptr [rax] ; add al, al ; pop rcx ; cmc ; jmp qword ptr [rcx]
0x0000000000460165 : sbb al, byte ptr [rcx - 0x7d] ; ret
0x00000000004a2dc5 : sbb bh, cl ; call qword ptr [rax]
0x00000000004a2fc1 : sbb bh, cl ; jmp qword ptr [rax]
0x00000000004a2e85 : sbb bh, cl ; jmp rdx
0x00000000004a2d88 : sbb bl, 0xf8 ; call rax
0x00000000004c6719 : sbb bl, bh ; call qword ptr [rax]
0x00000000004b7645 : sbb bl, byte ptr [rsi] ; ret
0x0000000000477b74 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000049e2fb : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000041ba10 : sbb byte ptr [r9 + 0x39], r9b ; ret 0x850f
0x000000000041092a : sbb byte ptr [r9 - 0x77], r9b ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x000000000047a396 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000470d3b : sbb byte ptr [rax + 0x39], cl ; ret
0x0000000000477b75 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x00000000004172f3 : sbb byte ptr [rax + 0x5bd88948], dl ; pop rbp ; pop r12 ; ret
0x000000000043e03a : sbb byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x00000000004476d1 : sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000040997e : sbb byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x405c57
0x0000000000414d91 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000410681 : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x000000000041d4d7 : sbb byte ptr [rax - 0x77], cl ; xor dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x0000000000412703 : sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x938b
0x000000000049e2fc : sbb byte ptr [rax - 0x7d], cl ; ret
0x000000000042bd3e : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000448a74 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000042bd3d : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000004c4c40 : sbb byte ptr [rax], 0xfa ; jmp qword ptr [rax]
0x000000000041564f : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004c1cf8 : sbb byte ptr [rax], al ; clc ; call qword ptr [rcx]
0x00000000004be468 : sbb byte ptr [rax], cl ; cmc ; call qword ptr [rax]
0x00000000004644e5 : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; call rbx
0x0000000000443fb9 : sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x0000000000416ea3 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000042c181 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000410d49 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004166c7 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000041ba11 : sbb byte ptr [rcx + 0x39], cl ; ret 0x850f
0x000000000046402b : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000470c59 : sbb byte ptr [rcx + 3], cl ; add al, 0x24 ; call rax
0x000000000041ae99 : sbb byte ptr [rcx + rcx*4 + 0x54], cl ; and al, 0x10 ; call rax
0x00000000004645c3 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000041c223 : sbb byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x0000000000410c23 : sbb byte ptr [rcx - 0x77], cl ; ret 0x8b49
0x000000000041092b : sbb byte ptr [rcx - 0x77], cl ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x0000000000464617 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047a397 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000041dbf2 : sbb byte ptr [rdi], cl ; test ebp, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000444d8d : sbb byte ptr [rdx + 0x44], 0 ; mov edi, 0x6cb6d0 ; call rax
0x0000000000418996 : sbb byte ptr [rdx + rcx*2], bl ; add byte ptr [rbx + 0x5cbe02e7], al ; ret 0x4b
0x00000000004a2dc4 : sbb byte ptr [rdx], 0xf9 ; call qword ptr [rax]
0x00000000004a2f9c : sbb byte ptr [rsi], 0xf9 ; call qword ptr [rax]
0x0000000000412db5 : sbb cl, byte ptr [rax - 0x39] ; ret 0xffd0
0x0000000000422b3d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004295dd : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042272d : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000422239 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000422a49 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b22a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000042aa4a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000042ae3a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a65a : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a13d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042991d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x00000000004224bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004290fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x00000000004227fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000422b19 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a7f9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422be9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429c5d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042943d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000428c1d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x0000000000429dfd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000042299d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042218d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000042258d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000042acea : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a50a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b61a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000422a6d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000042225d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000428f5d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004222ff : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042265d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000429093 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429d93 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004298b3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042abeb : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b51b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004228cd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a0d3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004293d3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000428ef3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429bf3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000042ad3b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a55b : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422323 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004c4c41 : sbb dl, bh ; jmp qword ptr [rax]
0x00000000004760cf : sbb dl, dh ; jmp r11
0x0000000000493c68 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049c1ec : sbb dword ptr [rax - 0x80], eax ; call qword ptr [rax]
0x0000000000493bf1 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000493c69 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004529b8 : sbb dword ptr [rbx - 0x4a743], eax ; call qword ptr [rax]
0x00000000004b9efd : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000454616 : sbb dword ptr [rcx], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000041afad : sbb dword ptr [rdx], ecx ; call 0x417205
0x000000000043cd17 : sbb eax, -1 ; ret
0x0000000000442005 : sbb eax, 0 ; leave ; ret
0x00000000004a2ded : sbb eax, 0x1c96fff9 ; stc ; jmp qword ptr [rsi]
0x00000000004a2f25 : sbb eax, 0x1d44fff9 ; stc ; call rsp
0x000000000049e280 : sbb eax, 0x22d2fb ; jne 0x49e270 ; pop rbx ; ret
0x0000000000493a11 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000493a89 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000477fda : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000049bfc1 : sbb eax, eax ; cmp qword ptr [rsi + 8], rcx ; cmova eax, edx ; ret
0x000000000043cd15 : sbb eax, eax ; sbb eax, -1 ; ret
0x000000000047ad49 : sbb ebx, 0x89000001 ; ret
0x000000000045baa0 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x0000000000446117 : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x00000000004a2e51 : sbb ecx, edi ; call qword ptr [rdx + 0x22fff91f]
0x00000000004a2fc9 : sbb ecx, edi ; inc dword ptr [rax + 0x19] ; stc ; jmp rax
0x00000000004a2e4d : sbb ecx, edi ; jmp qword ptr [rdx]
0x00000000004a2fcd : sbb ecx, edi ; jmp rax
0x00000000004a2fbd : sbb edi, ecx ; call qword ptr [rax + 0x20fff91a]
0x00000000004a2dfd : sbb edi, ecx ; call rsi
0x00000000004a2df9 : sbb edi, ecx ; inc dword ptr [rsi + 0x1b] ; stc ; call rsi
0x00000000004a2dfc : sbb r15d, ecx ; call rsi
0x00000000004c87dd : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 3], dl ; jmp qword ptr [rbx]
0x000000000042515d : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000042b27e : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x00000000004bd37d : scasb al, byte ptr [rdi] ; std ; call qword ptr [rax]
0x000000000041e878 : scasb al, byte ptr [rdi] ; sub al, byte ptr [rax] ; push rax ; ret 0x41
0x000000000042b37d : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000424bfd : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000401364 : scasd eax, dword ptr [rdi] ; ret
0x00000000004107cc : scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000043d85a : scasd eax, dword ptr [rdi] ; ret 0x72e9
0x00000000004202e8 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000401483 : scasd eax, dword ptr [rdi] ; ret 0x8b48
0x000000000043d845 : scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000000000044f020 : scasd eax, dword ptr [rdi] ; ret 0xc748
0x00000000004879dd : scasd eax, dword ptr [rdi] ; ret 0xf48
0x0000000000441e1c : setae al ; ret
0x0000000000416b2c : setne al ; neg eax ; ret
0x00000000004437e0 : setne dl ; jmp 0x4437c8
0x0000000000465405 : sgdt ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000049e282 : shl byte ptr [rdx], cl ; add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x000000000043cf5f : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x000000000043b303 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000420b35 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000042f11b : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042f132 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000464fa6 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000464fb7 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000042f011 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004ae8b0 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004b8a48 : shl dword ptr [rdi - 5], 1 ; ret
0x000000000042f096 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043cdbb : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x0000000000464fa2 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000042f14d : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042f136 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042f11f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042dbdb : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042f0b1 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004254ac : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000042ef71 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000443891 : shl eax, cl ; pop rbx ; pop rbp ; ret
0x000000000044388e : shl ecx, 3 ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x000000000047853c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000004784c7 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000478496 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000042bec1 : shl ecx, cl ; or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x0000000000475901 : shl edx, 5 ; add rdx, rax ; jmp 0x47591e
0x000000000047853b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000004784c6 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000478495 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000475900 : shl rdx, 5 ; add rdx, rax ; jmp 0x47591f
0x00000000004758ff : shl rdx, 5 ; add rdx, rax ; jmp 0x475920
0x0000000000469eff : shr bl, cl ; ret
0x00000000004452cd : shr bl, cl ; ret 0x438b
0x000000000044d109 : shr byte ptr [rcx - 0x7ab7ff94], 0xc0 ; je 0x44d11d ; call rax
0x00000000004a2928 : shr byte ptr [rcx - 8], 1 ; push qword ptr [rax + 0x6b] ; clc ; call qword ptr [rax]
0x000000000042db7f : shr byte ptr [rcx], 0xc8 ; ret
0x000000000044be88 : shr byte ptr [rcx], cl ; ret
0x0000000000467840 : shr byte ptr [rcx], cl ; ret 0x428d
0x000000000042584b : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x0000000000477f10 : shr byte ptr [rdx - 0x7cb7ff94], 0xc4 ; ret
0x000000000045e297 : shr cl, cl ; ret
0x00000000004262d9 : shr dword ptr [rdx], cl ; add dword ptr [rax], eax ; ret
0x000000000043da6a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x000000000043da49 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000047864c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000004785d1 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000004785a0 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004642c3 : shr edx, 2 ; sub eax, edx ; ret
0x000000000047864b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000004785d0 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000047859f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004642c2 : shr rdx, 2 ; sub eax, edx ; ret
0x00000000004ada89 : sldt word ptr [rax] ; ret
0x000000000044535c : stc ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004a2ffa : stc ; call qword ptr [rax + 0x10fff911]
0x00000000004a2ff2 : stc ; call qword ptr [rax + 0x10fff912]
0x00000000004a2fea : stc ; call qword ptr [rax + 0x10fff913]
0x00000000004a2fe2 : stc ; call qword ptr [rax + 0x10fff914]
0x00000000004a2fda : stc ; call qword ptr [rax + 0x10fff915]
0x00000000004a2fbe : stc ; call qword ptr [rax + 0x20fff91a]
0x00000000004a2da6 : stc ; call qword ptr [rax + 0x20fff91d]
0x00000000004a2dc6 : stc ; call qword ptr [rax]
0x00000000004a2e52 : stc ; call qword ptr [rdx + 0x22fff91f]
0x00000000004a2e72 : stc ; call qword ptr [rdx]
0x00000000004a2dee : stc ; call qword ptr [rsi + 0x26fff91c]
0x00000000004c41ba : stc ; call qword ptr [rsi]
0x00000000004a2db6 : stc ; call rax
0x00000000004665d9 : stc ; call rbx
0x00000000004c3bba : stc ; call rdi
0x00000000004a2e62 : stc ; call rdx
0x00000000004a2dfe : stc ; call rsi
0x00000000004a2f2a : stc ; call rsp
0x000000000047a082 : stc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000486fa7 : stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x000000000048525a : stc ; dec dword ptr [rax - 0x7d] ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00000000004a2fca : stc ; inc dword ptr [rax + 0x19] ; stc ; jmp rax
0x00000000004a2db2 : stc ; inc dword ptr [rax + 0x1c] ; stc ; call rax
0x00000000004a32fa : stc ; inc dword ptr [rax] ; ja 0x4a32fd ; call qword ptr [rax]
0x00000000004a3352 : stc ; inc dword ptr [rax] ; jl 0x4a3355 ; call qword ptr [rax]
0x00000000004a332a : stc ; inc dword ptr [rax] ; js 0x4a332d ; jmp qword ptr [rax]
0x00000000004a2fba : stc ; inc dword ptr [rax] ; sbb edi, ecx ; call qword ptr [rax + 0x20fff91a]
0x00000000004a2f26 : stc ; inc dword ptr [rbp + rbx - 7] ; call rsp
0x00000000004a2e5e : stc ; inc dword ptr [rdx + 0x1e] ; stc ; call rdx
0x00000000004a2dfa : stc ; inc dword ptr [rsi + 0x1b] ; stc ; call rsi
0x00000000004a2dea : stc ; inc dword ptr [rsi] ; sbb eax, 0x1c96fff9 ; stc ; jmp qword ptr [rsi]
0x00000000004a3322 : stc ; inc eax ; ja 0x4a3325 ; jmp rax
0x00000000004a32ea : stc ; inc eax ; jbe 0x4a32ed ; call rax
0x00000000004a3342 : stc ; inc eax ; js 0x4a3345 ; jmp rax
0x000000000042a332 : stc ; je 0x42a2fe ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004956f2 : stc ; je 0x4956be ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004a31fe : stc ; jmp qword ptr [rax + 0x10fff910]
0x00000000004a31f6 : stc ; jmp qword ptr [rax + 0x20fff911]
0x00000000004a31ee : stc ; jmp qword ptr [rax + 0x20fff912]
0x00000000004a31e6 : stc ; jmp qword ptr [rax + 0x20fff913]
0x00000000004a31de : stc ; jmp qword ptr [rax + 0x20fff914]
0x00000000004a2fd2 : stc ; jmp qword ptr [rax + 0x20fff916]
0x00000000004a2daa : stc ; jmp qword ptr [rax]
0x00000000004a2e4e : stc ; jmp qword ptr [rdx]
0x00000000004a2df2 : stc ; jmp qword ptr [rsi]
0x00000000004a2fce : stc ; jmp rax
0x00000000004a2e86 : stc ; jmp rdx
0x00000000004a2de2 : stc ; jmp rsi
0x00000000004b88c4 : stc ; jnp 0x4b8883 ; ret
0x00000000004319d8 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000046cda7 : stc ; mov r15, rax ; jmp 0x46cd75
0x00000000004a2fc6 : stc ; push qword ptr [rax + 0x40fff919] ; sbb ecx, edi ; jmp rax
0x00000000004a2dae : stc ; push qword ptr [rax + 0x40fff91c] ; sbb al, 0xf9 ; call rax
0x00000000004a32e6 : stc ; push qword ptr [rax - 0x3f00068a] ; jbe 0x4a32f1 ; call rax
0x00000000004a2f22 : stc ; push qword ptr [rbp + rbx + 0x1d44fff9] ; stc ; call rsp
0x00000000004a308a : stc ; push qword ptr [rdx] ; psubw mm7, mm7 ; ret 0xf90e
0x00000000004a2df6 : stc ; push qword ptr [rsi + 0x46fff91b] ; sbb edi, ecx ; call rsi
0x00000000004a32f6 : stc ; push rax ; jbe 0x4a32fd ; inc dword ptr [rax] ; ja 0x4a3301 ; call qword ptr [rax]
0x00000000004a33a2 : stc ; push rax ; jge 0x4a33a5 ; call qword ptr [rax]
0x00000000004a337e : stc ; push rax ; jl 0x4a3381 ; call qword ptr [rax]
0x00000000004a33c2 : stc ; push rax ; jle 0x4a33c5 ; call qword ptr [rax]
0x00000000004a334e : stc ; push rax ; jnp 0x4a3355 ; inc dword ptr [rax] ; jl 0x4a3359 ; call qword ptr [rax]
0x00000000004a3056 : stc ; push rdx ; adc eax, 0x1562fff9 ; stc ; jmp rdx
0x000000000043d2ba : stc ; salc ; clc ; ret
0x000000000041e877 : stc ; scasb al, byte ptr [rdi] ; sub al, byte ptr [rax] ; push rax ; ret 0x41
0x0000000000435304 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000041b897 : std ; add byte ptr [rax - 0x6af0ff94], bl ; ret 0x8349
0x00000000004bd352 : std ; call qword ptr [rax - 0x1f0002a3]
0x00000000004bd386 : std ; call qword ptr [rax - 0x2f00024b]
0x00000000004bd376 : std ; call qword ptr [rax - 0x2f000254]
0x00000000004bd366 : std ; call qword ptr [rax - 0x2f00025d]
0x00000000004bd2a6 : std ; call qword ptr [rax]
0x00000000004c331a : std ; call qword ptr [rbx]
0x00000000004bd322 : std ; call rax
0x00000000004c662a : std ; call rcx
0x00000000004bd492 : std ; call rsp
0x00000000004bd85a : std ; dec dword ptr [rax + 0x69fffdd6] ; salc ; std ; jmp qword ptr [rax]
0x000000000043f80c : std ; dec dword ptr [rax - 0x75] ; jge 0x43f818 ; call rbx
0x000000000043fabf : std ; dec dword ptr [rax - 0x75] ; jge 0x43facb ; call rbx
0x0000000000441657 : std ; dec dword ptr [rax - 0x75] ; jge 0x441663 ; call rbx
0x000000000043ed21 : std ; dec dword ptr [rax - 0x77] ; ret
0x000000000043f6ca : std ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000043facd : std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x000000000043f6d7 : std ; dec dword ptr [rcx - 0x75] ; jge 0x43f6e3 ; call rbx
0x000000000043f7fe : std ; dec dword ptr [rcx - 0x75] ; jge 0x43f80a ; call rbx
0x000000000043f941 : std ; dec dword ptr [rcx - 0x75] ; jge 0x43f94d ; call rbx
0x000000000043fab1 : std ; dec dword ptr [rcx - 0x75] ; jge 0x43fabd ; call rbx
0x00000000004412cf : std ; dec dword ptr [rcx - 0x75] ; jge 0x4412db ; call rbx
0x00000000004413f7 : std ; dec dword ptr [rcx - 0x75] ; jge 0x441403 ; call rbx
0x000000000044153a : std ; dec dword ptr [rcx - 0x75] ; jge 0x441546 ; call rbx
0x000000000044163b : std ; dec dword ptr [rcx - 0x75] ; jge 0x441647 ; call rbx
0x000000000043f93f : std ; fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; jge 0x43f94f ; call rbx
0x00000000004bd34e : std ; inc dword ptr [rax + 0x5b] ; std ; call qword ptr [rax - 0x1f0002a3]
0x00000000004bd2be : std ; inc dword ptr [rax + 0x75] ; std ; jmp qword ptr [rax]
0x00000000004bd31e : std ; inc dword ptr [rax - 0x2f0002c1] ; std ; jmp qword ptr [rax]
0x00000000004bd48e : std ; inc dword ptr [rax - 0x35] ; std ; call rsp
0x00000000004bd2c6 : std ; inc dword ptr [rax] ; jns 0x4bd2cd ; jmp rax
0x0000000000472aff : std ; inc dword ptr [rbp - 0x76b48a40] ; ret
0x00000000004bd4b6 : std ; inc dword ptr [rbx + rdx*8 - 3] ; push qword ptr [rbx + rdx*8] ; std ; call rsp
0x00000000004bd32e : std ; inc eax ; std ; call qword ptr [rax]
0x00000000004777ae : std ; jbe 0x4777bb ; ret
0x00000000004bd2c2 : std ; jmp qword ptr [rax]
0x00000000004c87e2 : std ; jmp qword ptr [rbx]
0x00000000004bd882 : std ; jmp qword ptr [rdi]
0x00000000004c2502 : std ; jmp qword ptr [rdx]
0x00000000004bd2aa : std ; jmp rax
0x00000000004bd84a : std ; jmp rsp
0x00000000004bd3c6 : std ; ljmp ptr [rax] ; ret 0xfffd
0x00000000004bd85e : std ; ljmp ptr [rcx - 0x2a] ; std ; jmp qword ptr [rax]
0x000000000047cb98 : std ; mov r15, rax ; jmp 0x47cbb2
0x00000000004311fb : std ; mov word ptr [rdi - 2], cx ; ret
0x00000000004bd32a : std ; push qword ptr [rax + 0x46] ; std ; inc eax ; std ; call qword ptr [rax]
0x00000000004bd316 : std ; push qword ptr [rax - 0x66] ; std ; jmp qword ptr [rax]
0x00000000004bd2a2 : std ; push qword ptr [rax] ; push 0x6a10fffd ; std ; jmp rax
0x00000000004bd4ba : std ; push qword ptr [rbx + rdx*8] ; std ; call rsp
0x00000000004bd87e : std ; push qword ptr [rdx] ; salc ; std ; jmp qword ptr [rdi]
0x00000000004bd312 : std ; push rax ; cwde ; std ; push qword ptr [rax - 0x66] ; std ; jmp qword ptr [rax]
0x0000000000458051 : std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000440320 : std ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x00000000004c671a : sti ; call qword ptr [rax]
0x00000000004c6972 : sti ; call rsp
0x000000000046b347 : sti ; dec dword ptr [rax + 0x39] ; ret
0x0000000000473d64 : sti ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000465a55 : sti ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000044d9e6 : sti ; inc dword ptr [rbx - 0x76be0008] ; ret
0x00000000004c6512 : sti ; jmp qword ptr [rdx]
0x00000000004c63a2 : sti ; jmp rsi
0x00000000004315d8 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004b8a4a : sti ; ret
0x000000000048e3f6 : sti ; ret 0xffbf
0x00000000004a2b70 : sti ; sar eax, -1 ; jnp 0x4a2b41 ; clc ; dec dword ptr [rbx] ; ret
0x000000000049e281 : sti ; shl byte ptr [rdx], cl ; add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x000000000044e587 : sti ; test rax, rax ; je 0x44e595 ; call rax
0x000000000043f570 : sti ; xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x00000000004a2a81 : stosb byte ptr [rdi], al ; clc ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; clc ; jmp qword ptr [rax]
0x00000000004b8f24 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000004bd375 : stosb byte ptr [rdi], al ; std ; call qword ptr [rax - 0x2f000254]
0x0000000000467a28 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x0000000000467a29 : stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x000000000041fb41 : stosd dword ptr [rdi], eax ; ret
0x000000000046b346 : stosd dword ptr [rdi], eax ; sti ; dec dword ptr [rax + 0x39] ; ret
0x0000000000467a27 : stosd dword ptr [rdi], eax ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x00000000004ba411 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000400968 : sub al, 0 ; add ebx, esi ; ret
0x0000000000400709 : sub al, 0 ; pop rbp ; pop r12 ; ret
0x000000000040154e : sub al, 0 ; xor eax, eax ; ret
0x00000000004c20ec : sub al, 0x47 ; add byte ptr [rax], al ; mov al, 0x18 ; clc ; call qword ptr [rax]
0x00000000004c3eec : sub al, 0x65 ; add byte ptr [rax], al ; adc ah, ah ; stc ; jmp rax
0x00000000004c54ec : sub al, 0x7b ; add byte ptr [rax], al ; loopne 0x4c554a ; cli ; jmp rsp
0x00000000004421ea : sub al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004c76ec : sub al, 0x9d ; add byte ptr [rax], al ; loopne 0x4c7701 ; cld ; call qword ptr [rdx]
0x000000000042e763 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041d22d : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041d27a : sub al, byte ptr [rax] ; push rax ; ret 0x41
0x000000000041e653 : sub al, byte ptr [rax] ; test rax, rax ; je 0x41e663 ; call rax
0x0000000000480421 : sub al, byte ptr [rbx - 0x5f743] ; call qword ptr [rax]
0x000000000045f3f3 : sub bh, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xb848
0x000000000045ee9a : sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x00000000004634bc : sub bh, bh ; loopne 0x463459 ; mov eax, 0xffffffff ; ret
0x00000000004c6971 : sub bh, bl ; call rsp
0x000000000049d6d1 : sub bl, dh ; ret
0x000000000049d6d0 : sub bl, r14b ; ret
0x000000000041092e : sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x000000000046d21c : sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x000000000046c006 : sub byte ptr [rax + 0x39], cl ; ret 0x860f
0x0000000000483207 : sub byte ptr [rax + 0x48000000], 0x39 ; ret 0x820f
0x000000000041092f : sub byte ptr [rax + 1], cl ; ret 0x8949
0x00000000004660f0 : sub byte ptr [rax - 0x73], cl ; je 0x46611f ; call rbx
0x000000000041a623 : sub byte ptr [rax - 0x77], cl ; and cl, bpl ; ret
0x000000000041e114 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000040560f : sub byte ptr [rax - 0x77], cl ; ret
0x0000000000410685 : sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x000000000046238c : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000040d479 : sub byte ptr [rax - 0x7d], cl ; ret
0x000000000048177c : sub byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000441d6d : sub byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004c4798 : sub byte ptr [rax], al ; cli ; call rsi
0x0000000000477c61 : sub byte ptr [rax], al ; jne 0x477c78 ; add rsp, 0x38 ; ret
0x00000000004437ca : sub byte ptr [rax], al ; pop rbx ; ret
0x0000000000444cf5 : sub byte ptr [rax], al ; ret
0x00000000004437a4 : sub byte ptr [rax], al ; test eax, eax ; je 0x4437b6 ; ret
0x000000000043f3e5 : sub byte ptr [rax], al ; test rax, rax ; je 0x43f3f6 ; ret
0x00000000004c6718 : sub byte ptr [rax], bl ; sti ; call qword ptr [rax]
0x00000000004c0e88 : sub byte ptr [rbp - 0xa], al ; call qword ptr [rsi]
0x000000000040db5a : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000414a10 : sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000443783 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x0000000000443782 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x00000000004555ea : sub byte ptr [rbx], cl ; jmp rax
0x000000000044c63a : sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x0000000000487594 : sub byte ptr [rcx], cl ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000041e22c : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047a5fb : sub byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00000000004c6970 : sub byte ptr [rdx], 0xfb ; call rsp
0x000000000047b0bd : sub cl, al ; call 0xffffffff8a09d9e8
0x000000000047ba14 : sub cl, al ; call 0xffffffff8a09e33f
0x00000000004711de : sub cl, byte ptr [rax - 0x7d] ; ret
0x0000000000467a2a : sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x00000000004141f5 : sub cl, ch ; ret 0xfffe
0x000000000047646a : sub dl, dh ; call r11
0x000000000046d229 : sub dword ptr [rax + rcx*2], 0x39 ; ret 0x576
0x000000000046c429 : sub dword ptr [rax - 0x9fffffe], 5 ; ret
0x000000000042f827 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f83d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f977 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f98d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fac7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42fadd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fc17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42fc2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fd67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42fd7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042feb7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42fecd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430007 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43001d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430157 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43016d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004302a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4302bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004303f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43040d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430547 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43055d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430697 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4306ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004307e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4307fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430937 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43094d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430a87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430a9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f783 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f77f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042f82d : sub dword ptr [rdi], esp ; jmp r9
0x000000000042ef46 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x0000000000468fec : sub dword ptr [rsi], esp ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x0000000000468f8e : sub dword ptr [rsi], esp ; add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0x468fa7
0x000000000041e209 : sub eax, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000045c9a1 : sub eax, 0x83000000 ; ret
0x0000000000482187 : sub eax, 0xbfffffd7 ; ret
0x000000000043e2bc : sub eax, 1 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000044caa4 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000043d194 : sub eax, 1 ; ret
0x0000000000477a06 : sub eax, dword ptr [0] ; ret
0x0000000000416ab9 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000416a46 : sub eax, dword ptr [rax] ; add dword ptr [rip + 0x2b4b55], 1 ; ret
0x0000000000417960 : sub eax, dword ptr [rax] ; jne 0x417978 ; jmp 0x417992
0x00000000004169b5 : sub eax, dword ptr [rax] ; ret
0x0000000000417f82 : sub eax, dword ptr [rax] ; test rax, rax ; je 0x417f92 ; call rax
0x000000000040181f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000499521 : sub eax, dword ptr [rcx + r8*4] ; je 0x499507 ; ret
0x0000000000499522 : sub eax, dword ptr [rcx + rax*4] ; je 0x499506 ; ret
0x00000000004171ee : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000043dbba : sub eax, dword ptr [rdx + rcx*4] ; je 0x43dba6 ; ret
0x00000000004166a3 : sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000417f81 : sub eax, dword ptr ss:[rax] ; test rax, rax ; je 0x417f93 ; call rax
0x000000000041535d : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000046612b : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x0000000000415dd9 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000479bfd : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000421fac : sub eax, ecx ; ret
0x0000000000423079 : sub eax, edi ; ret
0x0000000000412d5e : sub eax, edx ; ret
0x000000000043d347 : sub eax, edx ; vzeroupper ; ret
0x00000000004154be : sub eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000412bb8 : sub eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004b8cbe : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000004b7755 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000478be5 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x000000000044388c : sub ecx, eax ; shl ecx, 3 ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x0000000000441db1 : sub edx, 0x1b ; add byte ptr [rax], al ; ret
0x00000000004166d0 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004166c5 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004256d4 : sub edx, eax ; jbe 0x425717 ; add rax, rdi ; ret
0x00000000004256e4 : sub edx, eax ; jbe 0x425719 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000004256f4 : sub edx, eax ; jbe 0x425719 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000425704 : sub edx, eax ; jbe 0x425719 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000410762 : sub edx, esi ; mov rdi, r15 ; call rax
0x0000000000412374 : sub edx, esi ; mov rdi, rbx ; call rax
0x000000000041325d : sub esi, edi ; call 0x43f504
0x0000000000415b79 : sub esp, 0x80 ; call 0x441e58
0x00000000004a0681 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000415dd8 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000043d193 : sub rax, 1 ; ret
0x0000000000477a05 : sub rax, qword ptr [0] ; ret
0x0000000000416ab8 : sub rax, qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004171ed : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000477a04 : sub rax, qword ptr fs:[0] ; ret
0x000000000046612a : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000423078 : sub rax, rdi ; ret
0x0000000000412d5d : sub rax, rdx ; ret
0x000000000043d346 : sub rax, rdx ; vzeroupper ; ret
0x00000000004256d3 : sub rdx, rax ; jbe 0x425718 ; add rax, rdi ; ret
0x0000000000410761 : sub rdx, rsi ; mov rdi, r15 ; call rax
0x0000000000412373 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x000000000041325c : sub rsi, rdi ; call 0x43f505
0x000000000041325b : sub rsi, rdi ; call 0x43f506
0x0000000000415b78 : sub rsp, 0x80 ; call 0x441e59
0x00000000004a0680 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000441e67 : syscall ; pop rdx ; pop rsi ; ret
0x0000000000466815 : syscall ; ret
0x0000000000442e7f : test ah, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004108a3 : test ah, al ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00000000004c822d : test al, 0 ; add byte ptr [rax + 0x3a], al ; std ; call rcx
0x00000000004157d9 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000499713 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000049b9e3 : test al, 0 ; add byte ptr [rax], al ; ret
0x0000000000400e98 : test al, 0x2c ; add dh, dh ; ret 0x7420
0x00000000004becb8 : test al, 0x30 ; cmc ; jmp qword ptr [rsi]
0x00000000004b8017 : test al, 0x97 ; xchg eax, esp ; ret
0x000000000047d20d : test al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004bd3e8 : test al, 0xc5 ; std ; jmp qword ptr [rax]
0x0000000000441a79 : test al, 0xf ; xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000004c1e78 : test al, 1 ; clc ; call rsp
0x000000000043eb36 : test al, 2 ; cmove eax, edx ; ret
0x000000000042db7a : test al, al ; jne 0x42db68 ; xor eax, eax ; sub eax, ecx ; ret
0x0000000000420936 : test ax, 1 ; ret
0x000000000044535b : test bh, cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046ce37 : test bl, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046a733 : test bl, bl ; je 0x46a726 ; ret
0x0000000000474725 : test byte ptr [r8 - 0x77], r9b ; ret
0x000000000047bb23 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000004bde44 : test byte ptr [rax + rax], al ; add byte ptr [rax], ch ; add edi, esi ; call rdi
0x000000000047b0f9 : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000046674e : test byte ptr [rax - 0x73], 0x54 ; and al, 0x48 ; mov rdi, r12 ; call rbx
0x000000000043fbe1 : test byte ptr [rax - 0x75], 0x7d ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x0000000000415ec5 : test byte ptr [rax - 0x77], 0x1d ; ret
0x0000000000440324 : test byte ptr [rax - 0x77], 0xc3 ; call rax
0x0000000000474726 : test byte ptr [rax - 0x77], cl ; ret
0x000000000046f221 : test byte ptr [rax], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004c5ebd : test byte ptr [rax], al ; add byte ptr [rax], ah ; fdivr st(2) ; jmp rdi
0x000000000043b4da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000043a91a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004169da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000411faa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000442368 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000004008ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041699a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043da1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000411d1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043b31a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004657dc : test byte ptr [rax], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000444288 : test byte ptr [rax], bh ; add eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x00000000004190eb : test byte ptr [rax], dh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004657f4 : test byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000479f26 : test byte ptr [rbp + 0x48000000], dh ; mov eax, edx ; pop rbx ; ret
0x00000000004176b6 : test byte ptr [rbp - 0xa000000], ah ; ret
0x000000000047a31a : test byte ptr [rbx + 0x2516a33d], 0 ; jmp rax
0x000000000041d747 : test byte ptr [rbx - 0xa000000], cl ; ret
0x0000000000448a5c : test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x00000000004178de : test byte ptr [rbx], dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x000000000044f652 : test byte ptr [rcx + rcx*4 - 0x11], 0x48 ; mov edx, ebp ; call r15
0x000000000049bf52 : test byte ptr [rcx + rcx*4 - 0x19], 0x41 ; call rdi
0x00000000004665d3 : test byte ptr [rcx + rcx*4 - 0x19], 0x4d ; mov ecx, edi ; call rbx
0x00000000004570ba : test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x000000000043f572 : test byte ptr [rcx - 0x77], 0xd4 ; mov rbp, rax ; call rax
0x0000000000422326 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004c70a5 : test byte ptr [rcx], al ; ret
0x0000000000418147 : test byte ptr [rdi - 0xa000000], cl ; ret
0x000000000049f10e : test byte ptr [rdi], 0x84 ; ret
0x000000000043f9ea : test byte ptr [rdi], 0x84 ; ret 0
0x0000000000470cbe : test byte ptr [rdi], 0x85 ; ret
0x000000000047b1d7 : test byte ptr [rdi], 0x94 ; ret 0xd021
0x000000000048617d : test byte ptr [rdi], 0x9f ; ret 0xd629
0x000000000041a140 : test byte ptr [rdi], ah ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000046541c : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000400603 : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000465404 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004116a4 : test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000467a31 : test byte ptr [rdx], dl ; pop rsi ; mov ebp, 0x8948004b ; ret
0x0000000000472e1e : test byte ptr [rip - 0x428], al ; add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x0000000000464cbd : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x0000000000405a55 : test byte ptr [rsi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041b103 : test byte ptr [rsi], bh ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x854d
0x0000000000422f5d : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000044dbcd : test byte ptr [rsi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043da32 : test ch, 0xf0 ; je 0x43da2b ; movzx eax, cl ; pop rbx ; ret
0x000000000043ce1f : test cl, cl ; jne 0x43ce14 ; ret
0x000000000043cecf : test cl, cl ; jne 0x43cec4 ; ret
0x000000000043d18f : test cl, cl ; jne 0x43d188 ; sub rax, 1 ; ret
0x0000000000467e0d : test cl, dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043da5a : test dh, 0xf0 ; je 0x43da29 ; movzx eax, dl ; pop rbx ; ret
0x000000000043da5a : test dh, 0xf0 ; je 0x43da2b ; movzx eax, dl ; pop rbx ; ret
0x0000000000445c5e : test dh, bh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041d43f : test dh, ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004461d5 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000043b364 : test dl, 0x40 ; jne 0x43b329 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043b392 : test dl, 4 ; jne 0x43b329 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000045b2d3 : test dl, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041fdb6 : test dl, cl ; add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x000000000044d266 : test dl, dh ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040dba2 : test dl, dl ; jne 0x40db84 ; ret
0x000000000043d03f : test dl, dl ; jne 0x43d038 ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000426299 : test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x000000000046018b : test dword ptr [rax - 0x16000006], ebp ; ret 0xffef
0x000000000047d2d4 : test dword ptr [rax - 0x3f], 0x894803e0 ; ret 0x8948
0x000000000045bd19 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004c5fb5 : test dword ptr [rax], eax ; add byte ptr [rax], cl ; fdiv st(2), st(0) ; call rsi
0x000000000049a75b : test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000049a75a : test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000042bc0f : test dword ptr [rbp - 0xc000004], esp ; ret
0x000000000042ea47 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042ee96 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047e149 : test dword ptr [rbx - 0x16000002], esi ; ret
0x000000000045132b : test dword ptr [rbx], esp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042564a : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x0000000000425fb0 : test dword ptr [rcx + 0x48fffffe], esp ; mov eax, edi ; ret
0x0000000000410256 : test dword ptr [rcx + 0xf], 0x8948c046 ; ret 0x8949
0x000000000042ea1d : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042e92d : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042e83d : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044f91e : test dword ptr [rcx - 0x3f], 0x834904eb ; ret
0x000000000041acea : test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000047d1ba : test dword ptr [rcx], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x000000000042619a : test dword ptr [rdi + 0x48fffffc], esi ; mov eax, edi ; ret
0x000000000045edc0 : test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x000000000047c3c3 : test dword ptr [rdi + rdi*8 - 1], ecx ; inc dword ptr [rcx - 0x77] ; ret
0x000000000045a90c : test dword ptr [rdi - 0x7c00000c], esi ; ret
0x000000000042ba25 : test dword ptr [rdi - 0xc000002], ecx ; ret
0x000000000041eee4 : test dword ptr [rdi], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042e762 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000445c5f : test dword ptr [rdx], 0x83480000 ; ret
0x000000000044038d : test dword ptr [rdx], 0xf6310000 ; mov rdi, r14 ; call rbx
0x000000000043cba2 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042bd0e : test dword ptr [rsi - 0xc000005], esp ; ret
0x000000000042ec68 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000004b9d00 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004323d6 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000441d1b : test eax, eax ; cmove eax, edx ; ret
0x0000000000400958 : test eax, eax ; je 0x40096c ; mov edi, 0x4bd9c0 ; call rax
0x00000000004009a6 : test eax, eax ; je 0x40099c ; call rax
0x0000000000402cd2 : test eax, eax ; je 0x402ce6 ; mov edi, 0x6cb060 ; call rax
0x0000000000402f21 : test eax, eax ; je 0x402f3f ; mov edi, 0x6cafe0 ; call rax
0x0000000000403115 : test eax, eax ; je 0x403133 ; mov edi, 0x6cafe0 ; call rax
0x0000000000403530 : test eax, eax ; je 0x403544 ; mov edi, 0x6cb0a0 ; call rax
0x0000000000403678 : test eax, eax ; je 0x40368c ; mov edi, 0x6cb0a0 ; call rax
0x0000000000417ea8 : test eax, eax ; je 0x417eb3 ; pop rbx ; ret
0x0000000000417f85 : test eax, eax ; je 0x417f8f ; call rax
0x000000000041e656 : test eax, eax ; je 0x41e660 ; call rax
0x0000000000422d33 : test eax, eax ; je 0x422d3f ; xchg eax, edx ; sub eax, edx ; ret
0x000000000043dca6 : test eax, eax ; je 0x43dcba ; mov edi, 0x6cb720 ; call rax
0x000000000043dcbe : test eax, eax ; je 0x43dcd2 ; mov edi, 0x6cb720 ; call rax
0x000000000043f3e8 : test eax, eax ; je 0x43f3f3 ; ret
0x000000000044361f : test eax, eax ; je 0x443633 ; mov edi, 0x6ca140 ; call rax
0x00000000004437a6 : test eax, eax ; je 0x4437b4 ; ret
0x000000000044cfde : test eax, eax ; je 0x44cff2 ; mov edi, 0x6cb720 ; call rax
0x000000000044d00d : test eax, eax ; je 0x44d029 ; mov edi, 0x6cb720 ; call rax
0x000000000044d10e : test eax, eax ; je 0x44d118 ; call rax
0x000000000044d16d : test eax, eax ; je 0x44d181 ; mov edi, 0x6cb720 ; call rax
0x000000000044d2e6 : test eax, eax ; je 0x44d301 ; mov edi, 0x6cb720 ; call rax
0x000000000044d5c6 : test eax, eax ; je 0x44d5da ; mov edi, 0x6cb720 ; call rax
0x000000000044d6ca : test eax, eax ; je 0x44d6d4 ; call rax
0x000000000044e589 : test eax, eax ; je 0x44e593 ; call rax
0x0000000000470322 : test eax, eax ; je 0x470336 ; mov edi, 0x6ca100 ; call rax
0x0000000000474316 : test eax, eax ; je 0x47432a ; mov edi, 0x6ca140 ; call rax
0x000000000047433e : test eax, eax ; je 0x474352 ; mov edi, 0x6ca140 ; call rax
0x00000000004743b4 : test eax, eax ; je 0x4743c8 ; mov edi, 0x6ca140 ; call rax
0x0000000000475e81 : test eax, eax ; je 0x475ef9 ; mov edi, 0x6ca140 ; call rax
0x000000000047783c : test eax, eax ; je 0x47780b ; mov edi, 0x6ca140 ; call rax
0x000000000047799a : test eax, eax ; je 0x4779ae ; mov edi, 0x6ca140 ; call rax
0x000000000047a6e0 : test eax, eax ; je 0x47a6f8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047ddb6 : test eax, eax ; je 0x47ddca ; mov edi, 0x6ca140 ; call rax
0x000000000047dde2 : test eax, eax ; je 0x47ddf6 ; mov edi, 0x6ca140 ; call rax
0x0000000000487560 : test eax, eax ; je 0x487574 ; mov edi, 0x6ca140 ; call rax
0x0000000000487608 : test eax, eax ; je 0x48761c ; mov edi, 0x6ca140 ; call rax
0x000000000049df88 : test eax, eax ; je 0x49df9c ; mov edi, 0x6ca100 ; call rax
0x000000000049e049 : test eax, eax ; je 0x49e05d ; mov edi, 0x6ca100 ; call rax
0x000000000049fcec : test eax, eax ; je 0x49fcfb ; call rax
0x0000000000416684 : test eax, eax ; jne 0x41667d ; ret
0x0000000000425687 : test eax, eax ; jne 0x4256e7 ; xor rax, rax ; ret
0x0000000000441e40 : test eax, eax ; jne 0x441e3b ; pop rdx ; pop r10 ; ret
0x00000000004735fe : test eax, eax ; jne 0x4735d5 ; ret
0x000000000049d6e7 : test eax, eax ; jne 0x49d6f5 ; ret
0x000000000049d702 : test eax, eax ; jne 0x49d715 ; ret
0x000000000049d922 : test eax, eax ; jne 0x49d935 ; ret
0x00000000004708f0 : test eax, eax ; js 0x4708fd ; pop rbx ; ret
0x0000000000479d3b : test eax, eax ; js 0x479d4d ; ret
0x000000000046a722 : test eax, eax ; mov rax, r9 ; jne 0x46a780 ; ret
0x00000000004255b0 : test ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000041dbf4 : test ebp, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004452ca : test ebx, ebx ; jne 0x4452a5 ; jmp 0x445297
0x000000000047a05e : test ebx, ebx ; jne 0x47a078 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049e110 : test ebx, ebx ; mov rdi, rbx ; jne 0x49e108 ; pop rbx ; ret
0x000000000043b352 : test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000043b35f : test ebx, esp ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x0000000000466499 : test ecx, ecx ; jne 0x466458 ; mov rax, rdx ; ret
0x000000000046a771 : test ecx, ecx ; jne 0x46a727 ; xor eax, eax ; ret
0x00000000004a2971 : test edi, eax ; call rax
0x00000000004208e0 : test edi, edi ; je 0x4208f9 ; mov eax, 0x16 ; ret
0x0000000000422f12 : test edx, edx ; je 0x422f20 ; bsf eax, edx ; ret
0x0000000000422f12 : test edx, edx ; je 0x422f21 ; bsf eax, edx ; ret
0x0000000000422fbb : test edx, edx ; je 0x422fd7 ; bsf rax, rdx ; ret
0x0000000000422fbb : test edx, edx ; je 0x422fd8 ; bsf rax, rdx ; ret
0x0000000000464d2a : test edx, edx ; je 0x464d57 ; bsf rax, rdx ; ret
0x0000000000464d2a : test edx, edx ; je 0x464d58 ; bsf rax, rdx ; ret
0x00000000004135b3 : test edx, edx ; jne 0x4135c4 ; ret
0x0000000000414d2f : test edx, edx ; jne 0x414d25 ; ret
0x000000000046304f : test edx, edx ; jne 0x463045 ; ret
0x00000000004664da : test edx, edx ; jne 0x4664d5 ; ret
0x00000000004007b5 : test edx, edx ; jns 0x4006ad ; jmp 0x40078a
0x000000000043b345 : test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000040ed9b : test esi, edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000464c21 : test esi, esi ; jne 0x464c30 ; xor rax, rax ; ret
0x000000000041f6cc : test esp, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000046a732 : test r11b, r11b ; je 0x46a727 ; ret
0x00000000004735fd : test r8, r8 ; jne 0x4735d6 ; ret
0x0000000000422d32 : test r8d, r8d ; je 0x422d40 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000046a721 : test r8d, r8d ; mov rax, r9 ; jne 0x46a781 ; ret
0x0000000000466498 : test r9d, r9d ; jne 0x466459 ; mov rax, rdx ; ret
0x00000000004009a5 : test rax, rax ; je 0x40099d ; call rax
0x0000000000417ea7 : test rax, rax ; je 0x417eb4 ; pop rbx ; ret
0x0000000000417f84 : test rax, rax ; je 0x417f90 ; call rax
0x000000000041e655 : test rax, rax ; je 0x41e661 ; call rax
0x000000000043f3e7 : test rax, rax ; je 0x43f3f4 ; ret
0x000000000044d10d : test rax, rax ; je 0x44d119 ; call rax
0x000000000044d6c9 : test rax, rax ; je 0x44d6d5 ; call rax
0x000000000044e588 : test rax, rax ; je 0x44e594 ; call rax
0x000000000047a6df : test rax, rax ; je 0x47a6f9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049fceb : test rax, rax ; je 0x49fcfc ; call rax
0x0000000000416683 : test rax, rax ; jne 0x41667e ; ret
0x00000000004452c9 : test rbx, rbx ; jne 0x4452a6 ; jmp 0x445298
0x000000000047a05d : test rbx, rbx ; jne 0x47a079 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049e10f : test rbx, rbx ; mov rdi, rbx ; jne 0x49e109 ; pop rbx ; ret
0x0000000000422fba : test rdx, rdx ; je 0x422fd8 ; bsf rax, rdx ; ret
0x0000000000422fba : test rdx, rdx ; je 0x422fd9 ; bsf rax, rdx ; ret
0x0000000000464d29 : test rdx, rdx ; je 0x464d58 ; bsf rax, rdx ; ret
0x0000000000464d29 : test rdx, rdx ; je 0x464d59 ; bsf rax, rdx ; ret
0x00000000004135b2 : test rdx, rdx ; jne 0x4135c5 ; ret
0x0000000000414d2e : test rdx, rdx ; jne 0x414d26 ; ret
0x000000000046304e : test rdx, rdx ; jne 0x463046 ; ret
0x0000000000464c20 : test rsi, rsi ; jne 0x464c31 ; xor rax, rax ; ret
0x00000000004137c5 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x0000000000434e9a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000004321ba : vmovdqu xmmword ptr [rax + 0x70], xmm12 ; ret
0x00000000004320f0 : vmovdqu xmmword ptr [rcx - 0x10], xmm12 ; ret
0x0000000000431eb9 : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000043d2a0 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000431fff : vmovdqu xmmword ptr [rdx - 0x10], xmm12 ; mov rax, r8 ; ret
0x0000000000431e23 : vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000431e86 : vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000043d24a : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000434e86 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000434e6d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x000000000043d41b : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043d41f : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043d2b5 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000043d2b9 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x00000000004351a3 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000043503c : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000434e3e : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x0000000000434e02 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000435305 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000043d5d8 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x000000000043d53b : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x000000000043d3da : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000042a331 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000040561d : vpsubsb xmm15, xmm15, xmmword ptr [rax + rbx*8 + 0x29480001] ; ret
0x000000000043d349 : vzeroupper ; ret
0x000000000041e651 : wait ; iretd ; sub al, byte ptr [rax] ; test rax, rax ; je 0x41e665 ; call rax
0x00000000004a2b7c : wait ; ret
0x0000000000422b3f : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004295df : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042272f : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x000000000042223b : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a2975 : xchg al, bh ; jmp qword ptr [rax]
0x0000000000422a4b : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b22c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000042aa4c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000042ae3c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a65c : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496e8d : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000441a17 : xchg bl, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x0000000000495991 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000496b91 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496291 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496591 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000495c89 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000499702 : xchg byte ptr [rax + 0x48000000], bh ; add esp, 8 ; ret
0x0000000000499712 : xchg byte ptr [rax + 0x48000000], ch ; add esp, 8 ; ret
0x00000000004996d9 : xchg byte ptr [rax + 0x48000000], dh ; add esp, 8 ; ret
0x000000000042a13f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042991f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x00000000004224bf : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004290ff : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x00000000004227ff : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000422b1b : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a7fb : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422beb : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429c5f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042943f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000428c1f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x0000000000429dff : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000042299f : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042218f : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000049b03c : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x000000000041c492 : xchg byte ptr [rcx], dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000442c38 : xchg byte ptr [rdi + 0x4a], al ; add byte ptr [rax + 0xf], cl ; ret
0x000000000042258f : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000042acec : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a50c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b61c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049a452 : xchg byte ptr [rdx + 1], dh ; add byte ptr [rax], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000422a6f : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000042225f : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000428f5f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422301 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042265f : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000495f36 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429095 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429d95 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496e36 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496536 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496236 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x00000000004298b5 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042abed : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000495c2e : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b51d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004228cf : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000494cbf : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494adf : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004954b7 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004943d7 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004952d7 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a0d5 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004293d5 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000428ef5 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429bf5 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000042ad3d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a55d : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422325 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000466246 : xchg dword ptr [rax + rbp*8], eax ; ret
0x0000000000444c3c : xchg dword ptr [rax - 0x39], ecx ; ret
0x00000000004702e6 : xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000442f86 : xchg dword ptr [rax], ebp ; add dh, dh ; ret 0x7420
0x00000000004447d6 : xchg dword ptr [rbp + rcx*4 + 0x24], ecx ; ret
0x0000000000475ee1 : xchg dword ptr [rbx + rax], edx ; add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x000000000045d58d : xchg dword ptr [rbx + rcx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000483f55 : xchg dword ptr [rbx - 0x76fffffd], eax ; ret 0x348
0x000000000044dcd5 : xchg dword ptr [rbx - 0x7c000005], ecx ; ret 0x8901
0x00000000004b79cc : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x0000000000481f8b : xchg dword ptr [rcx - 0x7d000000], ebx ; ret 0x8308
0x0000000000448de2 : xchg dword ptr [rcx], ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000486ec3 : xchg dword ptr [rdi - 0x77000000], ebp ; ret 0x348
0x0000000000418cb4 : xchg dword ptr [rdi - 0x9fffffc], esi ; ret
0x0000000000441e3e : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x441e3d ; pop rdx ; pop r10 ; ret
0x0000000000418c71 : xchg dword ptr [rdx], edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000047361e : xchg dword ptr [rip + 0x6894800], esp ; ret
0x000000000047361d : xchg dword ptr [rip + 0x6894800], r12d ; ret
0x000000000046da48 : xchg dword ptr [rip - 0x76fffffd], edx ; ret 0xe8c0
0x0000000000484cd9 : xchg dword ptr [rip - 0x76ffffff], eax ; ret 0x348
0x00000000004b7b6b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000494018 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x000000000041a0ff : xchg eax, ebp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000044720b : xchg eax, ebp ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000463e76 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000411652 : xchg eax, ebp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x0000000000452712 : xchg eax, ebp ; cmp bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xe920
0x000000000041a7aa : xchg eax, ebp ; ret
0x000000000047b2c1 : xchg eax, ebp ; ret 0x3840
0x00000000004622e7 : xchg eax, ebp ; ret 0x5389
0x000000000041b89d : xchg eax, ebp ; ret 0x8349
0x00000000004665ee : xchg eax, ebp ; ret 0x8b4c
0x0000000000489d05 : xchg eax, ebp ; ret 0x941
0x0000000000403937 : xchg eax, ebp ; ret 0x953d
0x00000000004672db : xchg eax, ebp ; ret 0xb60f
0x0000000000466791 : xchg eax, ebp ; ret 0xb8e9
0x000000000046ad5f : xchg eax, ebp ; ret 0xc084
0x000000000045a795 : xchg eax, ebp ; ret 0xc283
0x00000000004425c8 : xchg eax, ebp ; ret 0xc985
0x000000000048861a : xchg eax, ebp ; ret 0xd348
0x000000000046664c : xchg eax, ebp ; ret 0xd721
0x000000000040f804 : xchg eax, ebp ; ret 0xdaf7
0x00000000004437e1 : xchg eax, ebp ; ret 0xe1eb
0x0000000000466280 : xchg eax, ebp ; ret 0xe883
0x000000000049aecd : xchg eax, ebp ; ret 0xf45
0x000000000046724f : xchg eax, ebp ; ret 0xf748
0x0000000000416b2d : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x00000000004850e9 : xchg eax, ebp ; sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x0000000000415382 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000469780 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042dbb0 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x000000000043a7dc : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000042f332 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000044f110 : xchg eax, ebx ; ret 0x3948
0x000000000044fc6e : xchg eax, ebx ; ret 0x3949
0x000000000041142f : xchg eax, ebx ; ret 0x840
0x0000000000450143 : xchg eax, ebx ; ret 0x8548
0x00000000004638e4 : xchg eax, ebx ; ret 0xd108
0x00000000004206c7 : xchg eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000042a1e1 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000042890f : xchg eax, ecx ; sub eax, edx ; ret
0x00000000004098b5 : xchg eax, edi ; ret
0x0000000000441a7b : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000004414a5 : xchg eax, edi ; sar ebp, -1 ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004b8018 : xchg eax, edi ; xchg eax, esp ; ret
0x0000000000442c58 : xchg eax, edx ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004850ff : xchg eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x00000000004179da : xchg eax, edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000004c7cd9 : xchg eax, edx ; cld ; call qword ptr [rax]
0x00000000004b98dd : xchg eax, edx ; jae 0x4b98ba ; push rsi ; pop rdx ; je 0x4b98af ; ret 0xacfc
0x000000000045b8b6 : xchg eax, edx ; jmp qword ptr [rsi]
0x000000000049fe25 : xchg eax, edx ; ret
0x000000000046d91b : xchg eax, edx ; ret 0x8348
0x00000000004747f6 : xchg eax, edx ; ret 0xb60f
0x0000000000441a7e : xchg eax, edx ; ret 0xd029
0x00000000004b79cf : xchg eax, edx ; ret 0xf869
0x0000000000422d37 : xchg eax, edx ; sub eax, edx ; ret
0x000000000042deb0 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000468e46 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000433be7 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000042df6d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042decb : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041d466 : xchg eax, esi ; ret
0x00000000004ba26c : xchg eax, esi ; ret 0xcd11
0x00000000004a2b34 : xchg eax, esi ; ret 0xfff8
0x0000000000468d76 : xchg eax, esi ; ret 0xfffa
0x000000000042df1c : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a2df0 : xchg eax, esi ; sbb al, 0xf9 ; jmp qword ptr [rsi]
0x00000000004bee54 : xchg eax, esp ; adc al, 0 ; add byte ptr [rax], cl ; cmp ebp, esi ; call qword ptr [rax]
0x00000000004c1d54 : xchg eax, esp ; add byte ptr [r8], al ; add al, dil ; call qword ptr [rdi]
0x00000000004c5b54 : xchg eax, esp ; add dword ptr [rax], 0xfaadc800 ; call rdx
0x00000000004437d8 : xchg eax, esp ; imul eax, dword ptr [rdx], 0x39d23100 ; ret
0x00000000004c3054 : xchg eax, esp ; push rsi ; add byte ptr [rax], al ; js 0x4c2ffb ; clc ; jmp rbx
0x00000000004ba47f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4ba410 ; ret 0x48f
0x0000000000458054 : xchg eax, esp ; ret
0x000000000046ce27 : xchg eax, esp ; ret 0x1f0f
0x000000000047b90e : xchg eax, esp ; ret 0x3840
0x000000000047b04c : xchg eax, esp ; ret 0x5438
0x000000000041acd9 : xchg eax, esp ; ret 0x7ae9
0x0000000000460f25 : xchg eax, esp ; ret 0x7f3c
0x000000000043d71f : xchg eax, esp ; ret 0x8341
0x0000000000449395 : xchg eax, esp ; ret 0x8348
0x000000000043d7bf : xchg eax, esp ; ret 0x8444
0x000000000046ea11 : xchg eax, esp ; ret 0x8545
0x000000000047a39e : xchg eax, esp ; ret 0x950f
0x00000000004550b8 : xchg eax, esp ; ret 0x9522
0x0000000000402878 : xchg eax, esp ; ret 0xb60f
0x000000000046b1bc : xchg eax, esp ; ret 0xc283
0x000000000047b1d9 : xchg eax, esp ; ret 0xd021
0x0000000000485006 : xchg eax, esp ; ret 0xd309
0x000000000047af9f : xchg eax, esp ; ret 0xda38
0x0000000000479de0 : xchg eax, esp ; ret 0xdaf7
0x000000000049ae6c : xchg eax, esp ; ret 0xf45
0x0000000000459178 : xchg eax, esp ; ret 0xfa80
0x000000000043d742 : xchg eax, esp ; ret 0xfe83
0x000000000046a2cf : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x0000000000411971 : xchg eax, r8d ; jmp 0x41187d
0x000000000043e21f : xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000411651 : xchg rax, rbp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x0000000000469405 : xlatb ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b08d9 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000042f20c : xlatb ; add r9, r11 ; jmp r9
0x000000000043e021 : xlatb ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004a2d7d : xlatb ; clc ; jmp rax
0x000000000049fed7 : xlatb ; idiv edi ; ret
0x000000000046a3af : xlatb ; ja 0x46a3dc ; ret
0x00000000004b8a43 : xlatb ; jo 0x4b8abf ; mov ebp, 0xfb67d10d ; ret
0x00000000004517c2 : xlatb ; mov byte ptr [rsi], al ; jne 0x4517a8 ; mov rax, rsi ; ret
0x0000000000420a89 : xlatb ; ret
0x00000000004b9ee6 : xlatb ; ret 0x4e27
0x0000000000465007 : xlatb ; ret 0x94c
0x00000000004254af : xlatb ; ret 0xc085
0x0000000000420a80 : xlatb ; ret 0xc148
0x0000000000422f34 : xlatb ; ret 0xf66
0x000000000042c3e1 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000043b306 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000421f46 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000421e06 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000421cc6 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000421b86 : xlatb ; sal bh, 1 ; ret 0xf000
0x0000000000421a46 : xlatb ; sal bh, 1 ; ret 0xf800
0x0000000000421906 : xlatb ; sal bh, 1 ; ret 0xfc00
0x00000000004217c6 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000421686 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000421546 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000421406 : xlatb ; sal bh, 1 ; ret 0xffc0
0x00000000004212c6 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000421186 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000421046 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000420f06 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000420dc6 : xlatb ; sal bh, 1 ; ret 0xfffe
0x000000000043b302 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000464fa5 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000464fb6 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000004a2bf8 : xor ah, ah ; clc ; call qword ptr [rax]
0x00000000004b79ca : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000004c1cf4 : xor al, 0x43 ; add byte ptr [rax], al ; sbb byte ptr [rax], al ; clc ; call qword ptr [rcx]
0x000000000043dadc : xor al, 0x4a ; add byte ptr [rax + 8], bh ; pop rbx ; ret
0x000000000040553d : xor al, 0x89 ; ret 0x5525
0x0000000000461747 : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004bd4bc : xor al, 0xd3 ; std ; call rsp
0x00000000004b8baa : xor al, 0xd8 ; ret
0x00000000004c25a9 : xor al, bh ; jmp rsp
0x000000000046d9b5 : xor al, byte ptr [rbx + 0x4b] ; add al, ch ; ret 0xf93d
0x00000000004448da : xor al, byte ptr [rbx] ; add byte ptr [rcx + rcx*4 - 9], cl ; call r15
0x000000000042570c : xor bl, al ; nop ; xor rax, rax ; ret
0x000000000043f80a : xor bl, dh ; std ; dec dword ptr [rax - 0x75] ; jge 0x43f81a ; call rbx
0x00000000004255cd : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x000000000049dec4 : xor byte ptr [rax + 0x39], cl ; ret
0x0000000000420991 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x00000000004a296c : xor byte ptr [rax + rdi*8 - 0x77a7f01], al ; call rax
0x000000000046712d : xor byte ptr [rax - 0x39], cl ; ret
0x000000000044917b : xor byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x0000000000422e3f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000463fb2 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000004bd2a4 : xor byte ptr [rax - 3], ch ; call qword ptr [rax]
0x00000000004a29c4 : xor byte ptr [rax - 8], bl ; inc dword ptr [rax + 0x5a] ; clc ; jmp rax
0x00000000004a2924 : xor byte ptr [rax - 8], ch ; call rax
0x0000000000410dfd : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040ea12 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000040e9ca : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000043dafc : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004a2834 : xor byte ptr [rax], al ; clc ; inc dword ptr [rax] ; add eax, edi ; call rax
0x0000000000463efa : xor byte ptr [rax], al ; je 0x463f04 ; ret
0x0000000000415a40 : xor byte ptr [rbp + 0xd], 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000403573 : xor byte ptr [rbp - 0x7b], cl ; dec dword ptr [rax - 0x77] ; ret
0x000000000049f10b : xor byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x00000000004a2944 : xor byte ptr [rbp - 8], dh ; call rax
0x000000000049da1e : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004c0357 : xor byte ptr [rbx + 0xaea0206], al ; ret
0x00000000004261fb : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000415d8e : xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x00000000004bfca0 : xor byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00000000004433d9 : xor byte ptr [rcx + 0x2882e005], cl ; add cl, ch ; ret
0x000000000041ffa8 : xor byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000458087 : xor byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000410dfe : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040f8f5 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000041af93 : xor byte ptr [rdi], bl ; add al, bpl ; ret 0xffff
0x0000000000463110 : xor byte ptr [rdi], cl ; ret 0x4389
0x0000000000458052 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004c13ff : xor byte ptr [rdx], al ; int 0xa
0x00000000004c0c3f : xor byte ptr [rdx], al ; ret
0x000000000042dc5f : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000464f6c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000004255ce : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000040e09a : xor byte ptr [rsi - 0x73], cl ; cmp al, 0x33 ; call rax
0x0000000000468916 : xor byte ptr [rsi], ah ; add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbf091270
0x00000000004a2c9c : xor ch, ah ; clc ; call qword ptr [rax]
0x00000000004253bd : xor ch, cl ; add byte ptr [r8 + 0xf], cl ; ret 0x66c3
0x00000000004becb9 : xor ch, dh ; jmp qword ptr [rsi]
0x00000000004a2cb4 : xor cl, ah ; clc ; call qword ptr [rax]
0x00000000004655eb : xor cl, byte ptr [rax + 0x39] ; ret
0x000000000041c8d3 : xor cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000472716 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000047cb5f : xor cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x000000000045f85b : xor cl, byte ptr [rbx] ; jmp rax
0x00000000004404b2 : xor cl, byte ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000004a2c14 : xor dl, ah ; clc ; call qword ptr [rax]
0x000000000047643e : xor dl, dh ; jmp r11
0x0000000000476550 : xor dl, dh ; ret
0x00000000004bd880 : xor dl, dh ; std ; jmp qword ptr [rdi]
0x00000000004202e5 : xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000004599dd : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0x47e9
0x000000000041d4da : xor dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x00000000004c0ae5 : xor dword ptr [rax], eax ; add al, cl ; cmc ; call qword ptr [rdx]
0x0000000000468feb : xor dword ptr [rcx], ebp ; add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xf748
0x000000000043ea27 : xor dword ptr [rdi + rcx*2], 0 ; ret
0x0000000000440953 : xor dword ptr [rsi], eax ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000049d799 : xor eax, 0x22e5b2 ; mov qword ptr [rsi + 0x28], rax ; ret
0x000000000049d641 : xor eax, 0x22e70a ; mov qword ptr [rsi + 0x28], rax ; ret
0x000000000048db49 : xor eax, 0x40b9 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040ea0f : xor eax, dword ptr [0x30] ; call rax
0x000000000049c48d : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000477d07 : xor eax, eax ; add rsp, 0x48 ; ret
0x0000000000477ddf : xor eax, eax ; add rsp, 0x68 ; ret
0x0000000000473e2a : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004511e9 : xor eax, eax ; add rsp, 8 ; ret
0x0000000000464797 : xor eax, eax ; call rbx
0x000000000046a3ab : xor eax, eax ; cmp rdi, rdx ; ja 0x46a3e0 ; ret
0x0000000000441e17 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x0000000000442015 : xor eax, eax ; leave ; ret
0x00000000004626d9 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000043fe8b : xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000441f8f : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000041e22d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047aae8 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000040ec1d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000422ecc : xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004125bc : xor eax, eax ; pop rbx ; ret
0x0000000000401550 : xor eax, eax ; ret
0x000000000042db7e : xor eax, eax ; sub eax, ecx ; ret
0x000000000043da58 : xor eax, eax ; test dh, 0xf0 ; je 0x43da2b ; movzx eax, dl ; pop rbx ; ret
0x000000000046a730 : xor eax, eax ; test r11b, r11b ; je 0x46a729 ; ret
0x00000000004135b0 : xor eax, eax ; test rdx, rdx ; jne 0x4135c7 ; ret
0x0000000000467063 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004736c8 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000469edd : xor ecx, dword ptr [rax + 0x39] ; ret 0xdd72
0x0000000000447601 : xor ecx, dword ptr [rax - 0x77] ; ret
0x0000000000465a75 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000004a2ae8 : xor ecx, eax ; clc ; push qword ptr [rcx + 0x31fff8c1] ; ret 0xfff8
0x000000000044e6c2 : xor ecx, eax ; ret 0x4809
0x00000000004731be : xor edi, edi ; call 0x43f444
0x000000000040e9c7 : xor edx, dword ptr [0x30] ; call rdx
0x00000000004a2af0 : xor edx, eax ; clc ; push qword ptr [rcx + 0x41fff8c2] ; ret
0x0000000000444043 : xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x00000000004437dc : xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x4437cc
0x0000000000459a33 : xor edx, edx ; div ecx ; add eax, r8d ; ret
0x000000000047a089 : xor edx, edx ; div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000469efe : xor edx, edx ; jmp 0x469ec8
0x0000000000473434 : xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004156a9 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000417a8c : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000487783 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000440321 : xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x00000000004448d9 : xor esi, dword ptr [rdx] ; add eax, dword ptr [rax] ; mov rdi, r14 ; call r15
0x0000000000401665 : xor esi, esi ; mov edi, 1 ; call rax
0x000000000047a319 : xor esi, esi ; mov edi, dword ptr [rip + 0x2516a3] ; jmp rax
0x000000000043f571 : xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x0000000000440323 : xor esi, esi ; mov rbx, rax ; call rax
0x0000000000440348 : xor esi, esi ; mov rdi, r12 ; call rbx
0x000000000044036d : xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000440391 : xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000004403b1 : xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000464796 : xor r8d, r8d ; call rbx
0x000000000040ea0e : xor rax, qword ptr [0x30] ; call rax
0x000000000040ea0d : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000042564f : xor rax, rax ; ret
0x000000000040e9c6 : xor rdx, qword ptr [0x30] ; call rdx
0x000000000040e9c5 : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 9047
